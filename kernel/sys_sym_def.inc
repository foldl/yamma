def_bif(ReplaceCar);    // bonus!
def_bif(ReplaceCdr);
def_bif(Stack);
def_bif(While);
def_bif(For);
def_bif(AddTo);
def_bif(SubtractFrom);
def_bif(TimesBy);
def_bif(DivideBy);
def_bif(Increment);
def_bif(Decrement);
def_bif(PreIncrement);
def_bif(PreDecrement);
def_bif(Part);
def_bif(Timing);
def_bif(Flatten);
def_bif(Reverse);
def_bif(Hash);
def_bif(QuotientRemainder);
def_bif(DownValues);
def_bif(Iterate);

    sym_Abort = create_sys("Abort", aProtected);
    sym_AbortProtect = create_sys("AbortProtect", aHoldAll | aProtected);
    sym_Above = create_sys("Above", aProtected);
    sym_Abs = create_sys("Abs", aListable | aNumericFunction | aProtected);
    sym_AbsoluteCurrentValue = create_sys("AbsoluteCurrentValue", aProtected | aReadProtected);
    sym_AbsoluteDashing = create_sys("AbsoluteDashing", aProtected | aReadProtected);
    sym_AbsoluteOptions = create_sys("AbsoluteOptions", aProtected | aReadProtected);
    sym_AbsolutePointSize = create_sys("AbsolutePointSize", aProtected | aReadProtected);
    sym_AbsoluteThickness = create_sys("AbsoluteThickness", aProtected | aReadProtected);
    sym_AbsoluteTime = create_sys("AbsoluteTime", aProtected);
    sym_AbsoluteTiming = create_sys("AbsoluteTiming", aHoldAll | aProtected | aSequenceHold);
    sym_AccountingForm = create_sys("AccountingForm", aProtected);
    sym_Accumulate = create_sys("Accumulate", aProtected);
    sym_Accuracy = create_sys("Accuracy", aProtected);
    sym_AccuracyGoal = create_sys("AccuracyGoal", aProtected);
    sym_ActionDelay = create_sys("ActionDelay", aProtected);
    sym_ActionMenu = create_sys("ActionMenu", aProtected | aReadProtected);
    sym_Active = create_sys("Active", aProtected);
    sym_ActiveItem = create_sys("ActiveItem", aProtected);
    sym_AddOnHelpPath = create_sys("AddOnHelpPath", aProtected);
    sym_AddTo = create_sys2("AddTo", aHoldFirst | aProtected, BIF_AddTo);
    sym_AdjustmentBox = create_sys("AdjustmentBox", aProtected | aReadProtected);
    sym_AdjustmentBoxOptions = create_sys("AdjustmentBoxOptions", aProtected);
    sym_AffineTransform = create_sys("AffineTransform", aProtected | aReadProtected);
    sym_After = create_sys("After", aProtected);
    sym_AiryAi = create_sys("AiryAi", aListable | aNumericFunction | aProtected);
    sym_AiryAiPrime = create_sys("AiryAiPrime", aListable | aNumericFunction | aProtected);
    sym_AiryAiZero = create_sys("AiryAiZero", aProtected | aReadProtected);
    sym_AiryBi = create_sys("AiryBi", aListable | aNumericFunction | aProtected);
    sym_AiryBiPrime = create_sys("AiryBiPrime", aListable | aNumericFunction | aProtected);
    sym_AiryBiZero = create_sys("AiryBiZero", aProtected | aReadProtected);
    sym_AlgebraicIntegerQ = create_sys("AlgebraicIntegerQ", aListable | aProtected);
    sym_AlgebraicNumber = create_sys("AlgebraicNumber", aNHoldAll | aProtected | aReadProtected);
    sym_AlgebraicNumberDenominator = create_sys("AlgebraicNumberDenominator", aListable | aProtected);
    sym_AlgebraicNumberNorm = create_sys("AlgebraicNumberNorm", aListable | aProtected);
    sym_AlgebraicNumberPolynomial = create_sys("AlgebraicNumberPolynomial", aProtected | aReadProtected);
    sym_AlgebraicNumberTrace = create_sys("AlgebraicNumberTrace", aListable | aProtected);
    sym_AlgebraicRules = create_sys("AlgebraicRules", aProtected);
    sym_AlgebraicRulesData = create_sys("AlgebraicRulesData", aProtected);
    sym_Algebraics = create_sys("Algebraics", aProtected);
    sym_AlgebraicUnitQ = create_sys("AlgebraicUnitQ", aListable | aProtected);
    sym_Alias = create_sys("Alias", aProtected);
    sym_Alignment = create_sys("Alignment", aProtected);
    sym_AlignmentMarker = create_sys("AlignmentMarker", aProtected);
    sym_AlignmentPoint = create_sys("AlignmentPoint", aProtected);
    sym_All = create_sys("All", aProtected);
    sym_AllowInlineCells = create_sys("AllowInlineCells", aProtected);
    sym_AllowScriptLevelChange = create_sys("AllowScriptLevelChange", aProtected);
    sym_Alternatives = create_sys("Alternatives", aProtected);
    sym_AmbientLight = create_sys("AmbientLight", aProtected);
    sym_Analytic = create_sys("Analytic", aProtected);
    sym_AnchoredSearch = create_sys("AnchoredSearch", aProtected);
    sym_And = create_sys2("And", aFlat | aHoldAll | aOneIdentity | aProtected, BIF_And);
    sym_AngleBracket = create_sys("AngleBracket", 0);
    sym_Animate = create_sys("Animate", aHoldAll | aProtected | aReadProtected);
    sym_AnimationCycleOffset = create_sys("AnimationCycleOffset", aProtected);
    sym_AnimationCycleRepetitions = create_sys("AnimationCycleRepetitions", aProtected);
    sym_AnimationDirection = create_sys("AnimationDirection", aProtected);
    sym_AnimationDisplayTime = create_sys("AnimationDisplayTime", aProtected);
    sym_AnimationRate = create_sys("AnimationRate", aProtected);
    sym_AnimationRepetitions = create_sys("AnimationRepetitions", aProtected);
    sym_AnimationRunning = create_sys("AnimationRunning", aProtected);
    sym_Animator = create_sys("Animator", aProtected | aReadProtected);
    sym_AnimatorBox = create_sys("AnimatorBox", aProtected | aReadProtected);
    sym_AnimatorBoxOptions = create_sys("AnimatorBoxOptions", aProtected);
    sym_AnimatorElements = create_sys("AnimatorElements", aProtected);
    sym_Annotation = create_sys("Annotation", aProtected | aReadProtected);
    sym_Antialiasing = create_sys("Antialiasing", aProtected);
    sym_Apart = create_sys("Apart", aListable | aProtected);
    sym_ApartSquareFree = create_sys("ApartSquareFree", aProtected);
    sym_Appearance = create_sys("Appearance", aProtected);
    sym_AppearanceElements = create_sys("AppearanceElements", aProtected | aReadProtected);
    sym_AppellF1 = create_sys("AppellF1", aProtected | aReadProtected);
    sym_Append = create_sys2("Append", aProtected, BIF_Append);
    sym_AppendTo = create_sys("AppendTo", aHoldFirst | aProtected);
    sym_Apply = create_sys2("Apply", aProtected, BIF_Apply);
    sym_ArcCos = create_sys("ArcCos", aListable | aNumericFunction | aProtected | aReadProtected);
    sym_ArcCosh = create_sys("ArcCosh", aListable | aNumericFunction | aProtected | aReadProtected);
    sym_ArcCot = create_sys("ArcCot", aListable | aNumericFunction | aProtected | aReadProtected);
    sym_ArcCoth = create_sys("ArcCoth", aListable | aNumericFunction | aProtected | aReadProtected);
    sym_ArcCsc = create_sys("ArcCsc", aListable | aNumericFunction | aProtected | aReadProtected);
    sym_ArcCsch = create_sys("ArcCsch", aListable | aNumericFunction | aProtected | aReadProtected);
    sym_ArcSec = create_sys("ArcSec", aListable | aNumericFunction | aProtected | aReadProtected);
    sym_ArcSech = create_sys("ArcSech", aListable | aNumericFunction | aProtected | aReadProtected);
    sym_ArcSin = create_sys("ArcSin", aListable | aNumericFunction | aProtected | aReadProtected);
    sym_ArcSinh = create_sys("ArcSinh", aListable | aNumericFunction | aProtected | aReadProtected);
    sym_ArcTan = create_sys("ArcTan", aListable | aNumericFunction | aProtected | aReadProtected);
    sym_ArcTanh = create_sys("ArcTanh", aListable | aNumericFunction | aProtected | aReadProtected);
    sym_Arg = create_sys("Arg", aListable | aNumericFunction | aProtected);
    sym_ArgumentCountQ = create_sys("ArgumentCountQ", aProtected | aReadProtected);
    sym_ArithmeticGeometricMean = create_sys("ArithmeticGeometricMean", aListable | aNumericFunction | aOrderless | aProtected | aReadProtected);
    sym_Array = create_sys("Array", aProtected);
    sym_ArrayDepth = create_sys("ArrayDepth", aProtected);
    sym_ArrayFlatten = create_sys("ArrayFlatten", aProtected);
    sym_ArrayPlot = create_sys("ArrayPlot", aProtected | aReadProtected);
    sym_ArrayQ = create_sys("ArrayQ", aProtected);
    sym_ArrayRules = create_sys("ArrayRules", aProtected);
    sym_Arrow = create_sys("Arrow", aProtected | aReadProtected);
    sym_ArrowBox = create_sys("ArrowBox", aHoldAll | aProtected | aReadProtected);
    sym_Arrowheads = create_sys("Arrowheads", aProtected);
    sym_AspectRatio = create_sys("AspectRatio", aProtected);
    sym_AspectRatioFixed = create_sys("AspectRatioFixed", aProtected);
    sym_Assuming = create_sys("Assuming", aHoldRest | aProtected);
    sym_Assumptions = create_sys("Assumptions", aProtected);
    sym_AstronomicalData = create_sys("AstronomicalData", aProtected | aReadProtected);
    sym_AtomQ = create_sys2("AtomQ", aProtected, BIF_AtomQ);
    sym_Attributes = create_sys2("Attributes", aHoldAll | aListable | aProtected, BIF_Attributes);
    sym_AutoAction = create_sys("AutoAction", aProtected);
    sym_AutoDelete = create_sys("AutoDelete", aProtected);
    sym_AutoEvaluateEvents = create_sys("AutoEvaluateEvents", aProtected);
    sym_AutoGeneratedPackage = create_sys("AutoGeneratedPackage", aProtected);
    sym_AutoIndent = create_sys("AutoIndent", aProtected);
    sym_AutoIndentSpacings = create_sys("AutoIndentSpacings", aProtected);
    sym_AutoItalicWords = create_sys("AutoItalicWords", aProtected);
    sym_AutoloadPath = create_sys("AutoloadPath", aProtected);
    sym_AutoMatch = create_sys("AutoMatch", 0);
    sym_Automatic = create_sys("Automatic", aProtected);
    sym_AutoMultiplicationSymbol = create_sys("AutoMultiplicationSymbol", aProtected);
    sym_AutoNumberFormatting = create_sys("AutoNumberFormatting", aProtected);
    sym_AutoOpenNotebooks = create_sys("AutoOpenNotebooks", aProtected);
    sym_AutoOpenPalettes = create_sys("AutoOpenPalettes", aProtected);
    sym_AutorunSequencing = create_sys("AutorunSequencing", aProtected | aReadProtected);
    sym_AutoScaling = create_sys("AutoScaling", aProtected);
    sym_AutoScroll = create_sys("AutoScroll", aProtected);
    sym_AutoSpacing = create_sys("AutoSpacing", aProtected);
    sym_AutoStyleOptions = create_sys("AutoStyleOptions", aProtected);
    sym_AutoStyleWords = create_sys("AutoStyleWords", aProtected);
    sym_Axes = create_sys("Axes", aProtected);
    sym_AxesEdge = create_sys("AxesEdge", aProtected);
    sym_AxesLabel = create_sys("AxesLabel", aProtected);
    sym_AxesOrigin = create_sys("AxesOrigin", aProtected);
    sym_AxesStyle = create_sys("AxesStyle", aProtected);
    sym_Axis = create_sys("Axis", aProtected);
    sym_Back = create_sys("Back", aProtected);
    sym_Background = create_sys("Background", aProtected);
    sym_BackgroundTasksSettings = create_sys("BackgroundTasksSettings", aProtected);
    sym_Backslash = create_sys("Backslash", 0);
    sym_Backsubstitution = create_sys("Backsubstitution", aProtected);
    sym_Backward = create_sys("Backward", aProtected);
    sym_Band = create_sys("Band", aProtected);
    sym_BaseForm = create_sys("BaseForm", aProtected);
    sym_Baseline = create_sys("Baseline", aProtected);
    sym_BaselinePosition = create_sys("BaselinePosition", aProtected);
    sym_BaseStyle = create_sys("BaseStyle", aProtected);
    sym_Because = create_sys("Because", 0);
    sym_Beep = create_sys("Beep", aProtected | aReadProtected);
    sym_Before = create_sys("Before", aProtected);
    sym_Begin = create_sys("Begin", aProtected);
    sym_BeginDialogPacket = create_sys("BeginDialogPacket", aProtected | aReadProtected);
    sym_BeginFrontEndInteractionPacket = create_sys("BeginFrontEndInteractionPacket", aProtected);
    sym_BeginPackage = create_sys("BeginPackage", aProtected);
    sym_BellB = create_sys("BellB", aListable | aNumericFunction | aProtected | aReadProtected);
    sym_Below = create_sys("Below", aProtected);
    sym_BernoulliB = create_sys("BernoulliB", aListable | aProtected);
    sym_BernoulliDistribution = create_sys("BernoulliDistribution", aProtected | aReadProtected);
    sym_BesselI = create_sys("BesselI", aListable | aNumericFunction | aProtected);
    sym_BesselJ = create_sys("BesselJ", aListable | aNumericFunction | aProtected);
    sym_BesselJZero = create_sys("BesselJZero", aProtected | aReadProtected);
    sym_BesselK = create_sys("BesselK", aListable | aNumericFunction | aProtected);
    sym_BesselY = create_sys("BesselY", aListable | aNumericFunction | aProtected);
    sym_BesselYZero = create_sys("BesselYZero", aProtected | aReadProtected);
    sym_Beta = create_sys("Beta", aListable | aNumericFunction | aProtected);
    sym_BetaBinomialDistribution = create_sys("BetaBinomialDistribution", aProtected | aReadProtected);
    sym_BetaDistribution = create_sys("BetaDistribution", aProtected | aReadProtected);
    sym_BetaNegativeBinomialDistribution = create_sys("BetaNegativeBinomialDistribution", aProtected | aReadProtected);
    sym_BetaRegularized = create_sys("BetaRegularized", aListable | aNumericFunction | aProtected);
    sym_BinaryFormat = create_sys("BinaryFormat", aProtected);
    sym_BinaryRead = create_sys("BinaryRead", aProtected | aReadProtected);
    sym_BinaryReadList = create_sys("BinaryReadList", aProtected | aReadProtected);
    sym_BinaryWrite = create_sys("BinaryWrite", aProtected | aReadProtected);
    sym_BinCounts = create_sys("BinCounts", aProtected | aReadProtected);
    sym_BinLists = create_sys("BinLists", aProtected | aReadProtected);
    sym_Binomial = create_sys("Binomial", aListable | aNumericFunction | aProtected);
    sym_BinomialDistribution = create_sys("BinomialDistribution", aProtected | aReadProtected);
    sym_BitAnd = create_sys("BitAnd", aFlat | aListable | aOneIdentity | aOrderless | aProtected);
    sym_BitClear = create_sys("BitClear", aListable | aProtected);
    sym_BitGet = create_sys("BitGet", aListable | aProtected);
    sym_BitLength = create_sys("BitLength", aListable | aProtected);
    sym_BitNot = create_sys("BitNot", aListable | aProtected);
    sym_BitOr = create_sys("BitOr", aFlat | aListable | aOneIdentity | aOrderless | aProtected);
    sym_BitSet = create_sys("BitSet", aListable | aProtected);
    sym_BitShiftLeft = create_sys("BitShiftLeft", aListable | aProtected);
    sym_BitShiftRight = create_sys("BitShiftRight", aListable | aProtected);
    sym_BitXor = create_sys("BitXor", aFlat | aListable | aOneIdentity | aOrderless | aProtected);
    sym_Black = create_sys("Black", aProtected);
    sym_Blank = create_sys("Blank", aProtected);
    sym_BlankForm = create_sys("BlankForm", aProtected);
    sym_BlankNullSequence = create_sys("BlankNullSequence", aProtected);
    sym_BlankSequence = create_sys("BlankSequence", aProtected);
    sym_Blend = create_sys("Blend", aProtected | aReadProtected);
    sym_Block = create_sys("Block", aHoldAll | aProtected);
    sym_BlockRandom = create_sys("BlockRandom", aHoldAll | aProtected);
    sym_Blue = create_sys("Blue", aProtected);
    sym_Bold = create_sys("Bold", aProtected);
    sym_Bookmarks = create_sys("Bookmarks", aProtected | aReadProtected);
    sym_Boole = create_sys("Boole", aListable | aProtected);
    sym_Booleans = create_sys("Booleans", aProtected);
    sym_Bottom = create_sys("Bottom", aProtected);
    sym_BoundaryStyle = create_sys("BoundaryStyle", aProtected);
    sym_Bounds = create_sys("Bounds", aProtected);
    sym_Box = create_sys("Box", aProtected);
    sym_BoxBaselineShift = create_sys("BoxBaselineShift", aProtected);
    sym_BoxData = create_sys("BoxData", aProtected);
    sym_BoxDimensions = create_sys("BoxDimensions", aProtected);
    sym_Boxed = create_sys("Boxed", aProtected);
    sym_Boxes = create_sys("Boxes", aProtected);
    sym_BoxForm = create_sys("BoxForm", aProtected);
    sym_BoxFormFormatTypes = create_sys("BoxFormFormatTypes", aProtected);
    sym_BoxFrame = create_sys("BoxFrame", aProtected);
    sym_BoxMargins = create_sys("BoxMargins", aProtected);
    sym_BoxRatios = create_sys("BoxRatios", aProtected);
    sym_BoxRegion = create_sys("BoxRegion", aProtected);
    sym_BoxRotation = create_sys("BoxRotation", aProtected);
    sym_BoxStyle = create_sys("BoxStyle", aProtected);
    sym_BracketingBar = create_sys("BracketingBar", 0);
    sym_BrayCurtisDistance = create_sys("BrayCurtisDistance", aProtected);
    sym_Break = create_sys("Break", aProtected);
    sym_Brown = create_sys("Brown", aProtected);
    sym_BrowserCategory = create_sys("BrowserCategory", aProtected);
    sym_Button = create_sys("Button", aHoldRest | aProtected | aReadProtected);
    sym_ButtonBox = create_sys("ButtonBox", aProtected | aReadProtected);
    sym_ButtonBoxOptions = create_sys("ButtonBoxOptions", aProtected);
    sym_ButtonCell = create_sys("ButtonCell", aProtected);
    sym_ButtonContents = create_sys("ButtonContents", aProtected);
    sym_ButtonData = create_sys("ButtonData", aProtected);
    sym_ButtonEvaluator = create_sys("ButtonEvaluator", aProtected);
    sym_ButtonExpandable = create_sys("ButtonExpandable", aProtected);
    sym_ButtonFrame = create_sys("ButtonFrame", aProtected);
    sym_ButtonFunction = create_sys("ButtonFunction", aProtected);
    sym_ButtonMargins = create_sys("ButtonMargins", aProtected);
    sym_ButtonMinHeight = create_sys("ButtonMinHeight", aProtected);
    sym_ButtonNote = create_sys("ButtonNote", aProtected);
    sym_ButtonNotebook = create_sys("ButtonNotebook", aProtected | aReadProtected);
    sym_ButtonSource = create_sys("ButtonSource", aProtected);
    sym_ButtonStyle = create_sys("ButtonStyle", aProtected);
    sym_ButtonStyleMenuListing = create_sys("ButtonStyleMenuListing", aProtected);
    sym_Byte = create_sys("Byte", aProtected);
    sym_ByteCount = create_sys("ByteCount", aProtected);
    sym_ByteOrdering = create_sys("ByteOrdering", aProtected);
    sym_C = create_sys("C", aNHoldAll | aProtected);
    sym_CachedValue = create_sys("CachedValue", aProtected);
    sym_CacheGraphics = create_sys("CacheGraphics", aProtected);
    sym_CallPacket = create_sys("CallPacket", aProtected | aReadProtected);
    sym_CanberraDistance = create_sys("CanberraDistance", aProtected);
    sym_Cancel = create_sys("Cancel", aListable | aProtected);
    sym_CancelButton = create_sys("CancelButton", aHoldAll | aProtected | aReadProtected);
    sym_Cap = create_sys("Cap", 0);
    sym_CapitalDifferentialD = create_sys("CapitalDifferentialD", 0);
    sym_Car = create_sys2("Car", aProtected, BIF_Car);
    sym_Cdr = create_sys2("Cdr", aProtected, BIF_Cdr);
    sym_CarmichaelLambda = create_sys("CarmichaelLambda", aListable | aProtected);
    sym_Cases = create_sys("Cases", aProtected);
    sym_Catalan = create_sys("Catalan", aConstant | aProtected);
    sym_CatalanNumber = create_sys("CatalanNumber", aProtected | aReadProtected);
    sym_Catch = create_sys("Catch", aHoldFirst | aProtected);
    sym_CauchyDistribution = create_sys("CauchyDistribution", aProtected | aReadProtected);
    sym_CDF = create_sys("CDF", aProtected | aReadProtected);
    sym_Ceiling = create_sys2("Ceiling", aListable | aNumericFunction | aProtected, BIF_Ceiling);
    sym_Cell = create_sys("Cell", aProtected | aReadProtected);
    sym_CellAutoOverwrite = create_sys("CellAutoOverwrite", aProtected);
    sym_CellBaseline = create_sys("CellBaseline", aProtected);
    sym_CellBoundingBox = create_sys("CellBoundingBox", aProtected);
    sym_CellBracketOptions = create_sys("CellBracketOptions", aProtected);
    sym_CellChangeTimes = create_sys("CellChangeTimes", aProtected);
    sym_CellContents = create_sys("CellContents", aProtected);
    sym_CellContext = create_sys("CellContext", aProtected);
    sym_CellDingbat = create_sys("CellDingbat", aProtected);
    sym_CellDynamicExpression = create_sys("CellDynamicExpression", aProtected);
    sym_CellEditDuplicate = create_sys("CellEditDuplicate", aProtected);
    sym_CellElementsBoundingBox = create_sys("CellElementsBoundingBox", aProtected);
    sym_CellElementSpacings = create_sys("CellElementSpacings", aProtected);
    sym_CellEpilog = create_sys("CellEpilog", aProtected);
    sym_CellEvaluationDuplicate = create_sys("CellEvaluationDuplicate", aProtected);
    sym_CellEvaluationFunction = create_sys("CellEvaluationFunction", aProtected);
    sym_CellEventActions = create_sys("CellEventActions", aProtected);
    sym_CellFrame = create_sys("CellFrame", aProtected);
    sym_CellFrameColor = create_sys("CellFrameColor", aProtected);
    sym_CellFrameLabelMargins = create_sys("CellFrameLabelMargins", aProtected);
    sym_CellFrameLabels = create_sys("CellFrameLabels", aProtected);
    sym_CellFrameMargins = create_sys("CellFrameMargins", aProtected);
    sym_CellGroup = create_sys("CellGroup", aProtected | aReadProtected);
    sym_CellGroupData = create_sys("CellGroupData", aProtected);
    sym_CellGrouping = create_sys("CellGrouping", aProtected);
    sym_CellGroupingRules = create_sys("CellGroupingRules", aProtected);
    sym_CellHorizontalScrolling = create_sys("CellHorizontalScrolling", aProtected);
    sym_CellID = create_sys("CellID", aProtected);
    sym_CellLabel = create_sys("CellLabel", aProtected);
    sym_CellLabelAutoDelete = create_sys("CellLabelAutoDelete", aProtected);
    sym_CellLabelMargins = create_sys("CellLabelMargins", aProtected);
    sym_CellLabelPositioning = create_sys("CellLabelPositioning", aProtected);
    sym_CellMargins = create_sys("CellMargins", aProtected);
    sym_CellObject = create_sys("CellObject", aProtected);
    sym_CellOpen = create_sys("CellOpen", aProtected);
    sym_CellPasswords = create_sys("CellPasswords", aProtected);
    sym_CellPrint = create_sys("CellPrint", aProtected | aReadProtected);
    sym_CellProlog = create_sys("CellProlog", aProtected);
    sym_CellSize = create_sys("CellSize", aProtected);
    sym_CellStyle = create_sys("CellStyle", aProtected);
    sym_CellTags = create_sys("CellTags", aProtected);
    sym_CellularAutomaton = create_sys("CellularAutomaton", aProtected);
    sym_Center = create_sys("Center", aProtected);
    sym_CenterDot = create_sys("CenterDot", 0);
    sym_CentralMoment = create_sys("CentralMoment", aProtected | aReadProtected);
    sym_CForm = create_sys("CForm", aProtected);
    sym_Character = create_sys("Character", aProtected);
    sym_CharacterEncoding = create_sys("CharacterEncoding", aProtected);
    sym_CharacterEncodingsPath = create_sys("CharacterEncodingsPath", aProtected);
    sym_CharacteristicFunction = create_sys("CharacteristicFunction", aProtected | aReadProtected);
    sym_CharacteristicPolynomial = create_sys("CharacteristicPolynomial", aProtected);
    sym_CharacterRange = create_sys("CharacterRange", aProtected | aReadProtected);
    sym_Characters = create_sys2("Characters", aListable | aProtected, BIF_Characters);
    sym_ChebyshevDistance = create_sys("ChebyshevDistance", aProtected);
    sym_ChebyshevT = create_sys("ChebyshevT", aListable | aNumericFunction | aProtected);
    sym_ChebyshevU = create_sys("ChebyshevU", aListable | aNumericFunction | aProtected);
    sym_Check = create_sys("Check", aHoldAll | aProtected);
    sym_CheckAbort = create_sys("CheckAbort", aHoldAll | aProtected);
    sym_CheckAll = create_sys("CheckAll", aHoldAll | aProtected);
    sym_Checkbox = create_sys("Checkbox", aProtected | aReadProtected);
    sym_CheckboxBar = create_sys("CheckboxBar", aProtected | aReadProtected);
    sym_CheckboxBox = create_sys("CheckboxBox", aProtected | aReadProtected);
    sym_CheckboxBoxOptions = create_sys("CheckboxBoxOptions", aProtected);
    sym_ChemicalData = create_sys("ChemicalData", aProtected | aReadProtected);
    sym_ChiDistribution = create_sys("ChiDistribution", aProtected | aReadProtected);
    sym_ChineseRemainder = create_sys("ChineseRemainder", aProtected | aReadProtected);
    sym_ChiSquareDistribution = create_sys("ChiSquareDistribution", aProtected | aReadProtected);
    sym_ChoiceDialog = create_sys("ChoiceDialog", aProtected | aReadProtected);
    sym_CholeskyDecomposition = create_sys("CholeskyDecomposition", aProtected);
    sym_Chop = create_sys("Chop", aProtected);
    sym_Circle = create_sys("Circle", aProtected | aReadProtected);
    sym_CircleBox = create_sys("CircleBox", aHoldAll | aProtected | aReadProtected);
    sym_CircleDot = create_sys("CircleDot", 0);
    sym_CircleMinus = create_sys("CircleMinus", 0);
    sym_CirclePlus = create_sys("CirclePlus", 0);
    sym_CircleTimes = create_sys("CircleTimes", 0);
    sym_CityData = create_sys("CityData", aProtected | aReadProtected);
    sym_Clear = create_sys("Clear", aHoldAll | aProtected);
    sym_ClearAll = create_sys("ClearAll", aHoldAll | aProtected);
    sym_ClearAttributes = create_sys2("ClearAttributes", aHoldFirst | aProtected, BIF_ClearAttributes);
    sym_ClearSystemCache = create_sys("ClearSystemCache", aProtected);
    sym_ClebschGordan = create_sys("ClebschGordan", aProtected | aReadProtected);
    sym_ClickPane = create_sys("ClickPane", aProtected | aReadProtected);
    sym_Clip = create_sys("Clip", aNumericFunction | aProtected);
    sym_ClipboardNotebook = create_sys("ClipboardNotebook", aProtected | aReadProtected);
    sym_ClipFill = create_sys("ClipFill", aProtected);
    sym_ClippingStyle = create_sys("ClippingStyle", aProtected);
    sym_ClipPlanes = create_sys("ClipPlanes", aProtected);
    sym_Clock = create_sys("Clock", aProtected | aReadProtected);
    sym_ClockwiseContourIntegral = create_sys("ClockwiseContourIntegral", 0);
    sym_Close = create_sys("Close", aProtected);
    sym_Closed = create_sys("Closed", aProtected);
    sym_ClosingAutoSave = create_sys("ClosingAutoSave", aProtected);
    sym_ClosingEvent = create_sys("ClosingEvent", aProtected);
    sym_CMYKColor = create_sys("CMYKColor", aProtected | aReadProtected);
    sym_Coefficient = create_sys("Coefficient", aListable | aProtected);
    sym_CoefficientArrays = create_sys("CoefficientArrays", aProtected);
    sym_CoefficientDomain = create_sys("CoefficientDomain", aProtected);
    sym_CoefficientList = create_sys("CoefficientList", aProtected);
    sym_Collect = create_sys("Collect", aProtected);
    sym_Colon = create_sys("Colon", 0);
    sym_ColonForm = create_sys("ColonForm", aProtected);
    sym_ColorData = create_sys("ColorData", aProtected | aReadProtected);
    sym_ColorDataFunction = create_sys("ColorDataFunction", aProtected | aReadProtected);
    sym_ColorFunction = create_sys("ColorFunction", aProtected);
    sym_ColorFunctionScaling = create_sys("ColorFunctionScaling", aProtected);
    sym_ColorMap = create_sys("ColorMap", aProtected);
    sym_ColorOutput = create_sys("ColorOutput", aProtected);
    sym_ColorRules = create_sys("ColorRules", aProtected | aReadProtected);
    sym_ColorSelectorSettings = create_sys("ColorSelectorSettings", aProtected);
    sym_ColorSetter = create_sys("ColorSetter", aProtected | aReadProtected);
    sym_ColorSetterBox = create_sys("ColorSetterBox", aProtected | aReadProtected);
    sym_ColorSetterBoxOptions = create_sys("ColorSetterBoxOptions", aProtected);
    sym_ColorSlider = create_sys("ColorSlider", aProtected | aReadProtected);
    sym_ColorSpace = create_sys("ColorSpace", aProtected | aReadProtected);
    sym_Column = create_sys("Column", aProtected | aReadProtected);
    sym_ColumnAlignments = create_sys("ColumnAlignments", aProtected);
    sym_ColumnBackgrounds = create_sys("ColumnBackgrounds", aProtected);
    sym_ColumnForm = create_sys("ColumnForm", aProtected);
    sym_ColumnLines = create_sys("ColumnLines", aProtected);
    sym_ColumnsEqual = create_sys("ColumnsEqual", aProtected);
    sym_ColumnSpacings = create_sys("ColumnSpacings", aProtected);
    sym_ColumnWidths = create_sys("ColumnWidths", aProtected);
    sym_CommonDefaultFormatTypes = create_sys("CommonDefaultFormatTypes", aProtected);
    sym_Commonest = create_sys("Commonest", aProtected | aReadProtected);
    sym_Compile = create_sys("Compile", aHoldAll | aProtected);
    sym_Compiled = create_sys("Compiled", aProtected);
    sym_CompiledFunction = create_sys("CompiledFunction", aHoldAll | aNHoldAll | aProtected);
    sym_CompileOptimizations = create_sys("CompileOptimizations", aProtected);
    sym_Complement = create_sys("Complement", aProtected);
    sym_CompletionsListPacket = create_sys("CompletionsListPacket", aProtected);
    sym_Complex = create_sys2("Complex", aProtected, BIF_Complex);
    sym_Complexes = create_sys("Complexes", aProtected);
    sym_ComplexExpand = create_sys("ComplexExpand", aProtected);
    sym_ComplexInfinity = create_sys("ComplexInfinity", aProtected);
    sym_ComplexityFunction = create_sys("ComplexityFunction", aProtected);
    sym_Compose = create_sys("Compose", aProtected);
    sym_ComposeList = create_sys("ComposeList", aProtected);
    sym_ComposeSeries = create_sys("ComposeSeries", aProtected);
    sym_Composition = create_sys("Composition", aFlat | aOneIdentity | aProtected);
    sym_CompoundExpression = create_sys2("CompoundExpression", aHoldAll | aProtected 
                                                             | aReadProtected, BIF_CompoundExpression);
    sym_Compress = create_sys("Compress", aProtected);
    sym_CompressedData = create_sys("CompressedData", aProtected);
    sym_Condition = create_sys("Condition", aHoldAll | aProtected);
    sym_ConfigurationPath = create_sys("ConfigurationPath", aProtected);
    sym_Congruent = create_sys("Congruent", 0);
    sym_Conjugate = create_sys("Conjugate", aListable | aNumericFunction | aProtected);
    sym_ConjugateTranspose = create_sys("ConjugateTranspose", aProtected);
    sym_Connect = create_sys("Connect", aProtected);
    sym_Cons = create_sys2("Cons", aLocked | aProtected, BIF_Cons);
    sym_ConsoleMessage = create_sys("ConsoleMessage", aHoldAll);
    sym_ConsoleMessagePacket = create_sys("ConsoleMessagePacket", aProtected);
    sym_ConsolePrint = create_sys("ConsolePrint", 0);
    sym_ConsQ = create_sys2("ConsQ", aProtected, BIF_ConsQ);
    sym_Constant = create_sys("Constant", aProtected);
    sym_ConstantArray = create_sys("ConstantArray", aProtected);
    sym_Constants = create_sys("Constants", aProtected);
    sym_ConstrainedMax = create_sys("ConstrainedMax", aProtected);
    sym_ConstrainedMin = create_sys("ConstrainedMin", aProtected);
    sym_ContentsBoundingBox = create_sys("ContentsBoundingBox", aProtected);
    sym_ContentSelectable = create_sys("ContentSelectable", aProtected);
    sym_Context = create_sys2("Context", aHoldFirst | aProtected, BIF_Context);
    sym_Contexts = create_sys("Contexts", aProtected);
    sym_ContextToFilename = create_sys("ContextToFilename", aProtected);
    sym_ContextToFileName = create_sys("ContextToFileName", aProtected);
    sym_Continuation = create_sys("Continuation", 0);
    sym_Continue = create_sys("Continue", aProtected);
    sym_ContinuedFraction = create_sys("ContinuedFraction", aListable | aProtected);
    sym_ContinuousAction = create_sys("ContinuousAction", aProtected | aReadProtected);
    sym_ContourGraphics = create_sys("ContourGraphics", aProtected | aReadProtected);
    sym_ContourIntegral = create_sys("ContourIntegral", 0);
    sym_ContourLabels = create_sys("ContourLabels", aProtected);
    sym_ContourLines = create_sys("ContourLines", aProtected);
    sym_ContourPlot = create_sys("ContourPlot", aHoldAll | aProtected);
    sym_ContourPlot3D = create_sys("ContourPlot3D", aHoldAll | aProtected);
    sym_Contours = create_sys("Contours", aProtected);
    sym_ContourShading = create_sys("ContourShading", aProtected);
    sym_ContourSmoothing = create_sys("ContourSmoothing", aProtected);
    sym_ContourStyle = create_sys("ContourStyle", aProtected);
    sym_ControlActive = create_sys("ControlActive", aHoldAll | aProtected | aReadProtected);
    sym_ControlAlignment = create_sys("ControlAlignment", aProtected | aReadProtected);
    sym_ControllerDuration = create_sys("ControllerDuration", 0);
    sym_ControllerInformation = create_sys("ControllerInformation", aProtected | aReadProtected);
    sym_ControllerInformationData = create_sys("ControllerInformationData", aProtected | aReadProtected);
    sym_ControllerLinking = create_sys("ControllerLinking", aProtected | aReadProtected);
    sym_ControllerManipulate = create_sys("ControllerManipulate", aHoldAll | aProtected | aReadProtected);
    sym_ControllerMethod = create_sys("ControllerMethod", aProtected | aReadProtected);
    sym_ControllerPath = create_sys("ControllerPath", aProtected | aReadProtected);
    sym_ControllerState = create_sys("ControllerState", aProtected | aReadProtected);
    sym_ControlPlacement = create_sys("ControlPlacement", aProtected | aReadProtected);
    sym_ControlsRendering = create_sys("ControlsRendering", aProtected);
    sym_ControlType = create_sys("ControlType", aProtected | aReadProtected);
    sym_Convergents = create_sys("Convergents", aProtected | aReadProtected);
    sym_ConversionOptions = create_sys("ConversionOptions", aProtected | aReadProtected);
    sym_ConversionRules = create_sys("ConversionRules", aProtected);
    sym_ConvertToBitmapPacket = create_sys("ConvertToBitmapPacket", aProtected);
    sym_ConvertToPostScript = create_sys("ConvertToPostScript", aProtected);
    sym_ConvertToPostScriptPacket = create_sys("ConvertToPostScriptPacket", aProtected);
    sym_CoordinatesToolOptions = create_sys("CoordinatesToolOptions", aProtected);
    sym_CoprimeQ = create_sys("CoprimeQ", aListable | aOrderless | aProtected);
    sym_Coproduct = create_sys("Coproduct", 0);
    sym_Copyable = create_sys("Copyable", aProtected);
    sym_CopyDirectory = create_sys("CopyDirectory", aProtected);
    sym_CopyFile = create_sys("CopyFile", aProtected);
    sym_CopyTag = create_sys("CopyTag", aProtected);
    sym_Correlation = create_sys("Correlation", aProtected | aReadProtected);
    sym_CorrelationDistance = create_sys("CorrelationDistance", aProtected);
    sym_Cos = create_sys("Cos", aListable | aNumericFunction | aProtected);
    sym_Cosh = create_sys("Cosh", aListable | aNumericFunction | aProtected);
    sym_CoshIntegral = create_sys("CoshIntegral", aProtected | aReadProtected);
    sym_CosineDistance = create_sys("CosineDistance", aProtected);
    sym_CosIntegral = create_sys("CosIntegral", aProtected | aReadProtected);
    sym_Cot = create_sys("Cot", aListable | aNumericFunction | aProtected);
    sym_Coth = create_sys("Coth", aListable | aNumericFunction | aProtected);
    sym_Count = create_sys("Count", aProtected);
    sym_CounterAssignments = create_sys("CounterAssignments", aProtected);
    sym_CounterBox = create_sys("CounterBox", aProtected | aReadProtected);
    sym_CounterBoxOptions = create_sys("CounterBoxOptions", aProtected);
    sym_CounterClockwiseContourIntegral = create_sys("CounterClockwiseContourIntegral", 0);
    sym_CounterEvaluator = create_sys("CounterEvaluator", aProtected);
    sym_CounterFunction = create_sys("CounterFunction", aProtected);
    sym_CounterIncrements = create_sys("CounterIncrements", aProtected);
    sym_CounterStyle = create_sys("CounterStyle", aProtected);
    sym_CounterStyleMenuListing = create_sys("CounterStyleMenuListing", aProtected);
    sym_CountRoots = create_sys("CountRoots", aProtected | aReadProtected);
    sym_CountryData = create_sys("CountryData", aProtected | aReadProtected);
    sym_Covariance = create_sys("Covariance", aProtected | aReadProtected);
    sym_CreateDialog = create_sys("CreateDialog", aProtected | aReadProtected);
    sym_CreateDirectory = create_sys("CreateDirectory", aProtected);
    sym_CreateDocument = create_sys("CreateDocument", aProtected | aReadProtected);
    sym_CreateIntermediateDirectories = create_sys("CreateIntermediateDirectories", aProtected);
    sym_CreatePalette = create_sys("CreatePalette", aProtected | aReadProtected);
    sym_CreatePalettePacket = create_sys("CreatePalettePacket", aProtected);
    sym_CreateWindow = create_sys("CreateWindow", aProtected | aReadProtected);
    sym_Cross = create_sys("Cross", aProtected | aReadProtected);
    sym_Csc = create_sys("Csc", aListable | aNumericFunction | aProtected);
    sym_Csch = create_sys("Csch", aListable | aNumericFunction | aProtected);
    sym_Cubics = create_sys("Cubics", aProtected);
    sym_Cuboid = create_sys("Cuboid", aProtected | aReadProtected);
    sym_CuboidBox = create_sys("CuboidBox", aHoldAll | aProtected | aReadProtected);
    sym_Cup = create_sys("Cup", 0);
    sym_CupCap = create_sys("CupCap", 0);
    sym_CurlyDoubleQuote = create_sys("CurlyDoubleQuote", 0);
    sym_CurlyQuote = create_sys("CurlyQuote", 0);
    sym_CurrentlySpeakingPacket = create_sys("CurrentlySpeakingPacket", aProtected);
    sym_CurrentValue = create_sys("CurrentValue", aProtected | aReadProtected);
    sym_Cyan = create_sys("Cyan", aProtected);
    sym_Cyclotomic = create_sys("Cyclotomic", aListable | aProtected);
    sym_Cylinder = create_sys("Cylinder", aProtected | aReadProtected);
    sym_CylinderBox = create_sys("CylinderBox", aHoldAll | aProtected | aReadProtected);
    sym_CylindricalDecomposition = create_sys("CylindricalDecomposition", aProtected);
    sym_D = create_sys("D", aProtected | aReadProtected);
    sym_DampingFactor = create_sys("DampingFactor", aProtected);
    sym_Darker = create_sys("Darker", aProtected | aReadProtected);
    sym_Dashed = create_sys("Dashed", aProtected | aReadProtected);
    sym_Dashing = create_sys("Dashing", aProtected | aReadProtected);
    sym_DataRange = create_sys("DataRange", aProtected);
    sym_DataReversed = create_sys("DataReversed", aProtected | aReadProtected);
    sym_Date = create_sys("Date", aProtected);
    sym_DateDelimiters = create_sys("DateDelimiters", aProtected);
    sym_DateDifference = create_sys("DateDifference", aProtected | aReadProtected);
    sym_DateFunction = create_sys("DateFunction", aProtected | aReadProtected);
    sym_DateList = create_sys("DateList", aProtected);
    sym_DateListPlot = create_sys("DateListPlot", aProtected | aReadProtected);
    sym_DatePattern = create_sys("DatePattern", aProtected | aReadProtected);
    sym_DatePlus = create_sys("DatePlus", aProtected | aReadProtected);
    sym_DateString = create_sys("DateString", aProtected | aReadProtected);
    sym_DateTicksFormat = create_sys("DateTicksFormat", aProtected | aReadProtected);
    sym_Debug = create_sys("Debug", aHoldFirst | aProtected);
    sym_DebugTag = create_sys("DebugTag", aHoldAllComplete | aProtected);
    sym_Decimal = create_sys("Decimal", aProtected);
    sym_DeclareKnownSymbols = create_sys("DeclareKnownSymbols", 0);
    sym_DeclarePackage = create_sys("DeclarePackage", aProtected);
    sym_Decompose = create_sys("Decompose", aListable | aProtected);
    sym_Decrement = create_sys2("Decrement", aHoldFirst | aProtected | aReadProtected, BIF_Decrement);
    sym_DedekindEta = create_sys("DedekindEta", aProtected | aReadProtected);
    sym_Default = create_sys("Default", aProtected);
    sym_DefaultAxesStyle = create_sys("DefaultAxesStyle", aProtected);
    sym_DefaultBaseStyle = create_sys("DefaultBaseStyle", aProtected);
    sym_DefaultBoxStyle = create_sys("DefaultBoxStyle", aProtected);
    sym_DefaultButton = create_sys("DefaultButton", aHoldAll | aProtected | aReadProtected);
    sym_DefaultColor = create_sys("DefaultColor", aProtected);
    sym_DefaultDuplicateCellStyle = create_sys("DefaultDuplicateCellStyle", aProtected);
    sym_DefaultDuration = create_sys("DefaultDuration", aProtected);
    sym_DefaultElement = create_sys("DefaultElement", aProtected);
    sym_DefaultFont = create_sys("DefaultFont", aProtected);
    sym_DefaultFontProperties = create_sys("DefaultFontProperties", aProtected);
    sym_DefaultFormatType = create_sys("DefaultFormatType", aProtected);
    sym_DefaultFormatTypeForStyle = create_sys("DefaultFormatTypeForStyle", aProtected);
    sym_DefaultFrameStyle = create_sys("DefaultFrameStyle", aProtected);
    sym_DefaultInlineFormatType = create_sys("DefaultInlineFormatType", aProtected);
    sym_DefaultInputFormatType = create_sys("DefaultInputFormatType", aProtected);
    sym_DefaultLabelStyle = create_sys("DefaultLabelStyle", aProtected);
    sym_DefaultNaturalLanguage = create_sys("DefaultNaturalLanguage", aProtected);
    sym_DefaultNewCellStyle = create_sys("DefaultNewCellStyle", aProtected);
    sym_DefaultNewInlineCellStyle = create_sys("DefaultNewInlineCellStyle", aProtected);
    sym_DefaultNotebook = create_sys("DefaultNotebook", aProtected);
    sym_DefaultOptions = create_sys("DefaultOptions", aProtected | aReadProtected);
    sym_DefaultOutputFormatType = create_sys("DefaultOutputFormatType", aProtected);
    sym_DefaultStyle = create_sys("DefaultStyle", aProtected);
    sym_DefaultStyleDefinitions = create_sys("DefaultStyleDefinitions", aProtected);
    sym_DefaultTextFormatType = create_sys("DefaultTextFormatType", aProtected);
    sym_DefaultTextInlineFormatType = create_sys("DefaultTextInlineFormatType", aProtected);
    sym_DefaultValues = create_sys("DefaultValues", aHoldAll | aProtected);
    sym_Defer = create_sys("Defer", aHoldAll | aProtected | aReadProtected);
    sym_DefineExternal = create_sys("DefineExternal", aReadProtected);
    sym_Definition = create_sys("Definition", aHoldAll | aProtected);
    sym_Degree = create_sys("Degree", aConstant | aProtected | aReadProtected);
    sym_DegreeLexicographic = create_sys("DegreeLexicographic", aProtected);
    sym_DegreeReverseLexicographic = create_sys("DegreeReverseLexicographic", aProtected);
    sym_Deinitialization = create_sys("Deinitialization", aProtected);
    sym_Del = create_sys("Del", 0);
    sym_Deletable = create_sys("Deletable", aProtected);
    sym_Delete = create_sys("Delete", aProtected);
    sym_DeleteCases = create_sys("DeleteCases", aProtected);
    sym_DeleteContents = create_sys("DeleteContents", aProtected);
    sym_DeleteDirectory = create_sys("DeleteDirectory", aProtected);
    sym_DeleteFile = create_sys("DeleteFile", aProtected);
    sym_DeletionWarning = create_sys("DeletionWarning", aProtected);
    sym_Delimiter = create_sys("Delimiter", aProtected);
    sym_DelimiterFlashTime = create_sys("DelimiterFlashTime", aProtected);
    sym_DelimiterMatching = create_sys("DelimiterMatching", aProtected);
    sym_Delimiters = create_sys("Delimiters", aProtected);
    sym_Denominator = create_sys("Denominator", aListable | aProtected);
    sym_DensityGraphics = create_sys("DensityGraphics", aProtected | aReadProtected);
    sym_DensityPlot = create_sys("DensityPlot", aHoldAll | aProtected);
    sym_DependentVariables = create_sys("DependentVariables", aProtected);
    sym_Deploy = create_sys("Deploy", aProtected | aReadProtected);
    sym_Deployed = create_sys("Deployed", aProtected);
    sym_Depth = create_sys("Depth", aProtected);
    sym_Derivative = create_sys("Derivative", aNHoldAll | aReadProtected);
    sym_Det = create_sys("Det", aProtected);
    sym_DiacriticalPositioning = create_sys("DiacriticalPositioning", aProtected);
    sym_Diagonal = create_sys("Diagonal", aProtected);
    sym_DiagonalMatrix = create_sys("DiagonalMatrix", aProtected);
    sym_Dialog = create_sys("Dialog", aHoldAll | aProtected);
    sym_DialogIndent = create_sys("DialogIndent", 0);
    sym_DialogInput = create_sys("DialogInput", aHoldAll | aProtected | aReadProtected);
    sym_DialogLevel = create_sys("DialogLevel", aProtected);
    sym_DialogNotebook = create_sys("DialogNotebook", aProtected | aReadProtected);
    sym_DialogProlog = create_sys("DialogProlog", aProtected);
    sym_DialogReturn = create_sys("DialogReturn", aHoldFirst | aProtected | aReadProtected);
    sym_DialogSymbols = create_sys("DialogSymbols", aProtected);
    sym_Diamond = create_sys("Diamond", 0);
    sym_DiceDissimilarity = create_sys("DiceDissimilarity", aProtected);
    sym_DictionaryLookup = create_sys("DictionaryLookup", aProtected | aReadProtected);
    sym_DifferenceOrder = create_sys("DifferenceOrder", aProtected);
    sym_Differences = create_sys("Differences", aProtected);
    sym_DifferentialD = create_sys("DifferentialD", 0);
    sym_DigitBlock = create_sys("DigitBlock", aProtected);
    sym_DigitBlockMinimum = create_sys("DigitBlockMinimum", aProtected);
    sym_DigitCharacter = create_sys("DigitCharacter", aProtected | aReadProtected);
    sym_DigitCount = create_sys("DigitCount", aProtected | aReadProtected);
    sym_DigitQ = create_sys("DigitQ", aProtected);
    sym_Dimensions = create_sys("Dimensions", aProtected);
    sym_DiracDelta = create_sys("DiracDelta", aListable | aOrderless | aProtected);
    sym_DirectedEdges = create_sys("DirectedEdges", aProtected);
    sym_DirectedInfinity = create_sys("DirectedInfinity", aProtected | aReadProtected);
    sym_Direction = create_sys("Direction", aProtected);
    sym_Directive = create_sys("Directive", aProtected | aReadProtected);
    sym_Directory = create_sys("Directory", aProtected);
    sym_DirectoryName = create_sys("DirectoryName", aProtected);
    sym_DirectoryStack = create_sys("DirectoryStack", aProtected);
    sym_DisableConsolePrintPacket = create_sys("DisableConsolePrintPacket", aProtected);
    sym_DiscreteDelta = create_sys("DiscreteDelta", aNumericFunction | aOrderless | aProtected);
    sym_DiscreteUniformDistribution = create_sys("DiscreteUniformDistribution", aProtected | aReadProtected);
    sym_Discriminant = create_sys("Discriminant", aListable | aProtected);
    sym_Disk = create_sys("Disk", aProtected | aReadProtected);
    sym_DiskBox = create_sys("DiskBox", aHoldAll | aProtected | aReadProtected);
    sym_Dispatch = create_sys("Dispatch", aProtected | aReadProtected);
    sym_Display = create_sys("Display", aProtected | aReadProtected);
    sym_DisplayAllSteps = create_sys("DisplayAllSteps", aProtected);
    sym_DisplayEndPacket = create_sys("DisplayEndPacket", aProtected | aReadProtected);
    sym_DisplayFlushImagePacket = create_sys("DisplayFlushImagePacket", aProtected);
    sym_DisplayForm = create_sys("DisplayForm", aProtected);
    sym_DisplayFunction = create_sys("DisplayFunction", aProtected);
    sym_DisplayPacket = create_sys("DisplayPacket", aProtected | aReadProtected);
    sym_DisplayRules = create_sys("DisplayRules", aProtected);
    sym_DisplaySetSizePacket = create_sys("DisplaySetSizePacket", aProtected);
    sym_DisplayString = create_sys("DisplayString", aProtected | aReadProtected);
    sym_DisplayTemporary = create_sys("DisplayTemporary", aProtected | aReadProtected);
    sym_DistanceFunction = create_sys("DistanceFunction", aProtected);
    sym_Distribute = create_sys("Distribute", aProtected);
    sym_DistributionDomain = create_sys("DistributionDomain", aProtected | aReadProtected);
    sym_DistributionDomainQ = create_sys("DistributionDomainQ", aProtected | aReadProtected);
    sym_DistributionParameterQ = create_sys("DistributionParameterQ", aProtected | aReadProtected);
    sym_Divide = create_sys("Divide", aListable | aNumericFunction | aProtected);
    sym_DivideBy = create_sys2("DivideBy", aHoldFirst | aProtected, BIF_DivideBy);
    sym_Dividers = create_sys("Dividers", aProtected);
    sym_Divisible = create_sys("Divisible", aListable | aProtected | aReadProtected);
    sym_Divisors = create_sys("Divisors", aListable | aProtected);
    sym_DivisorSigma = create_sys("DivisorSigma", aListable | aProtected);
    sym_Do = create_sys("Do", aHoldAll | aProtected);
    sym_DockedCells = create_sys("DockedCells", aProtected);
    sym_DocumentNotebook = create_sys("DocumentNotebook", aProtected | aReadProtected);
    sym_DOSTextFormat = create_sys("DOSTextFormat", aProtected);
    sym_Dot = create_sys("Dot", aFlat | aOneIdentity | aProtected);
    sym_DotDashed = create_sys("DotDashed", aProtected | aReadProtected);
    sym_DotEqual = create_sys("DotEqual", 0);
    sym_Dotted = create_sys("Dotted", aProtected | aReadProtected);
    sym_DoubleBracketingBar = create_sys("DoubleBracketingBar", 0);
    sym_DoubleContourIntegral = create_sys("DoubleContourIntegral", 0);
    sym_DoubleDownArrow = create_sys("DoubleDownArrow", 0);
    sym_DoubleLeftArrow = create_sys("DoubleLeftArrow", 0);
    sym_DoubleLeftRightArrow = create_sys("DoubleLeftRightArrow", 0);
    sym_DoubleLeftTee = create_sys("DoubleLeftTee", 0);
    sym_DoubleLongLeftArrow = create_sys("DoubleLongLeftArrow", 0);
    sym_DoubleLongLeftRightArrow = create_sys("DoubleLongLeftRightArrow", 0);
    sym_DoubleLongRightArrow = create_sys("DoubleLongRightArrow", 0);
    sym_DoubleRightArrow = create_sys("DoubleRightArrow", 0);
    sym_DoubleRightTee = create_sys("DoubleRightTee", 0);
    sym_DoubleUpArrow = create_sys("DoubleUpArrow", 0);
    sym_DoubleUpDownArrow = create_sys("DoubleUpDownArrow", 0);
    sym_DoubleVerticalBar = create_sys("DoubleVerticalBar", 0);
    sym_DoublyInfinite = create_sys("DoublyInfinite", aProtected);
    sym_Down = create_sys("Down", aProtected);
    sym_DownArrow = create_sys("DownArrow", 0);
    sym_DownArrowBar = create_sys("DownArrowBar", 0);
    sym_DownArrowUpArrow = create_sys("DownArrowUpArrow", 0);
    sym_DownLeftRightVector = create_sys("DownLeftRightVector", 0);
    sym_DownLeftTeeVector = create_sys("DownLeftTeeVector", 0);
    sym_DownLeftVector = create_sys("DownLeftVector", 0);
    sym_DownLeftVectorBar = create_sys("DownLeftVectorBar", 0);
    sym_DownRightTeeVector = create_sys("DownRightTeeVector", 0);
    sym_DownRightVector = create_sys("DownRightVector", 0);
    sym_DownRightVectorBar = create_sys("DownRightVectorBar", 0);
    sym_DownTee = create_sys("DownTee", 0);
    sym_DownTeeArrow = create_sys("DownTeeArrow", 0);
    sym_DownValues = create_sys2("DownValues", aHoldAll | aProtected, BIF_DownValues);
    sym_DragAndDrop = create_sys("DragAndDrop", aProtected);
    sym_DrawHighlighted = create_sys("DrawHighlighted", aProtected);
    sym_Drop = create_sys("Drop", aNHoldRest | aProtected);
    sym_DSolve = create_sys("DSolve", aProtected);
    sym_Dt = create_sys("Dt", aProtected);
    sym_DualLinearProgramming = create_sys("DualLinearProgramming", aProtected);
    sym_DumpGet = create_sys("DumpGet", aProtected);
    sym_DumpSave = create_sys("DumpSave", aHoldRest | aProtected);
    sym_Dynamic = create_sys("Dynamic", aHoldFirst | aProtected | aReadProtected);
    sym_DynamicBox = create_sys("DynamicBox", aHoldAll | aProtected | aReadProtected);
    sym_DynamicBoxOptions = create_sys("DynamicBoxOptions", aProtected);
    sym_DynamicEvaluationTimeout = create_sys("DynamicEvaluationTimeout", aProtected);
    sym_DynamicModule = create_sys("DynamicModule", aHoldAll | aProtected | aReadProtected);
    sym_DynamicModuleBox = create_sys("DynamicModuleBox", aHoldAll | aProtected | aReadProtected);
    sym_DynamicModuleBoxOptions = create_sys("DynamicModuleBoxOptions", aProtected);
    sym_DynamicModuleParent = create_sys("DynamicModuleParent", aProtected | aReadProtected);
    sym_DynamicModuleValues = create_sys("DynamicModuleValues", aProtected);
    sym_DynamicSetting = create_sys("DynamicSetting", aProtected | aReadProtected);
    sym_DynamicUpdating = create_sys("DynamicUpdating", aProtected | aReadProtected);
    sym_DynamicWrapper = create_sys("DynamicWrapper", aHoldRest | aProtected | aReadProtected);
    sym_DynamicWrapperBox = create_sys("DynamicWrapperBox", aHoldRest | aProtected | aReadProtected);
    sym_DynamicWrapperBoxOptions = create_sys("DynamicWrapperBoxOptions", aProtected);
    sym_E = create_sys("E", aConstant | aProtected | aReadProtected);
    sym_EdgeForm = create_sys("EdgeForm", aProtected | aReadProtected);
    sym_EdgeLabeling = create_sys("EdgeLabeling", aProtected);
    sym_EdgeRenderingFunction = create_sys("EdgeRenderingFunction", aProtected);
    sym_Edit = create_sys("Edit", aProtected | aReadProtected);
    sym_Editable = create_sys("Editable", aProtected);
    sym_EditButtonSettings = create_sys("EditButtonSettings", aProtected);
    sym_EditCellTagsSettings = create_sys("EditCellTagsSettings", aProtected);
    sym_EditDefinition = create_sys("EditDefinition", aHoldAll | aProtected | aReadProtected);
    sym_EditDistance = create_sys("EditDistance", aProtected);
    sym_EditIn = create_sys("EditIn", aProtected | aReadProtected);
    sym_EffectiveInterestRate = create_sys("EffectiveInterestRate", aProtected | aReadProtected);
    sym_Eigensystem = create_sys("Eigensystem", aProtected);
    sym_Eigenvalues = create_sys("Eigenvalues", aProtected);
    sym_Eigenvectors = create_sys("Eigenvectors", aProtected);
    sym_Element = create_sys("Element", aProtected);
    sym_ElementData = create_sys("ElementData", aProtected | aReadProtected);
    sym_Eliminate = create_sys("Eliminate", aProtected);
    sym_EliminationOrder = create_sys("EliminationOrder", aProtected);
    sym_EllipticE = create_sys("EllipticE", aListable | aNumericFunction | aProtected);
    sym_EllipticExp = create_sys("EllipticExp", aProtected | aReadProtected);
    sym_EllipticExpPrime = create_sys("EllipticExpPrime", aProtected);
    sym_EllipticF = create_sys("EllipticF", aListable | aNumericFunction | aProtected);
    sym_EllipticK = create_sys("EllipticK", aListable | aNumericFunction | aProtected);
    sym_EllipticLog = create_sys("EllipticLog", aProtected | aReadProtected);
    sym_EllipticNomeQ = create_sys("EllipticNomeQ", aProtected | aReadProtected);
    sym_EllipticPi = create_sys("EllipticPi", aListable | aNumericFunction | aProtected);
    sym_EllipticReducedHalfPeriods = create_sys("EllipticReducedHalfPeriods", aProtected | aReadProtected);
    sym_EllipticTheta = create_sys("EllipticTheta", aListable | aNHoldFirst | aProtected);
    sym_EllipticThetaPrime = create_sys("EllipticThetaPrime", aListable | aNHoldFirst | aProtected);
    sym_EmitSound = create_sys("EmitSound", aProtected | aReadProtected);
    sym_EmphasizeSyntaxErrors = create_sys("EmphasizeSyntaxErrors", aProtected);
    sym_Empty = create_sys("Empty", aProtected);
    sym_EnableConsolePrintPacket = create_sys("EnableConsolePrintPacket", aProtected);
    sym_Enabled = create_sys("Enabled", aProtected);
    sym_Encode = create_sys("Encode", aProtected);
    sym_End = create_sys("End", aProtected);
    sym_EndAdd = create_sys("EndAdd", aProtected);
    sym_EndDialogPacket = create_sys("EndDialogPacket", aProtected | aReadProtected);
    sym_EndFrontEndInteractionPacket = create_sys("EndFrontEndInteractionPacket", aProtected);
    sym_EndOfFile = create_sys("EndOfFile", aProtected);
    sym_EndOfLine = create_sys("EndOfLine", aProtected | aReadProtected);
    sym_EndOfString = create_sys("EndOfString", aProtected);
    sym_EndPackage = create_sys("EndPackage", aProtected);
    sym_EngineeringForm = create_sys("EngineeringForm", aProtected);
    sym_Enter = create_sys("Enter", aProtected);
    sym_EnterExpressionPacket = create_sys("EnterExpressionPacket", aProtected);
    sym_EnterTextPacket = create_sys("EnterTextPacket", aProtected);
    sym_Environment = create_sys("Environment", aProtected);
    sym_Epilog = create_sys("Epilog", aProtected);
    sym_Equal = create_sys2("Equal", aProtected, BIF_Equal);
    sym_EqualColumns = create_sys("EqualColumns", aProtected);
    sym_EqualRows = create_sys("EqualRows", aProtected);
    sym_EqualTilde = create_sys("EqualTilde", 0);
    sym_EquatedTo = create_sys("EquatedTo", aProtected);
    sym_Equilibrium = create_sys("Equilibrium", 0);
    sym_Erf = create_sys("Erf", aListable | aNumericFunction | aProtected);
    sym_Erfc = create_sys("Erfc", aListable | aNumericFunction | aProtected);
    sym_Erfi = create_sys("Erfi", aListable | aNumericFunction | aProtected);
    sym_ErrorBox = create_sys("ErrorBox", aProtected | aReadProtected);
    sym_ErrorBoxOptions = create_sys("ErrorBoxOptions", aProtected);
    sym_ErrorNorm = create_sys("ErrorNorm", aProtected);
    sym_ErrorPacket = create_sys("ErrorPacket", aReadProtected);
    sym_ErrorsDialogSettings = create_sys("ErrorsDialogSettings", aProtected);
    sym_EuclideanDistance = create_sys("EuclideanDistance", aProtected);
    sym_EulerE = create_sys("EulerE", aListable | aProtected);
    sym_EulerGamma = create_sys("EulerGamma", aConstant | aProtected);
    sym_EulerPhi = create_sys("EulerPhi", aListable | aProtected);
    sym_Evaluatable = create_sys("Evaluatable", aProtected);
    sym_Evaluate = create_sys("Evaluate", aProtected);
    sym_Evaluated = create_sys("Evaluated", aProtected);
    sym_EvaluatePacket = create_sys("EvaluatePacket", aProtected);
    sym_EvaluationCell = create_sys("EvaluationCell", aProtected);
    sym_EvaluationCompletionAction = create_sys("EvaluationCompletionAction", aProtected);
    sym_EvaluationMonitor = create_sys("EvaluationMonitor", aProtected);
    sym_EvaluationNotebook = create_sys("EvaluationNotebook", aProtected | aReadProtected);
    sym_EvaluationOrder = create_sys("EvaluationOrder", aProtected);
    sym_Evaluator = create_sys("Evaluator", aProtected);
    sym_EvaluatorNames = create_sys("EvaluatorNames", aProtected);
    sym_EvenQ = create_sys2("EvenQ", aListable | aProtected, BIF_EvenQ);
    sym_EventEvaluator = create_sys("EventEvaluator", aProtected);
    sym_EventHandler = create_sys("EventHandler", aProtected | aReadProtected);
    sym_EventHandlerTag = create_sys("EventHandlerTag", aProtected);
    sym_ExactNumberQ = create_sys("ExactNumberQ", aProtected);
    sym_ExactRootIsolation = create_sys("ExactRootIsolation", aProtected);
    sym_ExampleData = create_sys("ExampleData", aProtected | aReadProtected);
    sym_Except = create_sys("Except", aProtected);
    sym_ExcludedForms = create_sys("ExcludedForms", aProtected);
    sym_Exclusions = create_sys("Exclusions", aProtected);
    sym_ExclusionsStyle = create_sys("ExclusionsStyle", aProtected);
    sym_Exists = create_sys("Exists", aHoldAll | aProtected);
    sym_Exit = create_sys("Exit", aProtected);
    sym_ExitDialog = create_sys("ExitDialog", aProtected);
    sym_Exp = create_sys("Exp", aListable | aNumericFunction | aProtected | aReadProtected);
    sym_Expand = create_sys("Expand", aProtected);
    sym_ExpandAll = create_sys("ExpandAll", aProtected);
    sym_ExpandDenominator = create_sys("ExpandDenominator", aProtected);
    sym_ExpandNumerator = create_sys("ExpandNumerator", aProtected);
    sym_ExpectedValue = create_sys("ExpectedValue", aProtected | aReadProtected);
    sym_ExpIntegralE = create_sys("ExpIntegralE", aListable | aNumericFunction | aProtected);
    sym_ExpIntegralEi = create_sys("ExpIntegralEi", aListable | aNumericFunction | aProtected);
    sym_Exponent = create_sys("Exponent", aListable | aProtected);
    sym_ExponentFunction = create_sys("ExponentFunction", aProtected);
    sym_ExponentialDistribution = create_sys("ExponentialDistribution", aProtected | aReadProtected);
    sym_ExponentialMovingAverage = create_sys("ExponentialMovingAverage", aProtected | aReadProtected);
    sym_ExponentPosition = create_sys("ExponentPosition", aProtected);
    sym_ExponentStep = create_sys("ExponentStep", aProtected);
    sym_Export = create_sys("Export", aProtected | aReadProtected);
    sym_ExportAutoReplacements = create_sys("ExportAutoReplacements", aProtected);
    sym_ExportPacket = create_sys("ExportPacket", aProtected);
    sym_ExportString = create_sys("ExportString", aProtected | aReadProtected);
    sym_Expression = create_sys("Expression", aProtected);
    sym_ExpressionCell = create_sys("ExpressionCell", aProtected | aReadProtected);
    sym_ExpressionPacket = create_sys("ExpressionPacket", aProtected);
    sym_ExpToTrig = create_sys("ExpToTrig", aListable | aProtected);
    sym_ExtendedGCD = create_sys("ExtendedGCD", aListable | aProtected);
    sym_Extension = create_sys("Extension", aProtected);
    sym_ExternalCall = create_sys("ExternalCall", aReadProtected);
    sym_ExternalDataCharacterEncoding = create_sys("ExternalDataCharacterEncoding", aProtected);
    sym_Extract = create_sys("Extract", aNHoldRest | aProtected);
    sym_ExtremeValueDistribution = create_sys("ExtremeValueDistribution", aProtected | aReadProtected);
    sym_FaceForm = create_sys("FaceForm", aProtected | aReadProtected);
    sym_FaceGrids = create_sys("FaceGrids", aProtected);
    sym_FaceGridsStyle = create_sys("FaceGridsStyle", aProtected);
    sym_Factor = create_sys("Factor", aListable | aProtected);
    sym_FactorComplete = create_sys("FactorComplete", aProtected);
    sym_Factorial = create_sys2("Factorial", aListable | aNumericFunction | aProtected, BIF_Factorial);
    sym_Factorial2 = create_sys2("Factorial2", aListable | aNumericFunction | aProtected, BIF_Factorial2);
    sym_FactorInteger = create_sys("FactorInteger", aListable | aProtected);
    sym_FactorList = create_sys("FactorList", aProtected);
    sym_FactorSquareFree = create_sys("FactorSquareFree", aListable | aProtected);
    sym_FactorSquareFreeList = create_sys("FactorSquareFreeList", aProtected);
    sym_FactorTerms = create_sys("FactorTerms", aProtected);
    sym_FactorTermsList = create_sys("FactorTermsList", aProtected);
    sym_Fail = create_sys("Fail", aLocked | aProtected);
    sym_False = create_sys("False", aLocked | aProtected);
    sym_FEDisableConsolePrintPacket = create_sys("FEDisableConsolePrintPacket", aProtected);
    sym_FEEnableConsolePrintPacket = create_sys("FEEnableConsolePrintPacket", aProtected);
    sym_Fibonacci = create_sys("Fibonacci", aListable | aNumericFunction | aProtected | aReadProtected);
    sym_FieldMasked = create_sys("FieldMasked", aProtected);
    sym_FieldSize = create_sys("FieldSize", aProtected);
    sym_File = create_sys("File", aProtected);
    sym_FileByteCount = create_sys("FileByteCount", aProtected);
    sym_FileDate = create_sys("FileDate", aProtected);
    sym_FileFormat = create_sys("FileFormat", aProtected | aReadProtected);
    sym_FileHash = create_sys("FileHash", aProtected | aReadProtected);
    sym_FileInformation = create_sys("FileInformation", 0);
    sym_FileName = create_sys("FileName", aHoldAll | aReadProtected);
    sym_FileNameDialogSettings = create_sys("FileNameDialogSettings", aProtected);
    sym_FileNames = create_sys("FileNames", aProtected);
    sym_FileNameSetter = create_sys("FileNameSetter", aProtected | aReadProtected);
    sym_FilePrint = create_sys("FilePrint", aProtected);
    sym_FileType = create_sys("FileType", aProtected);
    sym_Filling = create_sys("Filling", aProtected);
    sym_FillingStyle = create_sys("FillingStyle", aProtected);
    sym_FilterRules = create_sys("FilterRules", aProtected);
    sym_FinancialData = create_sys("FinancialData", aProtected | aReadProtected);
    sym_Find = create_sys("Find", aProtected);
    sym_FindClusters = create_sys("FindClusters", aProtected);
    sym_FindFit = create_sys("FindFit", aProtected);
    sym_FindInstance = create_sys("FindInstance", aProtected);
    sym_FindList = create_sys("FindList", aProtected);
    sym_FindMaximum = create_sys("FindMaximum", aHoldAll | aProtected);
    sym_FindMinimum = create_sys("FindMinimum", aHoldAll | aProtected);
    sym_FindRoot = create_sys("FindRoot", aHoldAll | aProtected);
    sym_FindSettings = create_sys("FindSettings", aProtected);
    sym_FindShortestTour = create_sys("FindShortestTour", aProtected | aReadProtected);
    sym_FinishDynamic = create_sys("FinishDynamic", 0);
    sym_First = create_sys2("First", aProtected, BIF_First);
    sym_Fit = create_sys("Fit", aProtected);
    sym_FitAll = create_sys("FitAll", aProtected);
    sym_FixedPoint = create_sys("FixedPoint", aProtected);
    sym_FixedPointList = create_sys("FixedPointList", aProtected);
    sym_Flat = create_sys("Flat", aProtected);
    sym_Flatten = create_sys2("Flatten", aProtected, BIF_Flatten);
    sym_FlattenAt = create_sys("FlattenAt", aProtected);
    sym_FlipView = create_sys("FlipView", aProtected | aReadProtected);
    sym_Floor = create_sys2("Floor", aListable | aNumericFunction | aProtected, BIF_Floor);
    sym_FlushPrintOutputPacket = create_sys("FlushPrintOutputPacket", aProtected);
    sym_Fold = create_sys2("Fold", aProtected, BIF_Fold);
    sym_FoldList = create_sys2("FoldList", aProtected, BIF_FoldList);
    sym_Font = create_sys("Font", aProtected);
    sym_FontColor = create_sys("FontColor", aProtected);
    sym_FontFamily = create_sys("FontFamily", aProtected);
    sym_FontForm = create_sys("FontForm", aProtected);
    sym_FontName = create_sys("FontName", aProtected);
    sym_FontOpacity = create_sys("FontOpacity", aProtected);
    sym_FontPostScriptName = create_sys("FontPostScriptName", aProtected);
    sym_FontProperties = create_sys("FontProperties", aProtected);
    sym_FontReencoding = create_sys("FontReencoding", aProtected);
    sym_FontSize = create_sys("FontSize", aProtected);
    sym_FontSlant = create_sys("FontSlant", aProtected);
    sym_FontSubstitutions = create_sys("FontSubstitutions", aProtected);
    sym_FontTracking = create_sys("FontTracking", aProtected);
    sym_FontVariations = create_sys("FontVariations", aProtected);
    sym_FontWeight = create_sys("FontWeight", aProtected);
    sym_For = create_sys2("For", aHoldAll | aProtected, BIF_For);
    sym_ForAll = create_sys("ForAll", aHoldAll | aProtected);
    sym_Format = create_sys("Format", aProtected);
    sym_FormatRules = create_sys("FormatRules", aProtected);
    sym_FormatType = create_sys("FormatType", aProtected);
    sym_FormatTypeAutoConvert = create_sys("FormatTypeAutoConvert", aProtected);
    sym_FormatValues = create_sys("FormatValues", aHoldAll | aProtected);
    sym_FormBox = create_sys("FormBox", aProtected | aReadProtected);
    sym_FormBoxOptions = create_sys("FormBoxOptions", aProtected);
    sym_FortranForm = create_sys("FortranForm", aProtected);
    sym_Forward = create_sys("Forward", aProtected);
    sym_ForwardBackward = create_sys("ForwardBackward", aProtected);
    sym_Fourier = create_sys("Fourier", aProtected);
    sym_FourierCosTransform = create_sys("FourierCosTransform", aProtected | aReadProtected);
    sym_FourierDCT = create_sys("FourierDCT", aProtected);
    sym_FourierDST = create_sys("FourierDST", aProtected);
    sym_FourierParameters = create_sys("FourierParameters", aProtected | aReadProtected);
    sym_FourierSinTransform = create_sys("FourierSinTransform", aProtected | aReadProtected);
    sym_FourierTransform = create_sys("FourierTransform", aProtected | aReadProtected);
    sym_FractionalPart = create_sys("FractionalPart", aListable | aNumericFunction | aProtected);
    sym_FractionBox = create_sys("FractionBox", aProtected | aReadProtected);
    sym_FractionBoxOptions = create_sys("FractionBoxOptions", aProtected);
    sym_FractionLine = create_sys("FractionLine", aProtected);
    sym_Frame = create_sys("Frame", aProtected);
    sym_FrameBox = create_sys("FrameBox", aProtected | aReadProtected);
    sym_FrameBoxOptions = create_sys("FrameBoxOptions", aProtected);
    sym_Framed = create_sys("Framed", aProtected | aReadProtected);
    sym_FrameInset = create_sys("FrameInset", aProtected);
    sym_FrameLabel = create_sys("FrameLabel", aProtected);
    sym_Frameless = create_sys("Frameless", aProtected);
    sym_FrameMargins = create_sys("FrameMargins", aProtected);
    sym_FrameStyle = create_sys("FrameStyle", aProtected);
    sym_FrameTicks = create_sys("FrameTicks", aProtected);
    sym_FrameTicksStyle = create_sys("FrameTicksStyle", aProtected);
    sym_FRatioDistribution = create_sys("FRatioDistribution", aProtected | aReadProtected);
    sym_FreeQ = create_sys("FreeQ", aProtected);
    sym_FresnelC = create_sys("FresnelC", aProtected | aReadProtected);
    sym_FresnelS = create_sys("FresnelS", aProtected | aReadProtected);
    sym_FrobeniusNumber = create_sys("FrobeniusNumber", aProtected);
    sym_FrobeniusSolve = create_sys("FrobeniusSolve", aProtected);
    sym_FromCharacterCode = create_sys2("FromCharacterCode", aProtected, BIF_FromCharacterCode);
    sym_FromContinuedFraction = create_sys("FromContinuedFraction", aProtected | aReadProtected);
    sym_FromDate = create_sys("FromDate", aProtected);
    sym_FromDigits = create_sys("FromDigits", aProtected);
    sym_Front = create_sys("Front", aProtected);
    sym_FrontEndDynamicExpression = create_sys("FrontEndDynamicExpression", aProtected);
    sym_FrontEndEventActions = create_sys("FrontEndEventActions", aProtected);
    sym_FrontEndExecute = create_sys("FrontEndExecute", aProtected | aReadProtected);
    sym_FrontEndObject = create_sys("FrontEndObject", aProtected | aReadProtected);
    sym_FrontEndResource = create_sys("FrontEndResource", aProtected | aReadProtected);
    sym_FrontEndResourceString = create_sys("FrontEndResourceString", aProtected | aReadProtected);
    sym_FrontEndStackSize = create_sys("FrontEndStackSize", aProtected);
    sym_FrontEndToken = create_sys("FrontEndToken", aProtected);
    sym_FrontEndTokenExecute = create_sys("FrontEndTokenExecute", aProtected | aReadProtected);
    sym_FrontEndValueCache = create_sys("FrontEndValueCache", aProtected);
    sym_FrontEndVersion = create_sys("FrontEndVersion", aProtected);
    sym_Full = create_sys("Full", aProtected);
    sym_FullAxes = create_sys("FullAxes", aProtected);
    sym_FullDefinition = create_sys("FullDefinition", aHoldAll | aProtected);
    sym_FullForm = create_sys("FullForm", aProtected);
    sym_FullGraphics = create_sys("FullGraphics", aProtected | aReadProtected);
    sym_FullOptions = create_sys("FullOptions", aProtected | aReadProtected);
    sym_FullSimplify = create_sys("FullSimplify", aProtected);
    sym_Function = create_sys("Function", aHoldAll | aProtected);
    sym_FunctionExpand = create_sys("FunctionExpand", aProtected);
    sym_FunctionInterpolation = create_sys("FunctionInterpolation", aProtected | aReadProtected);
    sym_FutureValue = create_sys("FutureValue", aProtected | aReadProtected);
    sym_FutureValueList = create_sys("FutureValueList", aProtected | aReadProtected);
    sym_Gamma = create_sys("Gamma", aListable | aNumericFunction | aProtected);
    sym_GammaDistribution = create_sys("GammaDistribution", aProtected | aReadProtected);
    sym_GammaRegularized = create_sys("GammaRegularized", aListable | aNumericFunction | aProtected);
    sym_GaussianIntegers = create_sys("GaussianIntegers", aProtected);
    sym_GCD = create_sys("GCD", aFlat | aListable | aOneIdentity | aOrderless | aProtected);
    sym_GegenbauerC = create_sys("GegenbauerC", aListable | aNumericFunction | aProtected);
    sym_General = create_sys("General", aProtected);
    sym_GenerateConditions = create_sys("GenerateConditions", aProtected);
    sym_GeneratedCell = create_sys("GeneratedCell", aProtected);
    sym_GeneratedParameters = create_sys("GeneratedParameters", aProtected);
    sym_Generic = create_sys("Generic", aProtected);
    sym_GenericCylindricalDecomposition = create_sys("GenericCylindricalDecomposition", aProtected);
    sym_GeometricDistribution = create_sys("GeometricDistribution", aProtected | aReadProtected);
    sym_GeometricMean = create_sys("GeometricMean", aProtected | aReadProtected);
    sym_GeometricTransformation = create_sys("GeometricTransformation", aProtected | aReadProtected);
    sym_GeometricTransformationBox = create_sys("GeometricTransformationBox", aHoldAll | aProtected | aReadProtected);
    sym_GeometricTransformationBoxOptions = create_sys("GeometricTransformationBoxOptions", aProtected);
    sym_Get = create_sys2("Get", aProtected, BIF_Get);
    sym_GetBoundingBoxSizePacket = create_sys("GetBoundingBoxSizePacket", aProtected);
    sym_GetContext = create_sys("GetContext", aProtected);
    sym_GetFileName = create_sys("GetFileName", aProtected);
    sym_GetFrontEndOptionsDataPacket = create_sys("GetFrontEndOptionsDataPacket", aProtected);
    sym_GetLinebreakInformationPacket = create_sys("GetLinebreakInformationPacket", aProtected);
    sym_GetMenusPacket = create_sys("GetMenusPacket", aProtected);
    sym_GetPageBreakInformationPacket = create_sys("GetPageBreakInformationPacket", aProtected);
    sym_Glaisher = create_sys("Glaisher", aConstant | aProtected);
    sym_GlobalPreferences = create_sys("GlobalPreferences", aProtected);
    sym_GlobalSession = create_sys("GlobalSession", aProtected);
    sym_Glow = create_sys("Glow", aProtected | aReadProtected);
    sym_GoldenRatio = create_sys("GoldenRatio", aConstant | aProtected);
    sym_Goto = create_sys("Goto", aProtected);
    sym_Gradient = create_sys("Gradient", aProtected);
    sym_GraphData = create_sys("GraphData", aProtected | aReadProtected);
    sym_Graphics = create_sys("Graphics", aProtected | aReadProtected);
    sym_Graphics3D = create_sys("Graphics3D", aProtected | aReadProtected);
    sym_Graphics3DBox = create_sys("Graphics3DBox", aHoldAll | aProtected | aReadProtected);
    sym_Graphics3DBoxOptions = create_sys("Graphics3DBoxOptions", aProtected);
    sym_GraphicsArray = create_sys("GraphicsArray", aProtected | aReadProtected);
    sym_GraphicsBaseline = create_sys("GraphicsBaseline", aProtected);
    sym_GraphicsBox = create_sys("GraphicsBox", aHoldAll | aProtected | aReadProtected);
    sym_GraphicsBoxOptions = create_sys("GraphicsBoxOptions", aProtected);
    sym_GraphicsColumn = create_sys("GraphicsColumn", aProtected | aReadProtected);
    sym_GraphicsComplex = create_sys("GraphicsComplex", aNHoldRest | aProtected | aReadProtected);
    sym_GraphicsComplex3DBox = create_sys("GraphicsComplex3DBox", aHoldAll | aProtected | aReadProtected);
    sym_GraphicsComplex3DBoxOptions = create_sys("GraphicsComplex3DBoxOptions", aProtected);
    sym_GraphicsComplexBox = create_sys("GraphicsComplexBox", aHoldAll | aProtected | aReadProtected);
    sym_GraphicsComplexBoxOptions = create_sys("GraphicsComplexBoxOptions", aProtected);
    sym_GraphicsContents = create_sys("GraphicsContents", aProtected);
    sym_GraphicsData = create_sys("GraphicsData", 0);
    sym_GraphicsGrid = create_sys("GraphicsGrid", aProtected | aReadProtected);
    sym_GraphicsGridBox = create_sys("GraphicsGridBox", aProtected);
    sym_GraphicsGroup = create_sys("GraphicsGroup", aProtected | aReadProtected);
    sym_GraphicsGroup3DBox = create_sys("GraphicsGroup3DBox", aHoldAll | aProtected | aReadProtected);
    sym_GraphicsGroup3DBoxOptions = create_sys("GraphicsGroup3DBoxOptions", aProtected);
    sym_GraphicsGroupBox = create_sys("GraphicsGroupBox", aHoldAll | aProtected | aReadProtected);
    sym_GraphicsGroupBoxOptions = create_sys("GraphicsGroupBoxOptions", aProtected);
    sym_GraphicsGrouping = create_sys("GraphicsGrouping", aProtected);
    sym_GraphicsRow = create_sys("GraphicsRow", aProtected | aReadProtected);
    sym_GraphicsSpacing = create_sys("GraphicsSpacing", aProtected);
    sym_GraphicsStyle = create_sys("GraphicsStyle", aProtected);
    sym_GraphPlot = create_sys("GraphPlot", aProtected | aReadProtected);
    sym_GraphPlot3D = create_sys("GraphPlot3D", aProtected | aReadProtected);
    sym_Gray = create_sys("Gray", aProtected);
    sym_GrayLevel = create_sys("GrayLevel", aProtected | aReadProtected);
    sym_Greater = create_sys2("Greater", aProtected, BIF_Greater);
    sym_GreaterEqual = create_sys2("GreaterEqual", aProtected, BIF_GreaterEqual);
    sym_GreaterEqualLess = create_sys("GreaterEqualLess", 0);
    sym_GreaterFullEqual = create_sys("GreaterFullEqual", 0);
    sym_GreaterGreater = create_sys("GreaterGreater", 0);
    sym_GreaterLess = create_sys("GreaterLess", 0);
    sym_GreaterSlantEqual = create_sys("GreaterSlantEqual", 0);
    sym_GreaterTilde = create_sys("GreaterTilde", 0);
    sym_Green = create_sys("Green", aProtected);
    sym_Grid = create_sys("Grid", aProtected | aReadProtected);
    sym_GridBaseline = create_sys("GridBaseline", aProtected);
    sym_GridBox = create_sys("GridBox", aProtected | aReadProtected);
    sym_GridBoxAlignment = create_sys("GridBoxAlignment", aProtected);
    sym_GridBoxBackground = create_sys("GridBoxBackground", aProtected);
    sym_GridBoxDividers = create_sys("GridBoxDividers", aProtected);
    sym_GridBoxFrame = create_sys("GridBoxFrame", aProtected);
    sym_GridBoxItemSize = create_sys("GridBoxItemSize", aProtected);
    sym_GridBoxItemStyle = create_sys("GridBoxItemStyle", aProtected);
    sym_GridBoxOptions = create_sys("GridBoxOptions", aProtected);
    sym_GridBoxSpacings = create_sys("GridBoxSpacings", aProtected);
    sym_GridCreationSettings = create_sys("GridCreationSettings", aProtected);
    sym_GridDefaultElement = create_sys("GridDefaultElement", aProtected);
    sym_GridElementStyleOptions = create_sys("GridElementStyleOptions", aProtected);
    sym_GridFrame = create_sys("GridFrame", aProtected);
    sym_GridFrameMargins = create_sys("GridFrameMargins", aProtected);
    sym_GridLines = create_sys("GridLines", aProtected);
    sym_GridLinesStyle = create_sys("GridLinesStyle", aProtected);
    sym_GroebnerBasis = create_sys("GroebnerBasis", aProtected | aReadProtected);
    sym_GroupPageBreakWithin = create_sys("GroupPageBreakWithin", aProtected);
    sym_GumbelDistribution = create_sys("GumbelDistribution", aProtected | aReadProtected);
    sym_HalfNormalDistribution = create_sys("HalfNormalDistribution", aProtected | aReadProtected);
    sym_HammingDistance = create_sys("HammingDistance", aProtected);
    sym_HankelH1 = create_sys("HankelH1", aListable | aNumericFunction | aProtected | aReadProtected);
    sym_HankelH2 = create_sys("HankelH2", aListable | aNumericFunction | aProtected | aReadProtected);
    sym_HankelMatrix = create_sys("HankelMatrix", aProtected);
    sym_HarmonicMean = create_sys("HarmonicMean", aProtected | aReadProtected);
    sym_HarmonicNumber = create_sys("HarmonicNumber", aProtected | aReadProtected);
    sym_Hash = create_sys2("Hash", aProtected, BIF_Hash);
    sym_HashTable = create_sys("HashTable", aProtected);
    sym_Head = create_sys2("Head", aProtected, BIF_Head);
    sym_HeadCompose = create_sys("HeadCompose", aProtected);
    sym_Heads = create_sys("Heads", aProtected);
    sym_HeavisideTheta = create_sys("HeavisideTheta", aListable | aOrderless | aProtected);
    sym_HeldPart = create_sys("HeldPart", aNHoldRest | aProtected);
    sym_HelpBrowserLookup = create_sys("HelpBrowserLookup", aProtected | aReadProtected);
    sym_HelpBrowserNotebook = create_sys("HelpBrowserNotebook", aProtected | aReadProtected);
    sym_HelpBrowserSettings = create_sys("HelpBrowserSettings", aProtected);
    sym_HermiteDecomposition = create_sys("HermiteDecomposition", aProtected);
    sym_HermiteH = create_sys("HermiteH", aListable | aNumericFunction | aProtected);
    sym_HermitianMatrixQ = create_sys("HermitianMatrixQ", aProtected);
    sym_HessenbergDecomposition = create_sys("HessenbergDecomposition", aProtected);
    sym_Hessian = create_sys("Hessian", aProtected);
    sym_HiddenSurface = create_sys("HiddenSurface", aProtected);
    sym_HilbertMatrix = create_sys("HilbertMatrix", aProtected);
    sym_Hold = create_sys("Hold", aHoldAll | aProtected);
    sym_HoldAll = create_sys("HoldAll", aProtected);
    sym_HoldAllComplete = create_sys("HoldAllComplete", aProtected);
    sym_HoldComplete = create_sys("HoldComplete", aHoldAllComplete | aProtected);
    sym_HoldFirst = create_sys("HoldFirst", aProtected);
    sym_HoldForm = create_sys("HoldForm", aHoldAll | aProtected);
    sym_HoldPattern = create_sys("HoldPattern", aHoldAll | aProtected);
    sym_HoldRest = create_sys("HoldRest", aProtected);
    sym_HomeDirectory = create_sys("HomeDirectory", aProtected);
    sym_HomePage = create_sys("HomePage", 0);
    sym_Horizontal = create_sys("Horizontal", aProtected);
    sym_HorizontalForm = create_sys("HorizontalForm", aProtected);
    sym_HorizontalScrollPosition = create_sys("HorizontalScrollPosition", aProtected);
    sym_HornerForm = create_sys("HornerForm", aProtected | aReadProtected);
    sym_HTMLSave = create_sys("HTMLSave", aProtected | aReadProtected);
    sym_Hue = create_sys("Hue", aProtected | aReadProtected);
    sym_HumpDownHump = create_sys("HumpDownHump", 0);
    sym_HumpEqual = create_sys("HumpEqual", 0);
    sym_Hypergeometric0F1 = create_sys("Hypergeometric0F1", aListable | aNumericFunction | aProtected);
    sym_Hypergeometric0F1Regularized = create_sys("Hypergeometric0F1Regularized", aListable | aNumericFunction | aProtected);
    sym_Hypergeometric1F1 = create_sys("Hypergeometric1F1", aListable | aNumericFunction | aProtected);
    sym_Hypergeometric1F1Regularized = create_sys("Hypergeometric1F1Regularized", aListable | aNumericFunction | aProtected);
    sym_Hypergeometric2F1 = create_sys("Hypergeometric2F1", aListable | aNumericFunction | aProtected);
    sym_Hypergeometric2F1Regularized = create_sys("Hypergeometric2F1Regularized", aListable | aNumericFunction | aProtected);
    sym_HypergeometricDistribution = create_sys("HypergeometricDistribution", aProtected | aReadProtected);
    sym_HypergeometricPFQ = create_sys("HypergeometricPFQ", aProtected | aReadProtected);
    sym_HypergeometricPFQRegularized = create_sys("HypergeometricPFQRegularized", aProtected | aReadProtected);
    sym_HypergeometricU = create_sys("HypergeometricU", aListable | aNumericFunction | aProtected | aReadProtected);
    sym_Hyperlink = create_sys("Hyperlink", aProtected | aReadProtected);
    sym_HyperlinkCreationSettings = create_sys("HyperlinkCreationSettings", aProtected);
    sym_Hyphenation = create_sys("Hyphenation", aProtected);
    sym_HyphenationOptions = create_sys("HyphenationOptions", aProtected);
    sym_I = create_sys("I", aLocked | aProtected | aReadProtected);
    sym_Identity = create_sys("Identity", aProtected);
    sym_IdentityMatrix = create_sys("IdentityMatrix", aProtected);
    sym_If = create_sys2("If", aHoldRest | aProtected, BIF_If);
    sym_IgnoreCase = create_sys("IgnoreCase", aProtected);
    sym_Im = create_sys("Im", aListable | aNumericFunction | aProtected);
    sym_ImageCache = create_sys("ImageCache", aProtected);
    sym_ImageCacheValid = create_sys("ImageCacheValid", aProtected);
    sym_ImageMargins = create_sys("ImageMargins", aProtected);
    sym_ImageOffset = create_sys("ImageOffset", aProtected);
    sym_ImagePadding = create_sys("ImagePadding", aProtected);
    sym_ImageRangeCache = create_sys("ImageRangeCache", aProtected);
    sym_ImageRegion = create_sys("ImageRegion", aProtected);
    sym_ImageResolution = create_sys("ImageResolution", aProtected);
    sym_ImageRotated = create_sys("ImageRotated", aProtected);
    sym_ImageScaled = create_sys("ImageScaled", aProtected);
    sym_ImageSize = create_sys("ImageSize", aProtected);
    sym_ImageSizeAction = create_sys("ImageSizeAction", aProtected);
    sym_ImageSizeCache = create_sys("ImageSizeCache", aProtected);
    sym_ImageSizeMultipliers = create_sys("ImageSizeMultipliers", aProtected);
    sym_Implies = create_sys("Implies", aProtected);
    sym_Import = create_sys("Import", aProtected | aReadProtected);
    sym_ImportAutoReplacements = create_sys("ImportAutoReplacements", aProtected);
    sym_ImportString = create_sys("ImportString", aProtected | aReadProtected);
    sym_In = create_sys("In", aListable | aProtected);
    sym_IncludeFileExtension = create_sys("IncludeFileExtension", aProtected);
    sym_IncludeSingularTerm = create_sys("IncludeSingularTerm", aProtected);
    sym_Increment = create_sys2("Increment", aHoldFirst | aProtected | aReadProtected, BIF_Increment);
    sym_Indent = create_sys("Indent", aProtected | aReadProtected);
    sym_IndentingNewlineSpacings = create_sys("IndentingNewlineSpacings", aProtected);
    sym_IndentMaxFraction = create_sys("IndentMaxFraction", aProtected);
    sym_Indeterminate = create_sys("Indeterminate", aProtected);
    sym_IndexCreationOptions = create_sys("IndexCreationOptions", aProtected);
    sym_IndexTag = create_sys("IndexTag", aProtected);
    sym_Inequality = create_sys2("Inequality", aProtected, BIF_Inequality);
    sym_InexactNumberQ = create_sys("InexactNumberQ", aProtected);
    sym_InexactNumbers = create_sys("InexactNumbers", aProtected);
    sym_Infinity = create_sys("Infinity", aProtected | aReadProtected);
    sym_Infix = create_sys("Infix", aProtected);
    sym_Information = create_sys("Information", aHoldAll | aProtected | aReadProtected);
    sym_Inherited = create_sys("Inherited", aProtected);
    sym_InheritScope = create_sys("InheritScope", aProtected | aReadProtected);
    sym_Initialization = create_sys("Initialization", aProtected | aReadProtected);
    sym_InitializationCell = create_sys("InitializationCell", aProtected);
    sym_InitializationCellEvaluation = create_sys("InitializationCellEvaluation", aProtected);
    sym_InitializationCellWarning = create_sys("InitializationCellWarning", aProtected);
    sym_InlineCounterAssignments = create_sys("InlineCounterAssignments", aProtected);
    sym_InlineCounterIncrements = create_sys("InlineCounterIncrements", aProtected);
    sym_InlineRules = create_sys("InlineRules", aProtected);
    sym_Inner = create_sys("Inner", aProtected);
    sym_Input = create_sys("Input", aProtected | aReadProtected);
    sym_InputAliases = create_sys("InputAliases", aProtected);
    sym_InputAutoFormat = create_sys("InputAutoFormat", aProtected);
    sym_InputAutoReplacements = create_sys("InputAutoReplacements", aProtected);
    sym_InputField = create_sys("InputField", aProtected | aReadProtected);
    sym_InputFieldBox = create_sys("InputFieldBox", aProtected | aReadProtected);
    sym_InputFieldBoxOptions = create_sys("InputFieldBoxOptions", aProtected);
    sym_InputForm = create_sys("InputForm", aProtected);
    sym_InputGrouping = create_sys("InputGrouping", aProtected);
    sym_InputNamePacket = create_sys("InputNamePacket", aProtected);
    sym_InputNotebook = create_sys("InputNotebook", aProtected | aReadProtected);
    sym_InputPacket = create_sys("InputPacket", aProtected);
    sym_InputSettings = create_sys("InputSettings", aProtected);
    sym_InputStream = create_sys("InputStream", aProtected);
    sym_InputString = create_sys2("InputString", aProtected | aReadProtected, BIF_InputString);
    sym_InputStringPacket = create_sys("InputStringPacket", aProtected | aReadProtected);
    sym_InputToBoxFormPacket = create_sys("InputToBoxFormPacket", aProtected);
    sym_Insert = create_sys("Insert", aProtected);
    sym_InsertionPointObject = create_sys("InsertionPointObject", aProtected);
    sym_Inset = create_sys("Inset", aProtected | aReadProtected);
    sym_Inset3DBox = create_sys("Inset3DBox", aProtected);
    sym_InsetBox = create_sys("InsetBox", aHoldAll | aProtected | aReadProtected);
    sym_InsetBoxOptions = create_sys("InsetBoxOptions", aProtected);
    sym_Install = create_sys("Install", aReadProtected);
    sym_InstallService = create_sys("InstallService", aProtected | aReadProtected);
    sym_InString = create_sys("InString", aListable | aProtected);
    sym_Integer = create_sys("Integer", aProtected);
    sym_IntegerDigits = create_sys("IntegerDigits", aListable | aProtected);
    sym_IntegerExponent = create_sys("IntegerExponent", aListable | aProtected);
    sym_IntegerLength = create_sys("IntegerLength", aListable | aProtected);
    sym_IntegerPart = create_sys("IntegerPart", aListable | aNumericFunction | aProtected);
    sym_IntegerPartitions = create_sys("IntegerPartitions", aProtected);
    sym_IntegerQ = create_sys("IntegerQ", aProtected);
    sym_Integers = create_sys("Integers", aProtected);
    sym_IntegerString = create_sys("IntegerString", aListable | aProtected);
    sym_Integral = create_sys("Integral", 0);
    sym_Integrate = create_sys("Integrate", aProtected | aReadProtected);
    sym_Interactive = create_sys("Interactive", aProtected | aReadProtected);
    sym_InterestRate = create_sys("InterestRate", aProtected | aReadProtected);
    sym_Interlaced = create_sys("Interlaced", aProtected);
    sym_InterpolatingFunction = create_sys("InterpolatingFunction", aProtected | aReadProtected);
    sym_InterpolatingPolynomial = create_sys("InterpolatingPolynomial", aProtected);
    sym_Interpolation = create_sys("Interpolation", aProtected);
    sym_InterpolationOrder = create_sys("InterpolationOrder", aProtected);
    sym_InterpolationPoints = create_sys("InterpolationPoints", aProtected | aReadProtected);
    sym_InterpolationPrecision = create_sys("InterpolationPrecision", aProtected);
    sym_Interpretation = create_sys("Interpretation", aHoldAll | aProtected | aReadProtected);
    sym_InterpretationBox = create_sys("InterpretationBox", aHoldAllComplete | aProtected | aReadProtected);
    sym_InterpretationBoxOptions = create_sys("InterpretationBoxOptions", aProtected);
    sym_InterpretTemplate = create_sys("InterpretTemplate", aProtected);
    sym_InterquartileRange = create_sys("InterquartileRange", aProtected | aReadProtected);
    sym_Interrupt = create_sys("Interrupt", aProtected);
    sym_InterruptSettings = create_sys("InterruptSettings", aProtected);
    sym_Intersection = create_sys("Intersection", aFlat | aOneIdentity | aProtected);
    sym_Interval = create_sys("Interval", aProtected);
    sym_IntervalIntersection = create_sys("IntervalIntersection", aProtected);
    sym_IntervalMemberQ = create_sys("IntervalMemberQ", aListable | aProtected);
    sym_IntervalUnion = create_sys("IntervalUnion", aProtected);
    sym_Inverse = create_sys("Inverse", aProtected);
    sym_InverseBetaRegularized = create_sys("InverseBetaRegularized", aProtected | aReadProtected);
    sym_InverseCDF = create_sys("InverseCDF", aProtected | aReadProtected);
    sym_InverseEllipticNomeQ = create_sys("InverseEllipticNomeQ", aProtected | aReadProtected);
    sym_InverseErf = create_sys("InverseErf", aProtected | aReadProtected);
    sym_InverseErfc = create_sys("InverseErfc", aProtected | aReadProtected);
    sym_InverseFourier = create_sys("InverseFourier", aProtected);
    sym_InverseFourierCosTransform = create_sys("InverseFourierCosTransform", aProtected | aReadProtected);
    sym_InverseFourierSinTransform = create_sys("InverseFourierSinTransform", aProtected | aReadProtected);
    sym_InverseFourierTransform = create_sys("InverseFourierTransform", aProtected | aReadProtected);
    sym_InverseFunction = create_sys("InverseFunction", aNHoldAll | aProtected | aReadProtected);
    sym_InverseFunctions = create_sys("InverseFunctions", aProtected);
    sym_InverseGammaRegularized = create_sys("InverseGammaRegularized", aProtected | aReadProtected);
    sym_InverseGaussianDistribution = create_sys("InverseGaussianDistribution", aProtected | aReadProtected);
    sym_InverseJacobiCD = create_sys("InverseJacobiCD", aProtected | aReadProtected);
    sym_InverseJacobiCN = create_sys("InverseJacobiCN", aProtected | aReadProtected);
    sym_InverseJacobiCS = create_sys("InverseJacobiCS", aProtected | aReadProtected);
    sym_InverseJacobiDC = create_sys("InverseJacobiDC", aProtected | aReadProtected);
    sym_InverseJacobiDN = create_sys("InverseJacobiDN", aProtected | aReadProtected);
    sym_InverseJacobiDS = create_sys("InverseJacobiDS", aProtected | aReadProtected);
    sym_InverseJacobiNC = create_sys("InverseJacobiNC", aProtected | aReadProtected);
    sym_InverseJacobiND = create_sys("InverseJacobiND", aProtected | aReadProtected);
    sym_InverseJacobiNS = create_sys("InverseJacobiNS", aProtected | aReadProtected);
    sym_InverseJacobiSC = create_sys("InverseJacobiSC", aProtected | aReadProtected);
    sym_InverseJacobiSD = create_sys("InverseJacobiSD", aProtected | aReadProtected);
    sym_InverseJacobiSN = create_sys("InverseJacobiSN", aProtected | aReadProtected);
    sym_InverseLaplaceTransform = create_sys("InverseLaplaceTransform", aProtected | aReadProtected);
    sym_InverseSeries = create_sys("InverseSeries", aProtected | aReadProtected);
    sym_InverseWeierstrassP = create_sys("InverseWeierstrassP", aProtected | aReadProtected);
    sym_InverseZTransform = create_sys("InverseZTransform", aProtected | aReadProtected);
    sym_Invisible = create_sys("Invisible", aProtected | aReadProtected);
    sym_InvisibleApplication = create_sys("InvisibleApplication", 0);
    sym_InvisibleTimes = create_sys("InvisibleTimes", 0);
    sym_IsolatingInterval = create_sys("IsolatingInterval", aProtected | aReadProtected);
    sym_IsotopeData = create_sys("IsotopeData", aProtected | aReadProtected);
    sym_Italic = create_sys("Italic", aProtected);
    sym_Item = create_sys("Item", aProtected | aReadProtected);
    sym_ItemAspectRatio = create_sys("ItemAspectRatio", 0);
    sym_ItemBox = create_sys("ItemBox", aProtected | aReadProtected);
    sym_ItemBoxOptions = create_sys("ItemBoxOptions", aProtected);
    sym_ItemSize = create_sys("ItemSize", aProtected);
    sym_ItemStyle = create_sys("ItemStyle", aProtected);
    sym_Iterate = create_sys2("ItemStyle", aProtected | aHoldFirst, BIF_Iterate);
    sym_JaccardDissimilarity = create_sys("JaccardDissimilarity", aProtected);
    sym_JacobiAmplitude = create_sys("JacobiAmplitude", aProtected | aReadProtected);
    sym_Jacobian = create_sys("Jacobian", aProtected);
    sym_JacobiCD = create_sys("JacobiCD", aProtected | aReadProtected);
    sym_JacobiCN = create_sys("JacobiCN", aProtected | aReadProtected);
    sym_JacobiCS = create_sys("JacobiCS", aProtected | aReadProtected);
    sym_JacobiDC = create_sys("JacobiDC", aProtected | aReadProtected);
    sym_JacobiDN = create_sys("JacobiDN", aProtected | aReadProtected);
    sym_JacobiDS = create_sys("JacobiDS", aProtected | aReadProtected);
    sym_JacobiNC = create_sys("JacobiNC", aProtected | aReadProtected);
    sym_JacobiND = create_sys("JacobiND", aProtected | aReadProtected);
    sym_JacobiNS = create_sys("JacobiNS", aProtected | aReadProtected);
    sym_JacobiP = create_sys("JacobiP", aListable | aNumericFunction | aProtected);
    sym_JacobiSC = create_sys("JacobiSC", aProtected | aReadProtected);
    sym_JacobiSD = create_sys("JacobiSD", aProtected | aReadProtected);
    sym_JacobiSN = create_sys("JacobiSN", aProtected | aReadProtected);
    sym_JacobiSymbol = create_sys("JacobiSymbol", aListable | aProtected);
    sym_JacobiZeta = create_sys("JacobiZeta", aListable | aNumericFunction | aProtected);
    sym_Join = create_sys2("Join", aFlat | aOneIdentity | aProtected, BIF_Join);
    sym_Joined = create_sys("Joined", aProtected);
    sym_JordanDecomposition = create_sys("JordanDecomposition", aProtected);
    sym_K = create_sys("K", 0);
    sym_KelvinBei = create_sys("KelvinBei", aListable | aNumericFunction | aProtected | aReadProtected);
    sym_KelvinBer = create_sys("KelvinBer", aListable | aNumericFunction | aProtected | aReadProtected);
    sym_KelvinKei = create_sys("KelvinKei", aListable | aNumericFunction | aProtected | aReadProtected);
    sym_KelvinKer = create_sys("KelvinKer", aListable | aNumericFunction | aProtected | aReadProtected);
    sym_Khinchin = create_sys("Khinchin", aConstant | aProtected);
    sym_KleinInvariantJ = create_sys("KleinInvariantJ", aProtected | aReadProtected);
    sym_KnotData = create_sys("KnotData", aProtected | aReadProtected);
    sym_KroneckerDelta = create_sys("KroneckerDelta", aNumericFunction | aOrderless | aProtected);
    sym_KroneckerProduct = create_sys("KroneckerProduct", aProtected);
    sym_KroneckerSymbol = create_sys("KroneckerSymbol", aProtected | aReadProtected);
    sym_Kurtosis = create_sys("Kurtosis", aProtected | aReadProtected);
    sym_Label = create_sys("Label", aProtected);
    sym_Labeled = create_sys("Labeled", aProtected | aReadProtected);
    sym_LabeledSlider = create_sys("LabeledSlider", aProtected | aReadProtected);
    sym_LabelStyle = create_sys("LabelStyle", aProtected);
    sym_LaguerreL = create_sys("LaguerreL", aListable | aNumericFunction | aProtected);
    sym_LambertW = create_sys("LambertW", aListable | aProtected);
    sym_Language = create_sys("Language", aProtected);
    sym_LanguageCategory = create_sys("LanguageCategory", aProtected);
    sym_LaplaceDistribution = create_sys("LaplaceDistribution", aProtected | aReadProtected);
    sym_LaplaceTransform = create_sys("LaplaceTransform", aProtected | aReadProtected);
    sym_Large = create_sys("Large", aProtected);
    sym_Larger = create_sys("Larger", aProtected);
    sym_Last = create_sys2("Last", aProtected, BIF_Last);
    sym_LatticeData = create_sys("LatticeData", aProtected | aReadProtected);
    sym_LatticeReduce = create_sys("LatticeReduce", aProtected);
    sym_Launch = create_sys("Launch", aProtected);
    sym_LayeredGraphPlot = create_sys("LayeredGraphPlot", aProtected | aReadProtected);
    sym_LayerSizeFunction = create_sys("LayerSizeFunction", aProtected);
    sym_LayoutInformation = create_sys("LayoutInformation", aProtected);
    sym_LCM = create_sys("LCM", aFlat | aListable | aOneIdentity | aOrderless | aProtected);
    sym_LeafCount = create_sys("LeafCount", aProtected);
    sym_LeastSquares = create_sys("LeastSquares", aProtected);
    sym_Left = create_sys("Left", aProtected);
    sym_LeftArrow = create_sys("LeftArrow", 0);
    sym_LeftArrowBar = create_sys("LeftArrowBar", 0);
    sym_LeftArrowRightArrow = create_sys("LeftArrowRightArrow", 0);
    sym_LeftDownTeeVector = create_sys("LeftDownTeeVector", 0);
    sym_LeftDownVector = create_sys("LeftDownVector", 0);
    sym_LeftDownVectorBar = create_sys("LeftDownVectorBar", 0);
    sym_LeftRightArrow = create_sys("LeftRightArrow", 0);
    sym_LeftRightVector = create_sys("LeftRightVector", 0);
    sym_LeftTee = create_sys("LeftTee", 0);
    sym_LeftTeeArrow = create_sys("LeftTeeArrow", 0);
    sym_LeftTeeVector = create_sys("LeftTeeVector", 0);
    sym_LeftTriangle = create_sys("LeftTriangle", 0);
    sym_LeftTriangleBar = create_sys("LeftTriangleBar", 0);
    sym_LeftTriangleEqual = create_sys("LeftTriangleEqual", 0);
    sym_LeftUpDownVector = create_sys("LeftUpDownVector", 0);
    sym_LeftUpTeeVector = create_sys("LeftUpTeeVector", 0);
    sym_LeftUpVector = create_sys("LeftUpVector", 0);
    sym_LeftUpVectorBar = create_sys("LeftUpVectorBar", 0);
    sym_LeftVector = create_sys("LeftVector", 0);
    sym_LeftVectorBar = create_sys("LeftVectorBar", 0);
    sym_LegendreP = create_sys("LegendreP", aListable | aProtected);
    sym_LegendreQ = create_sys("LegendreQ", aListable | aProtected);
    sym_LegendreType = create_sys("LegendreType", aProtected);
    sym_Length = create_sys2("Length", aProtected, BIF_Length);
    sym_LengthWhile = create_sys("LengthWhile", aProtected | aReadProtected);
    sym_LerchPhi = create_sys("LerchPhi", aListable | aNumericFunction | aProtected);
    sym_Less = create_sys2("Less", aProtected, BIF_Less);
    sym_LessEqual = create_sys2("LessEqual", aProtected, BIF_LessEqual);
    sym_LessEqualGreater = create_sys("LessEqualGreater", 0);
    sym_LessFullEqual = create_sys("LessFullEqual", 0);
    sym_LessGreater = create_sys("LessGreater", 0);
    sym_LessLess = create_sys("LessLess", 0);
    sym_LessSlantEqual = create_sys("LessSlantEqual", 0);
    sym_LessTilde = create_sys("LessTilde", 0);
    sym_LetterCharacter = create_sys("LetterCharacter", aProtected | aReadProtected);
    sym_LetterQ = create_sys("LetterQ", aProtected);
    sym_Level = create_sys("Level", aProtected);
    sym_Lexicographic = create_sys("Lexicographic", aProtected);
    sym_LicenseID = create_sys("LicenseID", aProtected);
    sym_LightBlue = create_sys("LightBlue", aProtected);
    sym_LightBrown = create_sys("LightBrown", aProtected);
    sym_LightCyan = create_sys("LightCyan", aProtected);
    sym_Lighter = create_sys("Lighter", aProtected | aReadProtected);
    sym_LightGray = create_sys("LightGray", aProtected);
    sym_LightGreen = create_sys("LightGreen", aProtected);
    sym_Lighting = create_sys("Lighting", aProtected);
    sym_LightingAngle = create_sys("LightingAngle", aProtected | aReadProtected);
    sym_LightMagenta = create_sys("LightMagenta", aProtected);
    sym_LightOrange = create_sys("LightOrange", aProtected);
    sym_LightPink = create_sys("LightPink", aProtected);
    sym_LightPurple = create_sys("LightPurple", aProtected);
    sym_LightRed = create_sys("LightRed", aProtected);
    sym_LightSources = create_sys("LightSources", aProtected);
    sym_LightYellow = create_sys("LightYellow", aProtected);
    sym_Limit = create_sys("Limit", aListable | aProtected);
    sym_LimitsPositioning = create_sys("LimitsPositioning", aProtected);
    sym_LimitsPositioningTokens = create_sys("LimitsPositioningTokens", aProtected);
    sym_Line = create_sys("Line", aProtected | aReadProtected);
    sym_Line3DBox = create_sys("Line3DBox", aHoldAll | aProtected | aReadProtected);
    sym_LinearFilter = create_sys("LinearFilter", aProtected | aReadProtected);
    sym_LinearFractionalTransform = create_sys("LinearFractionalTransform", aProtected | aReadProtected);
    sym_LinearProgramming = create_sys("LinearProgramming", aProtected | aReadProtected);
    sym_LinearSolve = create_sys("LinearSolve", aProtected);
    sym_LinearSolveFunction = create_sys("LinearSolveFunction", aProtected);
    sym_LineBox = create_sys("LineBox", aHoldAll | aProtected | aReadProtected);
    sym_LineBreak = create_sys("LineBreak", 0);
    sym_LinebreakAdjustments = create_sys("LinebreakAdjustments", aProtected);
    sym_LineBreakWithin = create_sys("LineBreakWithin", aProtected);
    sym_LineForm = create_sys("LineForm", aProtected);
    sym_LineIndent = create_sys("LineIndent", aProtected);
    sym_LineIndentMaxFraction = create_sys("LineIndentMaxFraction", aProtected);
    sym_LineSpacing = create_sys("LineSpacing", aProtected);
    sym_LineWrapParts = create_sys("LineWrapParts", aProtected);
    sym_LinkActivate = create_sys("LinkActivate", aProtected | aReadProtected);
    sym_LinkClose = create_sys("LinkClose", aProtected);
    sym_LinkConnect = create_sys("LinkConnect", aProtected | aReadProtected);
    sym_LinkConnectedQ = create_sys("LinkConnectedQ", aProtected);
    sym_LinkCreate = create_sys("LinkCreate", aProtected | aReadProtected);
    sym_LinkError = create_sys("LinkError", aProtected);
    sym_LinkFlush = create_sys("LinkFlush", aProtected);
    sym_LinkHost = create_sys("LinkHost", aProtected);
    sym_LinkInterrupt = create_sys("LinkInterrupt", aProtected);
    sym_LinkLaunch = create_sys("LinkLaunch", aProtected | aReadProtected);
    sym_LinkMode = create_sys("LinkMode", aProtected);
    sym_LinkObject = create_sys("LinkObject", 0);
    sym_LinkOpen = create_sys("LinkOpen", aProtected);
    sym_LinkOptions = create_sys("LinkOptions", aProtected);
    sym_LinkPatterns = create_sys("LinkPatterns", aReadProtected);
    sym_LinkProtocol = create_sys("LinkProtocol", aProtected);
    sym_LinkRead = create_sys("LinkRead", aProtected | aReadProtected);
    sym_LinkReadHeld = create_sys("LinkReadHeld", aProtected);
    sym_LinkReadyQ = create_sys("LinkReadyQ", aProtected);
    sym_Links = create_sys("Links", aProtected | aReadProtected);
    sym_LinkWrite = create_sys("LinkWrite", aProtected);
    sym_LinkWriteHeld = create_sys("LinkWriteHeld", aProtected);
    sym_List = create_sys("List", aLocked | aProtected);
    sym_Listable = create_sys("Listable", aProtected);
    sym_ListAnimate = create_sys("ListAnimate", aProtected | aReadProtected);
    sym_ListContourPlot = create_sys("ListContourPlot", aProtected);
    sym_ListContourPlot3D = create_sys("ListContourPlot3D", aProtected);
    sym_ListConvolve = create_sys("ListConvolve", aProtected);
    sym_ListCorrelate = create_sys("ListCorrelate", aProtected);
    sym_ListDensityPlot = create_sys("ListDensityPlot", aProtected);
    sym_Listen = create_sys("Listen", aProtected);
    sym_ListInterpolation = create_sys("ListInterpolation", aProtected);
    sym_ListLinePlot = create_sys("ListLinePlot", aProtected);
    sym_ListLogLinearPlot = create_sys("ListLogLinearPlot", aProtected | aReadProtected);
    sym_ListLogLogPlot = create_sys("ListLogLogPlot", aProtected | aReadProtected);
    sym_ListLogPlot = create_sys("ListLogPlot", aProtected | aReadProtected);
    sym_ListPlay = create_sys("ListPlay", aProtected);
    sym_ListPlot = create_sys("ListPlot", aProtected);
    sym_ListPlot3D = create_sys("ListPlot3D", aProtected);
    sym_ListPointPlot3D = create_sys("ListPointPlot3D", aProtected | aReadProtected);
    sym_ListPolarPlot = create_sys("ListPolarPlot", aProtected | aReadProtected);
    sym_ListQ = create_sys("ListQ", aProtected);
    sym_ListSurfacePlot3D = create_sys("ListSurfacePlot3D", aProtected);
    sym_Literal = create_sys("Literal", aHoldAll | aProtected);
    sym_LiteralSearch = create_sys("LiteralSearch", aProtected);
    sym_LocalizeVariables = create_sys("LocalizeVariables", aProtected | aReadProtected);
    sym_Locator = create_sys("Locator", aProtected | aReadProtected);
    sym_LocatorAutoCreate = create_sys("LocatorAutoCreate", aProtected);
    sym_LocatorBox = create_sys("LocatorBox", aProtected | aReadProtected);
    sym_LocatorBoxOptions = create_sys("LocatorBoxOptions", aProtected);
    sym_LocatorCentering = create_sys("LocatorCentering", aProtected);
    sym_LocatorPane = create_sys("LocatorPane", aProtected | aReadProtected);
    sym_LocatorPaneBox = create_sys("LocatorPaneBox", aProtected | aReadProtected);
    sym_LocatorPaneBoxOptions = create_sys("LocatorPaneBoxOptions", aProtected);
    sym_LocatorRegion = create_sys("LocatorRegion", aProtected);
    sym_Locked = create_sys("Locked", aProtected);
    sym_Log = create_sys("Log", aListable | aNumericFunction | aProtected);
    sym_LogGamma = create_sys("LogGamma", aListable | aNumericFunction | aProtected);
    sym_LogicalExpand = create_sys("LogicalExpand", aProtected);
    sym_LogIntegral = create_sys("LogIntegral", aListable | aNumericFunction | aProtected);
    sym_LogisticDistribution = create_sys("LogisticDistribution", aProtected | aReadProtected);
    sym_LogLinearPlot = create_sys("LogLinearPlot", aProtected | aReadProtected);
    sym_LogLogPlot = create_sys("LogLogPlot", aProtected | aReadProtected);
    sym_LogNormalDistribution = create_sys("LogNormalDistribution", aProtected | aReadProtected);
    sym_LogPlot = create_sys("LogPlot", aProtected | aReadProtected);
    sym_LogSeriesDistribution = create_sys("LogSeriesDistribution", aProtected | aReadProtected);
    sym_LongEqual = create_sys("LongEqual", 0);
    sym_Longest = create_sys("Longest", aProtected);
    sym_LongestMatch = create_sys("LongestMatch", aProtected | aReadProtected);
    sym_LongForm = create_sys("LongForm", aProtected);
    sym_LongLeftArrow = create_sys("LongLeftArrow", 0);
    sym_LongLeftRightArrow = create_sys("LongLeftRightArrow", 0);
    sym_LongRightArrow = create_sys("LongRightArrow", 0);
    sym_Loopback = create_sys("Loopback", aProtected);
    sym_LowerCaseQ = create_sys("LowerCaseQ", aProtected);
    sym_LowerLeftArrow = create_sys("LowerLeftArrow", 0);
    sym_LowerRightArrow = create_sys("LowerRightArrow", 0);
    sym_LUBackSubstitution = create_sys("LUBackSubstitution", aProtected);
    sym_LucasL = create_sys("LucasL", aListable | aNumericFunction | aProtected | aReadProtected);
    sym_LUDecomposition = create_sys("LUDecomposition", aProtected);
    sym_MachineID = create_sys("MachineID", aProtected);
    sym_MachineName = create_sys("MachineName", aProtected);
    sym_MachineNumberQ = create_sys("MachineNumberQ", aProtected);
    sym_MachinePrecision = create_sys("MachinePrecision", aConstant | aProtected);
    sym_MacintoshSystemPageSetup = create_sys("MacintoshSystemPageSetup", aProtected);
    sym_Magenta = create_sys("Magenta", aProtected);
    sym_Magnification = create_sys("Magnification", aProtected);
    sym_Magnify = create_sys("Magnify", aProtected | aReadProtected);
    sym_MainSolve = create_sys("MainSolve", aProtected);
    sym_MaintainDynamicCaches = create_sys("MaintainDynamicCaches", aProtected);
    sym_MakeBoxes = create_sys("MakeBoxes", aHoldAllComplete);
    sym_MakeExpression = create_sys("MakeExpression", aListable);
    sym_MakeRules = create_sys("MakeRules", aProtected);
    sym_ManhattanDistance = create_sys("ManhattanDistance", aProtected);
    sym_Manipulate = create_sys("Manipulate", aHoldAll | aProtected | aReadProtected);
    sym_Manipulator = create_sys("Manipulator", aProtected | aReadProtected);
    sym_MantissaExponent = create_sys("MantissaExponent", aListable | aProtected);
    sym_Manual = create_sys("Manual", aProtected);
    sym_Map = create_sys2("Map", aProtected, BIF_Map);
    sym_MapAll = create_sys("MapAll", aProtected);
    sym_MapAt = create_sys("MapAt", aProtected);
    sym_MapIndexed = create_sys("MapIndexed", aProtected);
    sym_MapThread = create_sys("MapThread", aProtected);
    sym_MatchingDissimilarity = create_sys("MatchingDissimilarity", aProtected);
    sym_MatchLocalNameQ = create_sys("MatchLocalNameQ", aHoldAll | aProtected);
    sym_MatchLocalNames = create_sys("MatchLocalNames", aProtected);
    sym_MatchQ = create_sys2("MatchQ", aProtected, BIF_MatchQ);
    sym_MathematicaNotation = create_sys("MathematicaNotation", aProtected);
    sym_MathieuC = create_sys("MathieuC", aListable | aNHoldFirst | aNumericFunction | aProtected);
    sym_MathieuCharacteristicA = create_sys("MathieuCharacteristicA", aListable | aNHoldFirst | aNumericFunction | aProtected);
    sym_MathieuCharacteristicB = create_sys("MathieuCharacteristicB", aListable | aNHoldFirst | aNumericFunction | aProtected);
    sym_MathieuCharacteristicExponent = create_sys("MathieuCharacteristicExponent", aListable | aNumericFunction | aProtected);
    sym_MathieuCPrime = create_sys("MathieuCPrime", aListable | aNHoldFirst | aNumericFunction | aProtected);
    sym_MathieuS = create_sys("MathieuS", aListable | aNHoldFirst | aNumericFunction | aProtected);
    sym_MathieuSPrime = create_sys("MathieuSPrime", aListable | aNHoldFirst | aNumericFunction | aProtected);
    sym_MathMLForm = create_sys("MathMLForm", aProtected);
    sym_MathMLText = create_sys("MathMLText", aProtected);
    sym_MatrixExp = create_sys("MatrixExp", aProtected);
    sym_MatrixForm = create_sys("MatrixForm", aProtected | aReadProtected);
    sym_MatrixPlot = create_sys("MatrixPlot", aProtected | aReadProtected);
    sym_MatrixPower = create_sys("MatrixPower", aProtected);
    sym_MatrixQ = create_sys("MatrixQ", aProtected);
    sym_MatrixRank = create_sys("MatrixRank", aProtected);
    sym_Max = create_sys("Max", aFlat | aNumericFunction | aOneIdentity | aOrderless | aProtected);
    sym_MaxBend = create_sys("MaxBend", aProtected);
    sym_Maximize = create_sys("Maximize", aProtected);
    sym_MaxIterations = create_sys("MaxIterations", aProtected);
    sym_MaxMemoryUsed = create_sys("MaxMemoryUsed", aProtected);
    sym_MaxPlotPoints = create_sys("MaxPlotPoints", aProtected | aReadProtected);
    sym_MaxPoints = create_sys("MaxPoints", aProtected);
    sym_MaxRecursion = create_sys("MaxRecursion", aProtected);
    sym_MaxStepFraction = create_sys("MaxStepFraction", aProtected);
    sym_MaxSteps = create_sys("MaxSteps", aProtected);
    sym_MaxStepSize = create_sys("MaxStepSize", aProtected);
    sym_MaxwellDistribution = create_sys("MaxwellDistribution", aProtected | aReadProtected);
    sym_Mean = create_sys("Mean", aProtected);
    sym_MeanDeviation = create_sys("MeanDeviation", aProtected | aReadProtected);
    sym_Median = create_sys("Median", aProtected);
    sym_MedianDeviation = create_sys("MedianDeviation", aProtected | aReadProtected);
    sym_Medium = create_sys("Medium", aProtected);
    sym_MeijerG = create_sys("MeijerG", aProtected | aReadProtected);
    sym_MemberQ = create_sys("MemberQ", aProtected);
    sym_MemoryConstrained = create_sys("MemoryConstrained", aHoldAll | aProtected);
    sym_MemoryInUse = create_sys("MemoryInUse", aProtected | aReadProtected);
    sym_MenuAppearance = create_sys("MenuAppearance", aProtected);
    sym_MenuPacket = create_sys("MenuPacket", aProtected | aReadProtected);
    sym_MenuView = create_sys("MenuView", aProtected | aReadProtected);
    sym_Mesh = create_sys("Mesh", aProtected);
    sym_MeshFunctions = create_sys("MeshFunctions", aProtected);
    sym_MeshRange = create_sys("MeshRange", aProtected);
    sym_MeshShading = create_sys("MeshShading", aProtected);
    sym_MeshStyle = create_sys("MeshStyle", aProtected);
    sym_Message = create_sys2("Message", aHoldFirst | aProtected, BIF_Message);
    sym_MessageDialog = create_sys("MessageDialog", aProtected | aReadProtected);
    sym_MessageList = create_sys("MessageList", aListable | aProtected);
    sym_MessageName = create_sys("MessageName", aHoldFirst | aProtected);
    sym_MessageOptions = create_sys("MessageOptions", aProtected);
    sym_MessagePacket = create_sys("MessagePacket", aHoldFirst | aProtected | aReadProtected);
    sym_Messages = create_sys("Messages", aHoldAll | aProtected);
    sym_MessagesNotebook = create_sys("MessagesNotebook", aProtected | aReadProtected);
    sym_MetaCharacters = create_sys("MetaCharacters", aProtected);
    sym_Method = create_sys("Method", aProtected);
    sym_MethodOptions = create_sys("MethodOptions", aProtected);
    sym_Min = create_sys("Min", aFlat | aNumericFunction | aOneIdentity | aOrderless | aProtected);
    sym_MinimalPolynomial = create_sys("MinimalPolynomial", aListable | aProtected);
    sym_Minimize = create_sys("Minimize", aProtected);
    sym_Minors = create_sys("Minors", aProtected);
    sym_MinRecursion = create_sys("MinRecursion", aProtected);
    sym_MinSize = create_sys("MinSize", aProtected);
    sym_Minus = create_sys("Minus", aListable | aNumericFunction | aProtected);
    sym_MinusPlus = create_sys("MinusPlus", 0);
    sym_Missing = create_sys("Missing", aProtected | aReadProtected);
    sym_Mod = create_sys2("Mod", aListable | aNumericFunction | aProtected, BIF_Mod);
    sym_Modal = create_sys("Modal", aProtected);
    sym_Mode = create_sys("Mode", aProtected);
    sym_Modular = create_sys("Modular", aProtected);
    sym_ModularLambda = create_sys("ModularLambda", aProtected | aReadProtected);
    sym_Module = create_sys("Module", aHoldAll | aProtected);
    sym_Modulus = create_sys("Modulus", aProtected);
    sym_MoebiusMu = create_sys("MoebiusMu", aListable | aProtected);
    sym_Momentary = create_sys("Momentary", aProtected);
    sym_Monitor = create_sys("Monitor", aHoldAll | aProtected | aReadProtected);
    sym_MonomialOrder = create_sys("MonomialOrder", aProtected);
    sym_Most = create_sys2("Most", aProtected, BIF_Most);
    sym_MouseAnnotation = create_sys("MouseAnnotation", aProtected | aReadProtected);
    sym_MouseButtons = create_sys("MouseButtons", aProtected | aReadProtected);
    sym_Mouseover = create_sys("Mouseover", aProtected | aReadProtected);
    sym_MousePointerNote = create_sys("MousePointerNote", aProtected);
    sym_MousePosition = create_sys("MousePosition", aProtected | aReadProtected);
    sym_MovingAverage = create_sys("MovingAverage", aProtected | aReadProtected);
    sym_MovingMedian = create_sys("MovingMedian", aProtected | aReadProtected);
    sym_MultiedgeStyle = create_sys("MultiedgeStyle", aProtected);
    sym_MultilaunchWarning = create_sys("MultilaunchWarning", aProtected);
    sym_MultiLetterItalics = create_sys("MultiLetterItalics", aProtected);
    sym_MultiLetterStyle = create_sys("MultiLetterStyle", aProtected);
    sym_MultilineFunction = create_sys("MultilineFunction", aProtected);
    sym_Multinomial = create_sys("Multinomial", aListable | aNumericFunction | aOrderless | aProtected);
    sym_MultiplicativeOrder = create_sys("MultiplicativeOrder", aProtected);
    sym_Multiplicity = create_sys("Multiplicity", aProtected);
    sym_N = create_sys("N", aProtected);
    sym_NameQ = create_sys("NameQ", aProtected);
    sym_Names = create_sys("Names", aProtected);
    sym_Nand = create_sys2("Nand", aHoldAll | aProtected, BIF_Nand);
    sym_NBernoulliB = create_sys("NBernoulliB", aProtected);
    sym_NCache = create_sys("NCache", aHoldFirst | aReadProtected);
    sym_NDSolve = create_sys("NDSolve", aProtected);
    sym_Nearest = create_sys("Nearest", aProtected);
    sym_NearestFunction = create_sys("NearestFunction", aProtected);
    sym_NeedCurrentFrontEndPackagePacket = create_sys("NeedCurrentFrontEndPackagePacket", aProtected);
    sym_NeedCurrentFrontEndSymbolsPacket = create_sys("NeedCurrentFrontEndSymbolsPacket", aProtected);
    sym_Needs = create_sys("Needs", aProtected);
    sym_Negative = create_sys("Negative", aListable | aProtected);
    sym_NegativeBinomialDistribution = create_sys("NegativeBinomialDistribution", aProtected | aReadProtected);
    sym_Nest = create_sys2("Nest", aProtected, BIF_Nest);
    sym_NestedGreaterGreater = create_sys("NestedGreaterGreater", 0);
    sym_NestedLessLess = create_sys("NestedLessLess", 0);
    sym_NestedScriptRules = create_sys("NestedScriptRules", aProtected);
    sym_NestList = create_sys2("NestList", aProtected, BIF_NestList);
    sym_NestWhile = create_sys("NestWhile", aProtected);
    sym_NestWhileList = create_sys("NestWhileList", aProtected);
    sym_NevilleThetaC = create_sys("NevilleThetaC", aProtected | aReadProtected);
    sym_NevilleThetaD = create_sys("NevilleThetaD", aProtected | aReadProtected);
    sym_NevilleThetaN = create_sys("NevilleThetaN", aProtected | aReadProtected);
    sym_NevilleThetaS = create_sys("NevilleThetaS", aProtected | aReadProtected);
    sym_Next = create_sys("Next", aProtected);
    sym_NextPrime = create_sys("NextPrime", aProtected | aReadProtected);
    sym_NHoldAll = create_sys("NHoldAll", aProtected);
    sym_NHoldFirst = create_sys("NHoldFirst", aProtected);
    sym_NHoldRest = create_sys("NHoldRest", aProtected);
    sym_NIntegrate = create_sys("NIntegrate", aHoldAll | aProtected);
    sym_NMaximize = create_sys("NMaximize", aProtected | aReadProtected);
    sym_NMinimize = create_sys("NMinimize", aProtected | aReadProtected);
    sym_NominalInterestRate = create_sys("NominalInterestRate", aProtected | aReadProtected);
    sym_NonAssociative = create_sys("NonAssociative", aProtected);
    sym_NoncentralChiSquareDistribution = create_sys("NoncentralChiSquareDistribution", aProtected | aReadProtected);
    sym_NoncentralFRatioDistribution = create_sys("NoncentralFRatioDistribution", aProtected | aReadProtected);
    sym_NoncentralStudentTDistribution = create_sys("NoncentralStudentTDistribution", aProtected | aReadProtected);
    sym_NonCommutativeMultiply = create_sys("NonCommutativeMultiply", aFlat | aOneIdentity | aProtected);
    sym_NonConstants = create_sys("NonConstants", aProtected);
    sym_None = create_sys("None", aProtected);
    sym_NonNegative = create_sys("NonNegative", aListable | aProtected);
    sym_NonPositive = create_sys("NonPositive", aListable | aProtected);
    sym_Nor = create_sys2("Nor", aHoldAll | aProtected, BIF_Nor);
    sym_NorlundB = create_sys("NorlundB", aProtected | aReadProtected);
    sym_Norm = create_sys("Norm", aProtected);
    sym_Normal = create_sys("Normal", aProtected);
    sym_NormalDistribution = create_sys("NormalDistribution", aProtected | aReadProtected);
    sym_NormalGrouping = create_sys("NormalGrouping", aProtected);
    sym_Normalize = create_sys("Normalize", aProtected);
    sym_NormalsFunction = create_sys("NormalsFunction", aProtected);
    sym_NormFunction = create_sys("NormFunction", aProtected);
    sym_Not = create_sys2("Not", aProtected, BIF_Not);
    sym_NotCongruent = create_sys("NotCongruent", 0);
    sym_NotCupCap = create_sys("NotCupCap", 0);
    sym_NotDoubleVerticalBar = create_sys("NotDoubleVerticalBar", 0);
    sym_Notebook = create_sys("Notebook", aProtected | aReadProtected);
    sym_NotebookApply = create_sys("NotebookApply", aProtected | aReadProtected);
    sym_NotebookAutoSave = create_sys("NotebookAutoSave", aProtected);
    sym_NotebookClose = create_sys("NotebookClose", aProtected | aReadProtected);
    sym_NotebookConvertSettings = create_sys("NotebookConvertSettings", aProtected);
    sym_NotebookCreate = create_sys("NotebookCreate", aProtected | aReadProtected);
    sym_NotebookCreateReturnObject = create_sys("NotebookCreateReturnObject", aProtected);
    sym_NotebookDefault = create_sys("NotebookDefault", aProtected);
    sym_NotebookDelete = create_sys("NotebookDelete", aProtected | aReadProtected);
    sym_NotebookDirectory = create_sys("NotebookDirectory", aProtected | aReadProtected);
    sym_NotebookDynamicExpression = create_sys("NotebookDynamicExpression", aProtected);
    sym_NotebookEventActions = create_sys("NotebookEventActions", aProtected);
    sym_NotebookFileName = create_sys("NotebookFileName", aProtected);
    sym_NotebookFind = create_sys("NotebookFind", aProtected | aReadProtected);
    sym_NotebookFindReturnObject = create_sys("NotebookFindReturnObject", aProtected);
    sym_NotebookGet = create_sys("NotebookGet", aProtected | aReadProtected);
    sym_NotebookGetLayoutInformationPacket = create_sys("NotebookGetLayoutInformationPacket", aProtected);
    sym_NotebookGetMisspellingsPacket = create_sys("NotebookGetMisspellingsPacket", aProtected);
    sym_NotebookInformation = create_sys("NotebookInformation", aProtected);
    sym_NotebookInterfaceObject = create_sys("NotebookInterfaceObject", aProtected | aReadProtected);
    sym_NotebookLocate = create_sys("NotebookLocate", aProtected | aReadProtected);
    sym_NotebookObject = create_sys("NotebookObject", aProtected | aReadProtected);
    sym_NotebookOpen = create_sys("NotebookOpen", aProtected | aReadProtected);
    sym_NotebookOpenReturnObject = create_sys("NotebookOpenReturnObject", aProtected);
    sym_NotebookPath = create_sys("NotebookPath", aProtected);
    sym_NotebookPrint = create_sys("NotebookPrint", aProtected | aReadProtected);
    sym_NotebookPut = create_sys("NotebookPut", aProtected | aReadProtected);
    sym_NotebookPutReturnObject = create_sys("NotebookPutReturnObject", aProtected);
    sym_NotebookRead = create_sys("NotebookRead", aProtected | aReadProtected);
    sym_NotebookResetGeneratedCells = create_sys("NotebookResetGeneratedCells", aProtected);
    sym_Notebooks = create_sys("Notebooks", aProtected | aReadProtected);
    sym_NotebookSave = create_sys("NotebookSave", aProtected | aReadProtected);
    sym_NotebookSaveAs = create_sys("NotebookSaveAs", aProtected);
    sym_NotebookSelection = create_sys("NotebookSelection", aProtected | aReadProtected);
    sym_NotebookSetupLayoutInformationPacket = create_sys("NotebookSetupLayoutInformationPacket", aProtected);
    sym_NotebooksMenu = create_sys("NotebooksMenu", aProtected);
    sym_NotebookWrite = create_sys("NotebookWrite", aProtected | aReadProtected);
    sym_NotElement = create_sys("NotElement", aProtected);
    sym_NotEqualTilde = create_sys("NotEqualTilde", 0);
    sym_NotExists = create_sys("NotExists", 0);
    sym_NotGreater = create_sys("NotGreater", 0);
    sym_NotGreaterEqual = create_sys("NotGreaterEqual", 0);
    sym_NotGreaterFullEqual = create_sys("NotGreaterFullEqual", 0);
    sym_NotGreaterGreater = create_sys("NotGreaterGreater", 0);
    sym_NotGreaterLess = create_sys("NotGreaterLess", 0);
    sym_NotGreaterSlantEqual = create_sys("NotGreaterSlantEqual", 0);
    sym_NotGreaterTilde = create_sys("NotGreaterTilde", 0);
    sym_NotHumpDownHump = create_sys("NotHumpDownHump", 0);
    sym_NotHumpEqual = create_sys("NotHumpEqual", 0);
    sym_NotLeftTriangle = create_sys("NotLeftTriangle", 0);
    sym_NotLeftTriangleBar = create_sys("NotLeftTriangleBar", 0);
    sym_NotLeftTriangleEqual = create_sys("NotLeftTriangleEqual", 0);
    sym_NotLess = create_sys("NotLess", 0);
    sym_NotLessEqual = create_sys("NotLessEqual", 0);
    sym_NotLessFullEqual = create_sys("NotLessFullEqual", 0);
    sym_NotLessGreater = create_sys("NotLessGreater", 0);
    sym_NotLessLess = create_sys("NotLessLess", 0);
    sym_NotLessSlantEqual = create_sys("NotLessSlantEqual", 0);
    sym_NotLessTilde = create_sys("NotLessTilde", 0);
    sym_NotNestedGreaterGreater = create_sys("NotNestedGreaterGreater", 0);
    sym_NotNestedLessLess = create_sys("NotNestedLessLess", 0);
    sym_NotPrecedes = create_sys("NotPrecedes", 0);
    sym_NotPrecedesEqual = create_sys("NotPrecedesEqual", 0);
    sym_NotPrecedesSlantEqual = create_sys("NotPrecedesSlantEqual", 0);
    sym_NotPrecedesTilde = create_sys("NotPrecedesTilde", 0);
    sym_NotReverseElement = create_sys("NotReverseElement", 0);
    sym_NotRightTriangle = create_sys("NotRightTriangle", 0);
    sym_NotRightTriangleBar = create_sys("NotRightTriangleBar", 0);
    sym_NotRightTriangleEqual = create_sys("NotRightTriangleEqual", 0);
    sym_NotSquareSubset = create_sys("NotSquareSubset", 0);
    sym_NotSquareSubsetEqual = create_sys("NotSquareSubsetEqual", 0);
    sym_NotSquareSuperset = create_sys("NotSquareSuperset", 0);
    sym_NotSquareSupersetEqual = create_sys("NotSquareSupersetEqual", 0);
    sym_NotSubset = create_sys("NotSubset", 0);
    sym_NotSubsetEqual = create_sys("NotSubsetEqual", 0);
    sym_NotSucceeds = create_sys("NotSucceeds", 0);
    sym_NotSucceedsEqual = create_sys("NotSucceedsEqual", 0);
    sym_NotSucceedsSlantEqual = create_sys("NotSucceedsSlantEqual", 0);
    sym_NotSucceedsTilde = create_sys("NotSucceedsTilde", 0);
    sym_NotSuperset = create_sys("NotSuperset", 0);
    sym_NotSupersetEqual = create_sys("NotSupersetEqual", 0);
    sym_NotTilde = create_sys("NotTilde", 0);
    sym_NotTildeEqual = create_sys("NotTildeEqual", 0);
    sym_NotTildeFullEqual = create_sys("NotTildeFullEqual", 0);
    sym_NotTildeTilde = create_sys("NotTildeTilde", 0);
    sym_NotVerticalBar = create_sys("NotVerticalBar", 0);
    sym_NProduct = create_sys("NProduct", aHoldAll | aProtected);
    sym_NProductFactors = create_sys("NProductFactors", aProtected);
    sym_NRoots = create_sys("NRoots", aProtected);
    sym_NSolve = create_sys("NSolve", aProtected | aReadProtected);
    sym_NSum = create_sys("NSum", aHoldAll | aProtected);
    sym_NSumTerms = create_sys("NSumTerms", aProtected);
    sym_Null = create_sys("Null", aProtected);
    sym_NullRecords = create_sys("NullRecords", aProtected);
    sym_NullSpace = create_sys("NullSpace", aProtected);
    sym_NullWords = create_sys("NullWords", aProtected);
    sym_Number = create_sys("Number", aProtected);
    sym_NumberFieldClassNumber = create_sys("NumberFieldClassNumber", aProtected | aReadProtected);
    sym_NumberFieldDiscriminant = create_sys("NumberFieldDiscriminant", aListable | aProtected);
    sym_NumberFieldFundamentalUnits = create_sys("NumberFieldFundamentalUnits", aListable | aProtected);
    sym_NumberFieldIntegralBasis = create_sys("NumberFieldIntegralBasis", aListable | aProtected);
    sym_NumberFieldNormRepresentatives = create_sys("NumberFieldNormRepresentatives", aListable | aProtected);
    sym_NumberFieldRegulator = create_sys("NumberFieldRegulator", aListable | aProtected);
    sym_NumberFieldRootsOfUnity = create_sys("NumberFieldRootsOfUnity", aListable | aProtected);
    sym_NumberFieldSignature = create_sys("NumberFieldSignature", aListable | aProtected);
    sym_NumberForm = create_sys("NumberForm", aProtected);
    sym_NumberFormat = create_sys("NumberFormat", aProtected);
    sym_NumberMarks = create_sys("NumberMarks", aProtected);
    sym_NumberMultiplier = create_sys("NumberMultiplier", aProtected);
    sym_NumberPadding = create_sys("NumberPadding", aProtected);
    sym_NumberPoint = create_sys("NumberPoint", aProtected);
    sym_NumberQ = create_sys("NumberQ", aProtected);
    sym_NumberSeparator = create_sys("NumberSeparator", aProtected);
    sym_NumberSigns = create_sys("NumberSigns", aProtected);
    sym_NumberString = create_sys("NumberString", aProtected | aReadProtected);
    sym_Numerator = create_sys("Numerator", aListable | aProtected);
    sym_NumericFunction = create_sys("NumericFunction", aProtected);
    sym_NumericQ = create_sys("NumericQ", aProtected);
    sym_NValues = create_sys("NValues", aHoldAll | aProtected);
    sym_O = create_sys("O", aProtected | aReadProtected);
    sym_OddQ = create_sys2("OddQ", aListable | aProtected, BIF_OddQ);
    sym_Off = create_sys("Off", aHoldAll | aProtected);
    sym_Offset = create_sys("Offset", aProtected);
    sym_OLEData = create_sys("OLEData", aProtected);
    sym_On = create_sys("On", aHoldAll | aProtected);
    sym_OneIdentity = create_sys("OneIdentity", aProtected);
    sym_Opacity = create_sys("Opacity", aProtected | aReadProtected);
    sym_Open = create_sys("Open", aProtected);
    sym_OpenAppend = create_sys("OpenAppend", aProtected);
    sym_Opener = create_sys("Opener", aProtected | aReadProtected);
    sym_OpenerBox = create_sys("OpenerBox", aProtected | aReadProtected);
    sym_OpenerBoxOptions = create_sys("OpenerBoxOptions", aProtected);
    sym_OpenerView = create_sys("OpenerView", aProtected | aReadProtected);
    sym_OpenFunctionInspectorPacket = create_sys("OpenFunctionInspectorPacket", aProtected);
    sym_OpenRead = create_sys("OpenRead", aProtected);
    sym_OpenSpecialOptions = create_sys("OpenSpecialOptions", aProtected);
    sym_OpenTemporary = create_sys("OpenTemporary", aProtected);
    sym_OpenWrite = create_sys("OpenWrite", aProtected);
    sym_Operate = create_sys("Operate", aProtected);
    sym_Optional = create_sys("Optional", aProtected);
    sym_OptionInspectorSettings = create_sys("OptionInspectorSettings", aProtected);
    sym_OptionQ = create_sys("OptionQ", aProtected);
    sym_Options = create_sys("Options", aProtected);
    sym_OptionsPacket = create_sys("OptionsPacket", aProtected);
    sym_OptionsPattern = create_sys("OptionsPattern", aProtected);
    sym_OptionValue = create_sys("OptionValue", aProtected);
    sym_OptionValueBox = create_sys("OptionValueBox", aProtected | aReadProtected);
    sym_OptionValueBoxOptions = create_sys("OptionValueBoxOptions", aProtected);
    sym_Or = create_sys2("Or", aFlat | aHoldAll | aOneIdentity | aProtected, BIF_Or);
    sym_Orange = create_sys("Orange", aProtected);
    sym_Order = create_sys2("Order", aProtected, BIF_Order);
    sym_OrderedQ = create_sys("OrderedQ", aProtected);
    sym_Ordering = create_sys("Ordering", aProtected);
    sym_Orderless = create_sys("Orderless", aProtected);
    sym_Orthogonalize = create_sys("Orthogonalize", aProtected);
    sym_Out = create_sys("Out", aListable | aProtected);
    sym_Outer = create_sys("Outer", aProtected);
    sym_OutputAutoOverwrite = create_sys("OutputAutoOverwrite", aProtected);
    sym_OutputForm = create_sys("OutputForm", aProtected);
    sym_OutputFormData = create_sys("OutputFormData", aProtected);
    sym_OutputGrouping = create_sys("OutputGrouping", aProtected);
    sym_OutputMathEditExpression = create_sys("OutputMathEditExpression", aProtected);
    sym_OutputNamePacket = create_sys("OutputNamePacket", aProtected);
    sym_OutputSizeLimit = create_sys("OutputSizeLimit", aProtected);
    sym_OutputStream = create_sys("OutputStream", aProtected);
    sym_Over = create_sys("Over", aProtected);
    sym_OverBar = create_sys("OverBar", 0);
    sym_OverDot = create_sys("OverDot", 0);
    sym_Overflow = create_sys("Overflow", aProtected);
    sym_OverHat = create_sys("OverHat", 0);
    sym_Overlaps = create_sys("Overlaps", aProtected);
    sym_Overscript = create_sys("Overscript", aNHoldRest);
    sym_OverscriptBox = create_sys("OverscriptBox", aProtected | aReadProtected);
    sym_OverscriptBoxOptions = create_sys("OverscriptBoxOptions", aProtected);
    sym_OverTilde = create_sys("OverTilde", 0);
    sym_OverVector = create_sys("OverVector", 0);
    sym_OwnValues = create_sys("OwnValues", aHoldAll | aProtected);
    sym_PackingMethod = create_sys("PackingMethod", aProtected);
    sym_PaddedForm = create_sys("PaddedForm", aProtected);
    sym_PadeApproximant = create_sys("PadeApproximant", aProtected | aReadProtected);
    sym_PadLeft = create_sys("PadLeft", aProtected);
    sym_PadRight = create_sys("PadRight", aProtected);
    sym_PageBreakAbove = create_sys("PageBreakAbove", aProtected);
    sym_PageBreakBelow = create_sys("PageBreakBelow", aProtected);
    sym_PageBreakWithin = create_sys("PageBreakWithin", aProtected);
    sym_PageFooterLines = create_sys("PageFooterLines", aProtected);
    sym_PageFooters = create_sys("PageFooters", aProtected);
    sym_PageHeaderLines = create_sys("PageHeaderLines", aProtected);
    sym_PageHeaders = create_sys("PageHeaders", aProtected);
    sym_PageHeight = create_sys("PageHeight", aProtected);
    sym_PageWidth = create_sys("PageWidth", aProtected);
    sym_PaletteNotebook = create_sys("PaletteNotebook", aProtected | aReadProtected);
    sym_PalettePath = create_sys("PalettePath", aProtected);
    sym_Pane = create_sys("Pane", aProtected | aReadProtected);
    sym_PaneBox = create_sys("PaneBox", aProtected | aReadProtected);
    sym_PaneBoxOptions = create_sys("PaneBoxOptions", aProtected);
    sym_Panel = create_sys("Panel", aProtected | aReadProtected);
    sym_PanelBox = create_sys("PanelBox", aProtected | aReadProtected);
    sym_PanelBoxOptions = create_sys("PanelBoxOptions", aProtected);
    sym_Paneled = create_sys("Paneled", aProtected | aReadProtected);
    sym_PaneSelector = create_sys("PaneSelector", aProtected | aReadProtected);
    sym_PaneSelectorBox = create_sys("PaneSelectorBox", aProtected | aReadProtected);
    sym_PaneSelectorBoxOptions = create_sys("PaneSelectorBoxOptions", aProtected);
    sym_PaperWidth = create_sys("PaperWidth", aProtected);
    sym_ParabolicCylinderD = create_sys("ParabolicCylinderD", aListable | aNumericFunction | aProtected | aReadProtected);
    sym_ParagraphIndent = create_sys("ParagraphIndent", aProtected);
    sym_ParagraphSpacing = create_sys("ParagraphSpacing", aProtected);
    sym_Parameter = create_sys("Parameter", aProtected);
    sym_ParameterVariables = create_sys("ParameterVariables", aProtected);
    sym_ParametricPlot = create_sys("ParametricPlot", aHoldAll | aProtected);
    sym_ParametricPlot3D = create_sys("ParametricPlot3D", aHoldAll | aProtected);
    sym_ParentConnect = create_sys("ParentConnect", aProtected);
    sym_ParentDirectory = create_sys("ParentDirectory", aProtected);
    sym_ParentForm = create_sys("ParentForm", aProtected);
    sym_Parenthesize = create_sys("Parenthesize", aHoldAllComplete | aProtected);
    sym_ParetoDistribution = create_sys("ParetoDistribution", aProtected | aReadProtected);
    sym_Part = create_sys2("Part", aNHoldRest | aProtected | aReadProtected, BIF_Part);
    sym_PartialD = create_sys("PartialD", 0);
    sym_ParticleData = create_sys("ParticleData", aProtected | aReadProtected);
    sym_Partition = create_sys("Partition", aProtected);
    sym_PartitionsP = create_sys("PartitionsP", aListable | aProtected);
    sym_PartitionsQ = create_sys("PartitionsQ", aListable | aProtected);
    sym_PassEventsDown = create_sys("PassEventsDown", aProtected);
    sym_PassEventsUp = create_sys("PassEventsUp", aProtected);
    sym_PasteBoxFormInlineCells = create_sys("PasteBoxFormInlineCells", aProtected);
    sym_PasteButton = create_sys("PasteButton", aProtected | aReadProtected);
    sym_Path = create_sys("Path", aProtected);
    sym_Pattern = create_sys("Pattern", aHoldFirst | aProtected);
    sym_PatternSequence = create_sys("PatternSequence", aProtected);
    sym_PatternTest = create_sys("PatternTest", aHoldRest | aProtected);
    sym_Pause = create_sys("Pause", aProtected);
    sym_PausedTime = create_sys("PausedTime", aProtected | aReadProtected);
    sym_PDF = create_sys("PDF", aProtected | aReadProtected);
    sym_PerformanceGoal = create_sys("PerformanceGoal", aProtected);
    sym_PeriodicInterpolation = create_sys("PeriodicInterpolation", aProtected);
    sym_Permutations = create_sys("Permutations", aProtected);
    sym_Pi = create_sys("Pi", aConstant | aProtected | aReadProtected);
    sym_Pick = create_sys("Pick", aProtected);
    sym_Piecewise = create_sys("Piecewise", aHoldAll | aProtected | aReadProtected);
    sym_PiecewiseExpand = create_sys("PiecewiseExpand", aProtected);
    sym_Pink = create_sys("Pink", aProtected);
    sym_Pivoting = create_sys("Pivoting", aProtected);
    sym_PixelConstrained = create_sys("PixelConstrained", aProtected | aReadProtected);
    sym_Placeholder = create_sys("Placeholder", aProtected);
    sym_Plain = create_sys("Plain", aProtected);
    sym_Play = create_sys("Play", aHoldAll | aProtected);
    sym_PlayRange = create_sys("PlayRange", aProtected);
    sym_Plot = create_sys("Plot", aHoldAll | aProtected);
    sym_Plot3D = create_sys("Plot3D", aHoldAll | aProtected);
    sym_Plot3Matrix = create_sys("Plot3Matrix", aProtected);
    sym_PlotDivision = create_sys("PlotDivision", aProtected);
    sym_PlotJoined = create_sys("PlotJoined", aProtected);
    sym_PlotLabel = create_sys("PlotLabel", aProtected);
    sym_PlotMarkers = create_sys("PlotMarkers", aProtected);
    sym_PlotPoints = create_sys("PlotPoints", aProtected);
    sym_PlotRange = create_sys("PlotRange", aProtected | aReadProtected);
    sym_PlotRangeClipping = create_sys("PlotRangeClipping", aProtected);
    sym_PlotRangePadding = create_sys("PlotRangePadding", aProtected);
    sym_PlotRegion = create_sys("PlotRegion", aProtected);
    sym_PlotStyle = create_sys("PlotStyle", aProtected);
    sym_Plus = create_sys2("Plus", aFlat | aListable | aNumericFunction | aOneIdentity | aOrderless | aProtected, BIF_Plus);
    sym_PlusMinus = create_sys("PlusMinus", 0);
    sym_Pochhammer = create_sys("Pochhammer", aListable | aNumericFunction | aProtected);
    sym_Point = create_sys("Point", aProtected | aReadProtected);
    sym_Point3DBox = create_sys("Point3DBox", aHoldAll | aProtected | aReadProtected);
    sym_PointBox = create_sys("PointBox", aHoldAll | aProtected | aReadProtected);
    sym_PointForm = create_sys("PointForm", aProtected);
    sym_PointSize = create_sys("PointSize", aProtected | aReadProtected);
    sym_PoissonDistribution = create_sys("PoissonDistribution", aProtected | aReadProtected);
    sym_PolarPlot = create_sys("PolarPlot", aProtected | aReadProtected);
    sym_PolyGamma = create_sys("PolyGamma", aListable | aNumericFunction | aProtected);
    sym_Polygon = create_sys("Polygon", aProtected | aReadProtected);
    sym_Polygon3DBox = create_sys("Polygon3DBox", aHoldAll | aProtected | aReadProtected);
    sym_Polygon3DBoxOptions = create_sys("Polygon3DBoxOptions", aProtected);
    sym_PolygonBox = create_sys("PolygonBox", aHoldAll | aProtected | aReadProtected);
    sym_PolygonBoxOptions = create_sys("PolygonBoxOptions", aProtected);
    sym_PolygonHoleScale = create_sys("PolygonHoleScale", aProtected);
    sym_PolygonIntersections = create_sys("PolygonIntersections", aProtected);
    sym_PolygonScale = create_sys("PolygonScale", aProtected);
    sym_PolyhedronData = create_sys("PolyhedronData", aProtected | aReadProtected);
    sym_PolyLog = create_sys("PolyLog", aListable | aNumericFunction | aProtected | aReadProtected);
    sym_PolynomialExtendedGCD = create_sys("PolynomialExtendedGCD", aProtected);
    sym_PolynomialForm = create_sys("PolynomialForm", aProtected);
    sym_PolynomialGCD = create_sys("PolynomialGCD", aListable | aProtected);
    sym_PolynomialLCM = create_sys("PolynomialLCM", aListable | aProtected);
    sym_PolynomialMod = create_sys("PolynomialMod", aProtected);
    sym_PolynomialQ = create_sys("PolynomialQ", aProtected);
    sym_PolynomialQuotient = create_sys("PolynomialQuotient", aProtected);
    sym_PolynomialQuotientRemainder = create_sys("PolynomialQuotientRemainder", aProtected);
    sym_PolynomialReduce = create_sys("PolynomialReduce", aProtected);
    sym_PolynomialRemainder = create_sys("PolynomialRemainder", aProtected);
    sym_Polynomials = create_sys("Polynomials", aProtected);
    sym_PopupMenu = create_sys("PopupMenu", aProtected | aReadProtected);
    sym_PopupMenuBox = create_sys("PopupMenuBox", aProtected | aReadProtected);
    sym_PopupMenuBoxOptions = create_sys("PopupMenuBoxOptions", aProtected);
    sym_PopupView = create_sys("PopupView", aProtected | aReadProtected);
    sym_PopupWindow = create_sys("PopupWindow", aProtected | aReadProtected);
    sym_Position = create_sys("Position", aProtected);
    sym_Positive = create_sys("Positive", aListable | aProtected);
    sym_PositiveDefiniteMatrixQ = create_sys("PositiveDefiniteMatrixQ", aProtected);
    sym_PossibleZeroQ = create_sys("PossibleZeroQ", aListable | aProtected);
    sym_Postfix = create_sys("Postfix", aProtected);
    sym_PostScript = create_sys("PostScript", aProtected | aReadProtected);
    sym_Power = create_sys2("Power", aListable | aNumericFunction | aOneIdentity | aProtected, BIF_Power);
    sym_PowerExpand = create_sys("PowerExpand", aProtected);
    sym_PowerMod = create_sys("PowerMod", aListable | aProtected);
    sym_PowerModList = create_sys("PowerModList", aProtected);
    sym_PowersRepresentations = create_sys("PowersRepresentations", aProtected | aReadProtected);
    sym_Precedence = create_sys("Precedence", aProtected);
    sym_PrecedenceForm = create_sys("PrecedenceForm", aProtected);
    sym_Precedes = create_sys("Precedes", 0);
    sym_PrecedesEqual = create_sys("PrecedesEqual", 0);
    sym_PrecedesSlantEqual = create_sys("PrecedesSlantEqual", 0);
    sym_PrecedesTilde = create_sys("PrecedesTilde", 0);
    sym_Precision = create_sys("Precision", aProtected);
    sym_PrecisionGoal = create_sys("PrecisionGoal", aProtected);
    sym_PreDecrement = create_sys2("PreDecrement", aHoldFirst | aProtected | aReadProtected, BIF_PreDecrement);
    sym_PreferencesPath = create_sys("PreferencesPath", aProtected);
    sym_Prefix = create_sys("Prefix", aProtected);
    sym_PreIncrement = create_sys2("PreIncrement", aHoldFirst | aProtected | aReadProtected, BIF_PreIncrement);
    sym_Prepend = create_sys2("Prepend", aProtected, BIF_Prepend);
    sym_PrependTo = create_sys("PrependTo", aHoldFirst | aProtected);
    sym_PresentValue = create_sys("PresentValue", aProtected | aReadProtected);
    sym_PresentValueList = create_sys("PresentValueList", aProtected | aReadProtected);
    sym_PreserveImageOptions = create_sys("PreserveImageOptions", aProtected);
    sym_Previous = create_sys("Previous", aProtected);
    sym_PrimaryPlaceholder = create_sys("PrimaryPlaceholder", aProtected);
    sym_Prime = create_sys("Prime", aListable | aProtected);
    sym_PrimePi = create_sys("PrimePi", aListable | aProtected);
    sym_PrimePowerQ = create_sys("PrimePowerQ", aProtected | aReadProtected);
    sym_PrimeQ = create_sys("PrimeQ", aListable | aProtected);
    sym_Primes = create_sys("Primes", aProtected);
    sym_PrimitiveRoot = create_sys("PrimitiveRoot", aListable | aProtected);
    sym_PrincipalValue = create_sys("PrincipalValue", aProtected);
    sym_Print = create_sys2("Print", aProtected, BIF_Print);
    sym_PrintAction = create_sys("PrintAction", aProtected);
    sym_PrintForm = create_sys("PrintForm", aProtected);
    sym_PrintingCopies = create_sys("PrintingCopies", aProtected);
    sym_PrintingOptions = create_sys("PrintingOptions", aProtected);
    sym_PrintingPageRange = create_sys("PrintingPageRange", aProtected);
    sym_PrintingStartingPageNumber = create_sys("PrintingStartingPageNumber", aProtected);
    sym_PrintingStyleEnvironment = create_sys("PrintingStyleEnvironment", aProtected);
    sym_PrintPrecision = create_sys("PrintPrecision", aProtected);
    sym_PrintTemporary = create_sys("PrintTemporary", aProtected | aReadProtected);
    sym_PrivateCellOptions = create_sys("PrivateCellOptions", aProtected);
    sym_PrivateEvaluationOptions = create_sys("PrivateEvaluationOptions", aProtected);
    sym_PrivateFontOptions = create_sys("PrivateFontOptions", aProtected);
    sym_PrivateNotebookOptions = create_sys("PrivateNotebookOptions", aProtected);
    sym_PrivatePaths = create_sys("PrivatePaths", aProtected);
    sym_Product = create_sys("Product", aHoldAll | aProtected | aReadProtected);
    sym_ProductLog = create_sys("ProductLog", aListable | aProtected);
    sym_ProgressIndicator = create_sys("ProgressIndicator", aProtected | aReadProtected);
    sym_ProgressIndicatorBox = create_sys("ProgressIndicatorBox", aProtected | aReadProtected);
    sym_ProgressIndicatorBoxOptions = create_sys("ProgressIndicatorBoxOptions", aProtected);
    sym_Projection = create_sys("Projection", aProtected | aReadProtected);
    sym_Prolog = create_sys("Prolog", aProtected);
    sym_PromptForm = create_sys("PromptForm", aProtected);
    sym_Proportion = create_sys("Proportion", 0);
    sym_Proportional = create_sys("Proportional", 0);
    sym_Protect = create_sys2("Protect", aHoldAll | aProtected, BIF_Protect);
    sym_Protected = create_sys("Protected", aProtected);
    sym_PseudoInverse = create_sys("PseudoInverse", aProtected);
    sym_Purple = create_sys("Purple", aProtected);
    sym_Put = create_sys("Put", aProtected);
    sym_PutAppend = create_sys("PutAppend", aProtected);
    sym_QRDecomposition = create_sys("QRDecomposition", aProtected);
    sym_QuadraticIrrationalQ = create_sys("QuadraticIrrationalQ", aListable | aProtected);
    sym_Quantile = create_sys("Quantile", aProtected);
    sym_Quartics = create_sys("Quartics", aProtected);
    sym_QuartileDeviation = create_sys("QuartileDeviation", aProtected | aReadProtected);
    sym_Quartiles = create_sys("Quartiles", aProtected | aReadProtected);
    sym_QuartileSkewness = create_sys("QuartileSkewness", aProtected | aReadProtected);
    sym_Quiet = create_sys("Quiet", aHoldAll | aProtected);
    sym_Quit = create_sys("Quit", aProtected);
    sym_Quotient = create_sys2("Quotient", aListable | aNumericFunction | aProtected, BIF_Quotient);
    sym_QuotientRemainder = create_sys2("QuotientRemainder", aListable | aNumericFunction | aProtected, BIF_QuotientRemainder);
    sym_RadicalBox = create_sys("RadicalBox", aProtected | aReadProtected);
    sym_RadicalBoxOptions = create_sys("RadicalBoxOptions", aProtected);
    sym_RadioButton = create_sys("RadioButton", aProtected | aReadProtected);
    sym_RadioButtonBar = create_sys("RadioButtonBar", aProtected | aReadProtected);
    sym_RadioButtonBox = create_sys("RadioButtonBox", aProtected | aReadProtected);
    sym_RadioButtonBoxOptions = create_sys("RadioButtonBoxOptions", aProtected);
    sym_RamanujanTau = create_sys("RamanujanTau", aProtected | aReadProtected);
    sym_RamanujanTauL = create_sys("RamanujanTauL", aProtected | aReadProtected);
    sym_RamanujanTauTheta = create_sys("RamanujanTauTheta", aProtected | aReadProtected);
    sym_RamanujanTauZ = create_sys("RamanujanTauZ", aProtected | aReadProtected);
    sym_Random = create_sys("Random", aProtected);
    sym_RandomChoice = create_sys("RandomChoice", aProtected);
    sym_RandomComplex = create_sys("RandomComplex", aProtected);
    sym_RandomInteger = create_sys("RandomInteger", aProtected);
    sym_RandomPrime = create_sys("RandomPrime", aProtected | aReadProtected);
    sym_RandomReal = create_sys("RandomReal", aProtected);
    sym_RandomSample = create_sys("RandomSample", aProtected);
    sym_RandomSeed = create_sys("RandomSeed", aProtected);
    sym_Range = create_sys2("Range", aListable | aProtected, BIF_Range);
    sym_RangeSpecification = create_sys("RangeSpecification", aProtected);
    sym_Raster = create_sys("Raster", aProtected | aReadProtected);
    sym_RasterArray = create_sys("RasterArray", aProtected | aReadProtected);
    sym_RasterBox = create_sys("RasterBox", aHoldAll | aProtected | aReadProtected);
    sym_RasterBoxOptions = create_sys("RasterBoxOptions", aProtected);
    sym_Rasterize = create_sys("Rasterize", aProtected | aReadProtected);
    sym_RasterSize = create_sys("RasterSize", aProtected | aReadProtected);
    sym_Rational = create_sys2("Rational", aProtected, BIF_Rational);
    sym_RationalFunctions = create_sys("RationalFunctions", aProtected);
    sym_Rationalize = create_sys("Rationalize", aProtected);
    sym_Rationals = create_sys("Rationals", aProtected);
    sym_Raw = create_sys("Raw", aProtected);
    sym_RawBoxes = create_sys("RawBoxes", aReadProtected);
    sym_RawData = create_sys("RawData", aProtected);
    sym_RawMedium = create_sys("RawMedium", aProtected);
    sym_RayleighDistribution = create_sys("RayleighDistribution", aProtected | aReadProtected);
    sym_Re = create_sys("Re", aListable | aNumericFunction | aProtected);
    sym_Read = create_sys("Read", aProtected);
    sym_ReadList = create_sys("ReadList", aProtected);
    sym_ReadProtected = create_sys("ReadProtected", aProtected);
    sym_Real = create_sys("Real", aProtected);
    sym_RealBlockForm = create_sys("RealBlockForm", aProtected);
    sym_RealDigits = create_sys("RealDigits", aListable | aProtected);
    sym_RealExponent = create_sys("RealExponent", aListable | aProtected);
    sym_Reals = create_sys("Reals", aProtected);
    sym_Reap = create_sys("Reap", aHoldFirst | aProtected);
    sym_Record = create_sys("Record", aProtected);
    sym_RecordLists = create_sys("RecordLists", aProtected);
    sym_RecordSeparators = create_sys("RecordSeparators", aProtected);
    sym_Rectangle = create_sys("Rectangle", aProtected | aReadProtected);
    sym_RectangleBox = create_sys("RectangleBox", aHoldAll | aProtected | aReadProtected);
    sym_RecurringDigitsForm = create_sys("RecurringDigitsForm", aProtected | aReadProtected);
    sym_Red = create_sys("Red", aProtected);
    sym_Reduce = create_sys("Reduce", aProtected);
    sym_Refine = create_sys("Refine", aProtected);
    sym_ReflectionMatrix = create_sys("ReflectionMatrix", aProtected | aReadProtected);
    sym_ReflectionTransform = create_sys("ReflectionTransform", aProtected | aReadProtected);
    sym_Refresh = create_sys("Refresh", aHoldFirst | aProtected);
    sym_RefreshRate = create_sys("RefreshRate", aProtected);
    sym_RegionFunction = create_sys("RegionFunction", aProtected);
    sym_RegionPlot = create_sys("RegionPlot", aHoldAll | aProtected);
    sym_RegionPlot3D = create_sys("RegionPlot3D", aHoldAll | aProtected);
    sym_RegularExpression = create_sys("RegularExpression", aProtected);
    sym_RegularPayment = create_sys("RegularPayment", aProtected | aReadProtected);
    sym_Reinstall = create_sys("Reinstall", aReadProtected);
    sym_Release = create_sys("Release", aProtected);
    sym_ReleaseHold = create_sys("ReleaseHold", aProtected);
    sym_ReliefPlot = create_sys("ReliefPlot", aProtected | aReadProtected);
    sym_Remove = create_sys("Remove", aHoldAll | aProtected);
    sym_Removed = create_sys("Removed", aProtected);
    sym_RenameDirectory = create_sys("RenameDirectory", aProtected);
    sym_RenameFile = create_sys("RenameFile", aProtected);
    sym_RenderAll = create_sys("RenderAll", aProtected);
    sym_RenderingOptions = create_sys("RenderingOptions", aProtected);
    sym_Repeated = create_sys("Repeated", aProtected);
    sym_RepeatedNull = create_sys("RepeatedNull", aProtected);
    sym_RepeatedString = create_sys("RepeatedString", aProtected);
    sym_Replace = create_sys("Replace", aProtected);
    sym_ReplaceAll = create_sys("ReplaceAll", aProtected);
    sym_ReplaceCar = create_sys2("ReplaceCar", aProtected, BIF_ReplaceCar);
    sym_ReplaceCdr = create_sys2("ReplaceCdr", aProtected, BIF_ReplaceCdr);
    sym_ReplaceHeldPart = create_sys("ReplaceHeldPart", aProtected);
    sym_ReplaceList = create_sys("ReplaceList", aProtected);
    sym_ReplacePart = create_sys("ReplacePart", aProtected);
    sym_ReplaceRepeated = create_sys("ReplaceRepeated", aProtected);
    sym_Rescale = create_sys("Rescale", aNumericFunction | aProtected | aReadProtected);
    sym_RescalingTransform = create_sys("RescalingTransform", aProtected | aReadProtected);
    sym_ResetDirectory = create_sys("ResetDirectory", aProtected);
    sym_ResetMenusPacket = create_sys("ResetMenusPacket", aProtected);
    sym_Residue = create_sys("Residue", aProtected);
    sym_Resolve = create_sys("Resolve", aProtected);
    sym_Rest = create_sys2("Rest", aProtected, BIF_Rest);
    sym_Resultant = create_sys("Resultant", aListable | aProtected);
    sym_ResumePacket = create_sys("ResumePacket", aProtected | aReadProtected);
    sym_Return = create_sys("Return", aProtected);
    sym_ReturnExpressionPacket = create_sys("ReturnExpressionPacket", aProtected);
    sym_ReturnInputFormPacket = create_sys("ReturnInputFormPacket", aProtected);
    sym_ReturnPacket = create_sys("ReturnPacket", aProtected);
    sym_ReturnTextPacket = create_sys("ReturnTextPacket", aProtected);
    sym_Reverse = create_sys2("Reverse", aProtected, BIF_Reverse);
    sym_ReverseElement = create_sys("ReverseElement", 0);
    sym_ReverseEquilibrium = create_sys("ReverseEquilibrium", 0);
    sym_ReverseUpEquilibrium = create_sys("ReverseUpEquilibrium", 0);
    sym_RevolutionAxis = create_sys("RevolutionAxis", aProtected | aReadProtected);
    sym_RevolutionPlot3D = create_sys("RevolutionPlot3D", aProtected | aReadProtected);
    sym_RGBColor = create_sys("RGBColor", aProtected | aReadProtected);
    sym_RiemannSiegelTheta = create_sys("RiemannSiegelTheta", aListable | aNumericFunction | aProtected | aReadProtected);
    sym_RiemannSiegelZ = create_sys("RiemannSiegelZ", aListable | aNumericFunction | aProtected | aReadProtected);
    sym_Riffle = create_sys("Riffle", aProtected);
    sym_Right = create_sys("Right", aProtected);
    sym_RightArrow = create_sys("RightArrow", 0);
    sym_RightArrowBar = create_sys("RightArrowBar", 0);
    sym_RightArrowLeftArrow = create_sys("RightArrowLeftArrow", 0);
    sym_RightDownTeeVector = create_sys("RightDownTeeVector", 0);
    sym_RightDownVector = create_sys("RightDownVector", 0);
    sym_RightDownVectorBar = create_sys("RightDownVectorBar", 0);
    sym_RightTee = create_sys("RightTee", 0);
    sym_RightTeeArrow = create_sys("RightTeeArrow", 0);
    sym_RightTeeVector = create_sys("RightTeeVector", 0);
    sym_RightTriangle = create_sys("RightTriangle", 0);
    sym_RightTriangleBar = create_sys("RightTriangleBar", 0);
    sym_RightTriangleEqual = create_sys("RightTriangleEqual", 0);
    sym_RightUpDownVector = create_sys("RightUpDownVector", 0);
    sym_RightUpTeeVector = create_sys("RightUpTeeVector", 0);
    sym_RightUpVector = create_sys("RightUpVector", 0);
    sym_RightUpVectorBar = create_sys("RightUpVectorBar", 0);
    sym_RightVector = create_sys("RightVector", 0);
    sym_RightVectorBar = create_sys("RightVectorBar", 0);
    sym_RogersTanimotoDissimilarity = create_sys("RogersTanimotoDissimilarity", aProtected);
    sym_Root = create_sys("Root", aNHoldAll | aProtected | aReadProtected);
    sym_RootApproximant = create_sys("RootApproximant", aProtected | aReadProtected);
    sym_RootIntervals = create_sys("RootIntervals", aProtected | aReadProtected);
    sym_RootMeanSquare = create_sys("RootMeanSquare", aProtected | aReadProtected);
    sym_RootOfUnityQ = create_sys("RootOfUnityQ", aListable | aProtected);
    sym_RootReduce = create_sys("RootReduce", aProtected);
    sym_Roots = create_sys("Roots", aProtected);
    sym_RootSum = create_sys("RootSum", aProtected);
    sym_Rotate = create_sys("Rotate", aProtected | aReadProtected);
    sym_RotateLabel = create_sys("RotateLabel", aProtected);
    sym_RotateLeft = create_sys("RotateLeft", aProtected);
    sym_RotateRight = create_sys("RotateRight", aProtected);
    sym_RotationAction = create_sys("RotationAction", aProtected);
    sym_RotationBox = create_sys("RotationBox", aProtected | aReadProtected);
    sym_RotationBoxOptions = create_sys("RotationBoxOptions", aProtected);
    sym_RotationMatrix = create_sys("RotationMatrix", aProtected | aReadProtected);
    sym_RotationTransform = create_sys("RotationTransform", aProtected | aReadProtected);
    sym_Round = create_sys2("Round", aListable | aNumericFunction | aProtected, BIF_Round);
    sym_RoundImplies = create_sys("RoundImplies", 0);
    sym_Row = create_sys("Row", aProtected | aReadProtected);
    sym_RowAlignments = create_sys("RowAlignments", aProtected);
    sym_RowBackgrounds = create_sys("RowBackgrounds", aProtected);
    sym_RowBox = create_sys("RowBox", aProtected);
    sym_RowHeights = create_sys("RowHeights", aProtected);
    sym_RowLines = create_sys("RowLines", aProtected);
    sym_RowMinHeight = create_sys("RowMinHeight", aProtected);
    sym_RowReduce = create_sys("RowReduce", aProtected);
    sym_RowsEqual = create_sys("RowsEqual", aProtected);
    sym_RowSpacings = create_sys("RowSpacings", aProtected);
    sym_RSolve = create_sys("RSolve", aProtected);
    sym_Rule = create_sys("Rule", aProtected | aSequenceHold);
    sym_RuleCondition = create_sys("RuleCondition", aHoldFirst | aProtected);
    sym_RuleDelayed = create_sys("RuleDelayed", aHoldRest | aProtected | aSequenceHold);
    sym_RuleForm = create_sys("RuleForm", aProtected);
    sym_RulerUnits = create_sys("RulerUnits", aProtected);
    sym_Run = create_sys("Run", aProtected);
    sym_RunThrough = create_sys("RunThrough", aProtected | aReadProtected);
    sym_RussellRaoDissimilarity = create_sys("RussellRaoDissimilarity", aProtected);
    sym_SameQ = create_sys2("SameQ", aProtected, BIF_SameQ);
    sym_SameTest = create_sys("SameTest", aProtected);
    sym_SampleDepth = create_sys("SampleDepth", aProtected);
    sym_SampledSoundFunction = create_sys("SampledSoundFunction", aHoldAll | aProtected | aReadProtected);
    sym_SampledSoundList = create_sys("SampledSoundList", aProtected | aReadProtected);
    sym_SampleRate = create_sys("SampleRate", aProtected);
    sym_Save = create_sys("Save", aHoldRest | aProtected);
    sym_Saveable = create_sys("Saveable", aProtected);
    sym_SaveAutoDelete = create_sys("SaveAutoDelete", aProtected);
    sym_SaveDefinitions = create_sys("SaveDefinitions", aProtected | aReadProtected);
    sym_Scale = create_sys("Scale", aProtected | aReadProtected);
    sym_Scaled = create_sys("Scaled", aProtected);
    sym_ScaledMousePosition = create_sys("ScaledMousePosition", aProtected | aReadProtected);
    sym_ScalingMatrix = create_sys("ScalingMatrix", aProtected | aReadProtected);
    sym_ScalingTransform = create_sys("ScalingTransform", aProtected | aReadProtected);
    sym_Scan = create_sys("Scan", aProtected);
    sym_SchurDecomposition = create_sys("SchurDecomposition", aProtected);
    sym_ScientificForm = create_sys("ScientificForm", aProtected);
    sym_ScreenRectangle = create_sys("ScreenRectangle", aProtected);
    sym_ScreenStyleEnvironment = create_sys("ScreenStyleEnvironment", aProtected);
    sym_ScriptBaselineShifts = create_sys("ScriptBaselineShifts", aProtected);
    sym_ScriptLevel = create_sys("ScriptLevel", aProtected);
    sym_ScriptMinSize = create_sys("ScriptMinSize", aProtected);
    sym_ScriptRules = create_sys("ScriptRules", aProtected);
    sym_ScriptSizeMultipliers = create_sys("ScriptSizeMultipliers", aProtected);
    sym_ScrollingOptions = create_sys("ScrollingOptions", aProtected);
    sym_ScrollPosition = create_sys("ScrollPosition", aProtected);
    sym_Sec = create_sys("Sec", aListable | aNumericFunction | aProtected);
    sym_Sech = create_sys("Sech", aListable | aNumericFunction | aProtected);
    sym_SectionGrouping = create_sys("SectionGrouping", aProtected);
    sym_SeedRandom = create_sys("SeedRandom", aProtected);
    sym_Select = create_sys("Select", aProtected);
    sym_Selectable = create_sys("Selectable", aProtected);
    sym_SelectedNotebook = create_sys("SelectedNotebook", aProtected | aReadProtected);
    sym_Selection = create_sys("Selection", aProtected);
    sym_SelectionAnimate = create_sys("SelectionAnimate", aProtected | aReadProtected);
    sym_SelectionCell = create_sys("SelectionCell", aProtected);
    sym_SelectionCellCreateCell = create_sys("SelectionCellCreateCell", aProtected | aReadProtected);
    sym_SelectionCellDefaultStyle = create_sys("SelectionCellDefaultStyle", aProtected);
    sym_SelectionCellParentStyle = create_sys("SelectionCellParentStyle", aProtected);
    sym_SelectionCreateCell = create_sys("SelectionCreateCell", aProtected | aReadProtected);
    sym_SelectionDebuggerTag = create_sys("SelectionDebuggerTag", 0);
    sym_SelectionDuplicateCell = create_sys("SelectionDuplicateCell", aProtected);
    sym_SelectionEvaluate = create_sys("SelectionEvaluate", aProtected | aReadProtected);
    sym_SelectionEvaluateCreateCell = create_sys("SelectionEvaluateCreateCell", aProtected | aReadProtected);
    sym_SelectionMove = create_sys("SelectionMove", aProtected | aReadProtected);
    sym_SelectionSetStyle = create_sys("SelectionSetStyle", aProtected);
    sym_SelfLoopStyle = create_sys("SelfLoopStyle", aProtected);
    sym_SemialgebraicComponentInstances = create_sys("SemialgebraicComponentInstances", aProtected);
    sym_SendFontInformationToKernel = create_sys("SendFontInformationToKernel", aProtected);
    sym_Sequence = create_sys("Sequence", aProtected);
    sym_SequenceForm = create_sys("SequenceForm", aProtected);
    sym_SequenceHold = create_sys("SequenceHold", aProtected);
    sym_SequenceLimit = create_sys("SequenceLimit", aProtected);
    sym_Series = create_sys("Series", aProtected);
    sym_SeriesCoefficient = create_sys("SeriesCoefficient", aProtected);
    sym_SeriesData = create_sys("SeriesData", aProtected | aReadProtected);
    sym_SessionTime = create_sys("SessionTime", aProtected);
    sym_Set = create_sys2("Set", aHoldFirst | aProtected | aSequenceHold, BIF_Set);
    sym_SetAccuracy = create_sys("SetAccuracy", aProtected);
    sym_SetAttributes = create_sys2("SetAttributes", aHoldFirst | aProtected, BIF_SetAttributes);
    sym_Setbacks = create_sys("Setbacks", aProtected);
    sym_SetBoxFormNamesPacket = create_sys("SetBoxFormNamesPacket", aProtected);
    sym_SetDelayed = create_sys2("SetDelayed", aHoldAll | aProtected | aSequenceHold, BIF_SetDelayed);
    sym_SetDirectory = create_sys("SetDirectory", aProtected);
    sym_SetEvaluationNotebook = create_sys("SetEvaluationNotebook", aProtected);
    sym_SetFileDate = create_sys("SetFileDate", aProtected);
    sym_SetFileLoadingContext = create_sys("SetFileLoadingContext", aProtected);
    sym_SetNotebookStatusLine = create_sys("SetNotebookStatusLine", aProtected);
    sym_SetOptions = create_sys("SetOptions", aProtected);
    sym_SetOptionsPacket = create_sys("SetOptionsPacket", aProtected);
    sym_SetPersistentFrontEnd = create_sys("SetPersistentFrontEnd", 0);
    sym_SetPrecision = create_sys("SetPrecision", aProtected);
    sym_SetSelectedNotebook = create_sys("SetSelectedNotebook", aProtected | aReadProtected);
    sym_SetSpeechParametersPacket = create_sys("SetSpeechParametersPacket", aProtected);
    sym_SetStreamPosition = create_sys("SetStreamPosition", aProtected);
    sym_SetSystemOptions = create_sys("SetSystemOptions", aProtected);
    sym_Setter = create_sys("Setter", aProtected | aReadProtected);
    sym_SetterBar = create_sys("SetterBar", aProtected | aReadProtected);
    sym_SetterBox = create_sys("SetterBox", aProtected | aReadProtected);
    sym_SetterBoxOptions = create_sys("SetterBoxOptions", aProtected);
    sym_Setting = create_sys("Setting", aProtected | aReadProtected);
    sym_SetValue = create_sys("SetValue", aProtected);
    sym_Shading = create_sys("Shading", aProtected);
    sym_Shallow = create_sys("Shallow", aProtected);
    sym_Share = create_sys("Share", aProtected);
    sym_ShearingMatrix = create_sys("ShearingMatrix", aProtected | aReadProtected);
    sym_ShearingTransform = create_sys("ShearingTransform", aProtected | aReadProtected);
    sym_Short = create_sys("Short", aProtected);
    sym_ShortDownArrow = create_sys("ShortDownArrow", 0);
    sym_Shortest = create_sys("Shortest", aProtected);
    sym_ShortestMatch = create_sys("ShortestMatch", aProtected | aReadProtected);
    sym_ShortLeftArrow = create_sys("ShortLeftArrow", 0);
    sym_ShortRightArrow = create_sys("ShortRightArrow", 0);
    sym_ShortUpArrow = create_sys("ShortUpArrow", 0);
    sym_Show = create_sys("Show", aProtected);
    sym_ShowAutoStyles = create_sys("ShowAutoStyles", aProtected);
    sym_ShowCellBracket = create_sys("ShowCellBracket", aProtected);
    sym_ShowCellLabel = create_sys("ShowCellLabel", aProtected);
    sym_ShowCellTags = create_sys("ShowCellTags", aProtected);
    sym_ShowClosedCellArea = create_sys("ShowClosedCellArea", aProtected);
    sym_ShowContents = create_sys("ShowContents", aProtected);
    sym_ShowControls = create_sys("ShowControls", aProtected);
    sym_ShowCursorTracker = create_sys("ShowCursorTracker", aProtected);
    sym_ShowGroupOpenCloseIcon = create_sys("ShowGroupOpenCloseIcon", aProtected);
    sym_ShowGroupOpener = create_sys("ShowGroupOpener", aProtected);
    sym_ShowInvisibleCharacters = create_sys("ShowInvisibleCharacters", aProtected);
    sym_ShowPageBreaks = create_sys("ShowPageBreaks", aProtected);
    sym_ShowSelection = create_sys("ShowSelection", aProtected);
    sym_ShowShortBoxForm = create_sys("ShowShortBoxForm", aProtected);
    sym_ShowSpecialCharacters = create_sys("ShowSpecialCharacters", aProtected);
    sym_ShowStringCharacters = create_sys("ShowStringCharacters", aProtected);
    sym_ShowSyntaxStyles = create_sys("ShowSyntaxStyles", aProtected);
    sym_ShrinkingDelay = create_sys("ShrinkingDelay", aProtected | aReadProtected);
    sym_ShrinkWrapBoundingBox = create_sys("ShrinkWrapBoundingBox", aProtected);
    sym_SiegelTheta = create_sys("SiegelTheta", aProtected | aReadProtected);
    sym_Sign = create_sys("Sign", aListable | aNumericFunction | aProtected);
    sym_Signature = create_sys("Signature", aProtected);
    sym_SignPadding = create_sys("SignPadding", aProtected);
    sym_Simplify = create_sys("Simplify", aProtected);
    sym_Sin = create_sys("Sin", aListable | aNumericFunction | aProtected);
    sym_Sinc = create_sys("Sinc", aListable | aNumericFunction | aProtected);
    sym_SingleEvaluation = create_sys("SingleEvaluation", aProtected);
    sym_SingleLetterItalics = create_sys("SingleLetterItalics", aProtected);
    sym_SingleLetterStyle = create_sys("SingleLetterStyle", aProtected);
    sym_SingularValueDecomposition = create_sys("SingularValueDecomposition", aProtected);
    sym_SingularValueList = create_sys("SingularValueList", aProtected);
    sym_SingularValues = create_sys("SingularValues", aProtected);
    sym_Sinh = create_sys("Sinh", aListable | aNumericFunction | aProtected);
    sym_SinhIntegral = create_sys("SinhIntegral", aProtected | aReadProtected);
    sym_SinIntegral = create_sys("SinIntegral", aProtected | aReadProtected);
    sym_SixJSymbol = create_sys("SixJSymbol", aProtected | aReadProtected);
    sym_Skeleton = create_sys("Skeleton", 0);
    sym_Skewness = create_sys("Skewness", aProtected | aReadProtected);
    sym_Skip = create_sys("Skip", aProtected);
    sym_Slider = create_sys("Slider", aProtected | aReadProtected);
    sym_Slider2D = create_sys("Slider2D", aProtected | aReadProtected);
    sym_Slider2DBox = create_sys("Slider2DBox", aProtected | aReadProtected);
    sym_Slider2DBoxOptions = create_sys("Slider2DBoxOptions", aProtected);
    sym_SliderBox = create_sys("SliderBox", aProtected | aReadProtected);
    sym_SliderBoxOptions = create_sys("SliderBoxOptions", aProtected);
    sym_SlideView = create_sys("SlideView", aProtected | aReadProtected);
    sym_Slot = create_sys("Slot", aNHoldAll | aProtected);
    sym_SlotSequence = create_sys("SlotSequence", aNHoldAll | aProtected);
    sym_Small = create_sys("Small", aProtected);
    sym_SmallCircle = create_sys("SmallCircle", 0);
    sym_Smaller = create_sys("Smaller", aProtected);
    sym_Socket = create_sys("Socket", aProtected);
    sym_SokalSneathDissimilarity = create_sys("SokalSneathDissimilarity", aProtected);
    sym_Solve = create_sys("Solve", aProtected);
    sym_SolveAlways = create_sys("SolveAlways", aProtected);
    sym_SolveDelayed = create_sys("SolveDelayed", aProtected);
    sym_Sort = create_sys("Sort", aProtected);
    sym_SortBy = create_sys("SortBy", aProtected);
    sym_Sound = create_sys("Sound", aProtected | aReadProtected);
    sym_SoundAndGraphics = create_sys("SoundAndGraphics", aProtected);
    sym_SoundNote = create_sys("SoundNote", aProtected | aReadProtected);
    sym_SoundVolume = create_sys("SoundVolume", aProtected);
    sym_Sow = create_sys("Sow", aProtected);
    sym_Space = create_sys("Space", aProtected);
    sym_SpaceForm = create_sys("SpaceForm", aProtected);
    sym_Spacer = create_sys("Spacer", aProtected | aReadProtected);
    sym_Spacings = create_sys("Spacings", aProtected);
    sym_Span = create_sys("Span", aProtected);
    sym_SpanAdjustments = create_sys("SpanAdjustments", aProtected);
    sym_SpanCharacterRounding = create_sys("SpanCharacterRounding", aProtected);
    sym_SpanFromAbove = create_sys("SpanFromAbove", aProtected | aReadProtected);
    sym_SpanFromBoth = create_sys("SpanFromBoth", aProtected | aReadProtected);
    sym_SpanFromLeft = create_sys("SpanFromLeft", aProtected | aReadProtected);
    sym_SpanLineThickness = create_sys("SpanLineThickness", aProtected);
    sym_SpanMaxSize = create_sys("SpanMaxSize", aProtected);
    sym_SpanMinSize = create_sys("SpanMinSize", aProtected);
    sym_SpanningCharacters = create_sys("SpanningCharacters", aProtected);
    sym_SpanSymmetric = create_sys("SpanSymmetric", aProtected);
    sym_SparseArray = create_sys("SparseArray", aProtected | aReadProtected);
    sym_SpeakTextPacket = create_sys("SpeakTextPacket", aProtected);
    sym_Specularity = create_sys("Specularity", aProtected | aReadProtected);
    sym_SpellingCorrection = create_sys("SpellingCorrection", aProtected);
    sym_SpellingDictionaries = create_sys("SpellingDictionaries", aProtected);
    sym_SpellingDictionariesPath = create_sys("SpellingDictionariesPath", aProtected);
    sym_SpellingOptions = create_sys("SpellingOptions", aProtected);
    sym_SpellingSuggestionsPacket = create_sys("SpellingSuggestionsPacket", aProtected);
    sym_Sphere = create_sys("Sphere", aProtected | aReadProtected);
    sym_SphereBox = create_sys("SphereBox", aHoldAll | aProtected | aReadProtected);
    sym_SphericalBesselJ = create_sys("SphericalBesselJ", aListable | aNumericFunction | aProtected | aReadProtected);
    sym_SphericalBesselY = create_sys("SphericalBesselY", aListable | aNumericFunction | aProtected | aReadProtected);
    sym_SphericalHankelH1 = create_sys("SphericalHankelH1", aListable | aNumericFunction | aProtected | aReadProtected);
    sym_SphericalHankelH2 = create_sys("SphericalHankelH2", aListable | aNumericFunction | aProtected | aReadProtected);
    sym_SphericalHarmonicY = create_sys("SphericalHarmonicY", aListable | aNumericFunction | aProtected);
    sym_SphericalPlot3D = create_sys("SphericalPlot3D", aProtected | aReadProtected);
    sym_SphericalRegion = create_sys("SphericalRegion", aProtected);
    sym_SpheroidalEigenvalue = create_sys("SpheroidalEigenvalue", aListable | aNumericFunction | aProtected | aReadProtected);
    sym_SpheroidalJoiningFactor = create_sys("SpheroidalJoiningFactor", aProtected | aReadProtected);
    sym_SpheroidalPS = create_sys("SpheroidalPS", aListable | aNumericFunction | aProtected | aReadProtected);
    sym_SpheroidalPSPrime = create_sys("SpheroidalPSPrime", aListable | aNumericFunction | aProtected | aReadProtected);
    sym_SpheroidalQS = create_sys("SpheroidalQS", aListable | aNumericFunction | aProtected | aReadProtected);
    sym_SpheroidalQSPrime = create_sys("SpheroidalQSPrime", aListable | aNumericFunction | aProtected | aReadProtected);
    sym_SpheroidalRadialFactor = create_sys("SpheroidalRadialFactor", aProtected | aReadProtected);
    sym_SpheroidalS1 = create_sys("SpheroidalS1", aListable | aNumericFunction | aProtected | aReadProtected);
    sym_SpheroidalS1Prime = create_sys("SpheroidalS1Prime", aListable | aNumericFunction | aProtected | aReadProtected);
    sym_SpheroidalS2 = create_sys("SpheroidalS2", aListable | aNumericFunction | aProtected | aReadProtected);
    sym_SpheroidalS2Prime = create_sys("SpheroidalS2Prime", aListable | aNumericFunction | aProtected | aReadProtected);
    sym_Splice = create_sys("Splice", aProtected);
    sym_Split = create_sys("Split", aProtected);
    sym_Sqrt = create_sys("Sqrt", aListable | aNumericFunction | aProtected);
    sym_SqrtBox = create_sys("SqrtBox", aProtected | aReadProtected);
    sym_SqrtBoxOptions = create_sys("SqrtBoxOptions", aProtected);
    sym_Square = create_sys("Square", 0);
    sym_SquaredEuclideanDistance = create_sys("SquaredEuclideanDistance", aProtected);
    sym_SquareFreeQ = create_sys("SquareFreeQ", aProtected | aReadProtected);
    sym_SquareIntersection = create_sys("SquareIntersection", 0);
    sym_SquaresR = create_sys("SquaresR", aProtected | aReadProtected);
    sym_SquareSubset = create_sys("SquareSubset", 0);
    sym_SquareSubsetEqual = create_sys("SquareSubsetEqual", 0);
    sym_SquareSuperset = create_sys("SquareSuperset", 0);
    sym_SquareSupersetEqual = create_sys("SquareSupersetEqual", 0);
    sym_SquareUnion = create_sys("SquareUnion", 0);
    sym_Stack = create_sys2("Stack", aHoldFirst | aProtected, BIF_Stack);
    sym_StackBegin = create_sys("StackBegin", aHoldAll | aProtected);
    sym_StackComplete = create_sys("StackComplete", aHoldAll | aProtected);
    sym_StackInhibit = create_sys("StackInhibit", aHoldAll | aProtected);
    sym_StandardDeviation = create_sys("StandardDeviation", aProtected);
    sym_StandardForm = create_sys("StandardForm", aProtected | aReadProtected);
    sym_Standardize = create_sys("Standardize", aProtected | aReadProtected);
    sym_Star = create_sys("Star", 0);
    sym_StartingStepSize = create_sys("StartingStepSize", aProtected);
    sym_StartOfLine = create_sys("StartOfLine", aProtected | aReadProtected);
    sym_StartOfString = create_sys("StartOfString", aProtected);
    sym_StartupSound = create_sys("StartupSound", aProtected);
    sym_StatusArea = create_sys("StatusArea", aProtected | aReadProtected);
    sym_StepMonitor = create_sys("StepMonitor", aProtected);
    sym_StieltjesGamma = create_sys("StieltjesGamma", aProtected | aReadProtected);
    sym_StirlingS1 = create_sys("StirlingS1", aListable | aProtected);
    sym_StirlingS2 = create_sys("StirlingS2", aListable | aProtected);
    sym_StreamPosition = create_sys("StreamPosition", aProtected);
    sym_Streams = create_sys("Streams", aProtected);
    sym_String = create_sys("String", aProtected);
    sym_StringBreak = create_sys("StringBreak", 0);
    sym_StringByteCount = create_sys("StringByteCount", aListable | aProtected);
    sym_StringCases = create_sys("StringCases", aProtected);
    sym_StringCount = create_sys("StringCount", aProtected);
    sym_StringDrop = create_sys("StringDrop", aProtected);
    sym_StringExpression = create_sys("StringExpression", aFlat | aOneIdentity | aProtected);
    sym_StringForm = create_sys2("StringForm", aProtected, BIF_StringForm);
    sym_StringFormat = create_sys("StringFormat", aProtected | aReadProtected);
    sym_StringFreeQ = create_sys("StringFreeQ", aProtected);
    sym_StringInsert = create_sys("StringInsert", aProtected);
    sym_StringJoin = create_sys2("StringJoin", aFlat | aOneIdentity | aProtected, BIF_StringJoin);
    sym_StringLength = create_sys("StringLength", aListable | aProtected);
    sym_StringMatchQ = create_sys("StringMatchQ", aProtected);
    sym_StringPosition = create_sys("StringPosition", aProtected);
    sym_StringQ = create_sys("StringQ", aProtected);
    sym_StringReplace = create_sys("StringReplace", aProtected);
    sym_StringReplaceList = create_sys("StringReplaceList", aProtected);
    sym_StringReplacePart = create_sys("StringReplacePart", aProtected);
    sym_StringReverse = create_sys("StringReverse", aListable | aProtected);
    sym_StringSkeleton = create_sys("StringSkeleton", 0);
    sym_StringSplit = create_sys("StringSplit", aProtected);
    sym_StringTake = create_sys("StringTake", aProtected);
    sym_StringToStream = create_sys("StringToStream", aProtected);
    sym_StripBoxes = create_sys("StripBoxes", aProtected);
    sym_StripOnInput = create_sys("StripOnInput", aProtected);
    sym_StripWrapperBoxes = create_sys("StripWrapperBoxes", aProtected);
    sym_StructuredSelection = create_sys("StructuredSelection", aProtected);
    sym_StruveH = create_sys("StruveH", aProtected | aReadProtected);
    sym_StruveL = create_sys("StruveL", aProtected | aReadProtected);
    sym_Stub = create_sys("Stub", aProtected);
    sym_StudentTDistribution = create_sys("StudentTDistribution", aProtected | aReadProtected);
    sym_Style = create_sys("Style", aProtected | aReadProtected);
    sym_StyleBox = create_sys("StyleBox", aProtected | aReadProtected);
    sym_StyleBoxAutoDelete = create_sys("StyleBoxAutoDelete", aProtected);
    sym_StyleBoxOptions = create_sys("StyleBoxOptions", aProtected);
    sym_StyleData = create_sys("StyleData", aProtected);
    sym_StyleDefinitions = create_sys("StyleDefinitions", aProtected);
    sym_StyleForm = create_sys("StyleForm", aProtected);
    sym_StyleMenuListing = create_sys("StyleMenuListing", aProtected);
    sym_StyleNameDialogSettings = create_sys("StyleNameDialogSettings", aProtected);
    sym_StylePrint = create_sys("StylePrint", aProtected | aReadProtected);
    sym_StyleSheetPath = create_sys("StyleSheetPath", aProtected);
    sym_Subfactorial = create_sys("Subfactorial", aProtected | aReadProtected);
    sym_SubMinus = create_sys("SubMinus", 0);
    sym_SubPlus = create_sys("SubPlus", 0);
    sym_Subresultants = create_sys("Subresultants", aProtected);
    sym_Subscript = create_sys("Subscript", aNHoldRest);
    sym_SubscriptBox = create_sys("SubscriptBox", aProtected | aReadProtected);
    sym_SubscriptBoxOptions = create_sys("SubscriptBoxOptions", aProtected);
    sym_Subscripted = create_sys("Subscripted", 0);
    sym_Subset = create_sys("Subset", 0);
    sym_SubsetEqual = create_sys("SubsetEqual", 0);
    sym_Subsets = create_sys("Subsets", aProtected);
    sym_SubStar = create_sys("SubStar", 0);
    sym_Subsuperscript = create_sys("Subsuperscript", aNHoldRest);
    sym_SubsuperscriptBox = create_sys("SubsuperscriptBox", aProtected | aReadProtected);
    sym_SubsuperscriptBoxOptions = create_sys("SubsuperscriptBoxOptions", aProtected);
    sym_Subtract = create_sys("Subtract", aListable | aNumericFunction | aProtected);
    sym_SubtractFrom = create_sys2("SubtractFrom", aHoldFirst | aProtected, BIF_SubtractFrom);
    sym_SubValues = create_sys("SubValues", aHoldAll | aProtected);
    sym_Succeeds = create_sys("Succeeds", 0);
    sym_SucceedsEqual = create_sys("SucceedsEqual", 0);
    sym_SucceedsSlantEqual = create_sys("SucceedsSlantEqual", 0);
    sym_SucceedsTilde = create_sys("SucceedsTilde", 0);
    sym_SuchThat = create_sys("SuchThat", 0);
    sym_Sum = create_sys("Sum", aHoldAll | aProtected | aReadProtected);
    sym_SuperDagger = create_sys("SuperDagger", 0);
    sym_SuperMinus = create_sys("SuperMinus", 0);
    sym_SuperPlus = create_sys("SuperPlus", 0);
    sym_Superscript = create_sys("Superscript", aNHoldRest | aReadProtected);
    sym_SuperscriptBox = create_sys("SuperscriptBox", aProtected | aReadProtected);
    sym_SuperscriptBoxOptions = create_sys("SuperscriptBoxOptions", aProtected);
    sym_Superset = create_sys("Superset", 0);
    sym_SupersetEqual = create_sys("SupersetEqual", 0);
    sym_SuperStar = create_sys("SuperStar", 0);
    sym_SurfaceColor = create_sys("SurfaceColor", aProtected | aReadProtected);
    sym_SurfaceGraphics = create_sys("SurfaceGraphics", aProtected | aReadProtected);
    sym_SuspendPacket = create_sys("SuspendPacket", aProtected | aReadProtected);
    sym_Switch = create_sys("Switch", aHoldRest | aProtected | aReadProtected);
    sym_Symbol = create_sys("Symbol", aLocked | aProtected);
    sym_SymbolName = create_sys("SymbolName", aProtected);
    sym_SymmetricPolynomial = create_sys("SymmetricPolynomial", aProtected);
    sym_SymmetricReduction = create_sys("SymmetricReduction", aProtected);
    sym_SynchronousInitialization = create_sys("SynchronousInitialization", aProtected);
    sym_SynchronousUpdating = create_sys("SynchronousUpdating", aProtected);
    sym_Syntax = create_sys("Syntax", aProtected);
    sym_SyntaxForm = create_sys("SyntaxForm", aProtected);
    sym_SyntaxInformation = create_sys("SyntaxInformation", aProtected);
    sym_SyntaxLength = create_sys("SyntaxLength", aProtected);
    sym_SyntaxPacket = create_sys("SyntaxPacket", aProtected);
    sym_SyntaxQ = create_sys("SyntaxQ", aProtected);
    sym_SystemDialogInput = create_sys("SystemDialogInput", aProtected | aReadProtected);
    sym_SystemException = create_sys("SystemException", aHoldAllComplete | aProtected);
    sym_SystemHelpPath = create_sys("SystemHelpPath", aProtected);
    sym_SystemInformation = create_sys("SystemInformation", aProtected | aReadProtected);
    sym_SystemInformationData = create_sys("SystemInformationData", aProtected | aReadProtected);
    sym_SystemOptions = create_sys("SystemOptions", aProtected);
    sym_SystemStub = create_sys("SystemStub", aProtected | aReadProtected);
    sym_Tab = create_sys("Tab", aProtected);
    sym_TabFilling = create_sys("TabFilling", aProtected);
    sym_Table = create_sys("Table", aHoldAll | aProtected);
    sym_TableAlignments = create_sys("TableAlignments", aProtected);
    sym_TableDepth = create_sys("TableDepth", aProtected);
    sym_TableDirections = create_sys("TableDirections", aProtected);
    sym_TableForm = create_sys("TableForm", aProtected | aReadProtected);
    sym_TableHeadings = create_sys("TableHeadings", aProtected);
    sym_TableSpacing = create_sys("TableSpacing", aProtected);
    sym_TabSpacings = create_sys("TabSpacings", aProtected);
    sym_TabView = create_sys("TabView", aProtected | aReadProtected);
    sym_TabViewBox = create_sys("TabViewBox", aProtected | aReadProtected);
    sym_TabViewBoxOptions = create_sys("TabViewBoxOptions", aProtected);
    sym_TagBox = create_sys("TagBox", aProtected | aReadProtected);
    sym_TagBoxNote = create_sys("TagBoxNote", aProtected);
    sym_TagBoxOptions = create_sys("TagBoxOptions", aProtected);
    sym_TaggingRules = create_sys("TaggingRules", aProtected);
    sym_TagSet = create_sys("TagSet", aHoldAll | aProtected | aSequenceHold);
    sym_TagSetDelayed = create_sys("TagSetDelayed", aHoldAll | aProtected | aSequenceHold);
    sym_TagStyle = create_sys("TagStyle", aProtected);
    sym_TagUnset = create_sys("TagUnset", aHoldAll | aProtected);
    sym_Take = create_sys("Take", aNHoldRest | aProtected);
    sym_TakeWhile = create_sys("TakeWhile", aProtected | aReadProtected);
    sym_Tally = create_sys("Tally", aProtected);
    sym_Tan = create_sys("Tan", aListable | aNumericFunction | aProtected);
    sym_Tanh = create_sys("Tanh", aListable | aNumericFunction | aProtected);
    sym_TargetFunctions = create_sys("TargetFunctions", aProtected | aReadProtected);
    sym_TemplateBox = create_sys("TemplateBox", aProtected | aReadProtected);
    sym_TemplateBoxOptions = create_sys("TemplateBoxOptions", aProtected);
    sym_Temporary = create_sys("Temporary", aProtected);
    sym_TemporaryVariable = create_sys("TemporaryVariable", aProtected);
    sym_TensorQ = create_sys("TensorQ", aProtected);
    sym_TensorRank = create_sys("TensorRank", aProtected);
    sym_TeXForm = create_sys("TeXForm", aProtected);
    sym_TeXSave = create_sys("TeXSave", aProtected | aReadProtected);
    sym_Text = create_sys("Text", aProtected | aReadProtected);
    sym_Text3DBox = create_sys("Text3DBox", aHoldAll | aProtected | aReadProtected);
    sym_Text3DBoxOptions = create_sys("Text3DBoxOptions", aProtected);
    sym_TextAlignment = create_sys("TextAlignment", aProtected);
    sym_TextBand = create_sys("TextBand", 0);
    sym_TextBoundingBox = create_sys("TextBoundingBox", aProtected);
    sym_TextBox = create_sys("TextBox", aHoldAll | aProtected);
    sym_TextCell = create_sys("TextCell", aProtected | aReadProtected);
    sym_TextData = create_sys("TextData", aProtected);
    sym_TextForm = create_sys("TextForm", aProtected);
    sym_TextJustification = create_sys("TextJustification", aProtected);
    sym_TextLine = create_sys("TextLine", aProtected);
    sym_TextPacket = create_sys("TextPacket", aProtected);
    sym_TextParagraph = create_sys("TextParagraph", aProtected);
    sym_TextRendering = create_sys("TextRendering", aProtected);
    sym_TextStyle = create_sys("TextStyle", aProtected);
    sym_Therefore = create_sys("Therefore", 0);
    sym_Thick = create_sys("Thick", aProtected | aReadProtected);
    sym_Thickness = create_sys("Thickness", aProtected | aReadProtected);
    sym_Thin = create_sys("Thin", aProtected | aReadProtected);
    sym_ThisLink = create_sys("ThisLink", aReadProtected);
    sym_Thread = create_sys("Thread", aProtected);
    sym_ThreeJSymbol = create_sys("ThreeJSymbol", aProtected | aReadProtected);
    sym_Through = create_sys("Through", aProtected);
    sym_Throw = create_sys("Throw", aProtected);
    sym_Ticks = create_sys("Ticks", aProtected);
    sym_TicksStyle = create_sys("TicksStyle", aProtected);
    sym_Tilde = create_sys("Tilde", 0);
    sym_TildeEqual = create_sys("TildeEqual", 0);
    sym_TildeFullEqual = create_sys("TildeFullEqual", 0);
    sym_TildeTilde = create_sys("TildeTilde", 0);
    sym_TimeConstrained = create_sys("TimeConstrained", aHoldAll | aProtected);
    sym_TimeConstraint = create_sys("TimeConstraint", aProtected);
    sym_Times = create_sys2("Times", aFlat | aListable | aNumericFunction | 
                                     aOneIdentity | aOrderless | aProtected, BIF_Times);
    sym_TimesBy = create_sys2("TimesBy", aHoldFirst | aProtected, BIF_TimesBy);
    sym_TimeUsed = create_sys("TimeUsed", aProtected);
    sym_TimeZone = create_sys("TimeZone", aProtected);
    sym_Timing = create_sys2("Timing", aHoldAll | aProtected | aSequenceHold, BIF_Timing);
    sym_Tiny = create_sys("Tiny", aProtected);
    sym_TitleGrouping = create_sys("TitleGrouping", aProtected);
    sym_ToBoxes = create_sys("ToBoxes", aProtected);
    sym_ToCharacterCode = create_sys2("ToCharacterCode", aProtected, BIF_ToCharacterCode);
    sym_ToColor = create_sys("ToColor", aProtected);
    sym_ToDate = create_sys("ToDate", aProtected);
    sym_ToeplitzMatrix = create_sys("ToeplitzMatrix", aProtected);
    sym_ToExpression = create_sys2("ToExpression", aListable | aProtected, BIF_ToExpression);
    sym_ToFileName = create_sys("ToFileName", aProtected | aReadProtected);
    sym_Together = create_sys("Together", aListable | aProtected);
    sym_Toggle = create_sys("Toggle", aProtected);
    sym_ToggleFalse = create_sys("ToggleFalse", aProtected);
    sym_Toggler = create_sys("Toggler", aProtected | aReadProtected);
    sym_TogglerBar = create_sys("TogglerBar", aProtected | aReadProtected);
    sym_TogglerBox = create_sys("TogglerBox", aProtected | aReadProtected);
    sym_TogglerBoxOptions = create_sys("TogglerBoxOptions", aProtected);
    sym_ToHeldExpression = create_sys("ToHeldExpression", aListable | aProtected);
    sym_TokenWords = create_sys("TokenWords", aProtected);
    sym_Tolerance = create_sys("Tolerance", aProtected);
    sym_ToLowerCase = create_sys("ToLowerCase", aListable | aProtected);
    sym_ToNumberField = create_sys("ToNumberField", aProtected);
    sym_TooBig = create_sys("TooBig", aLocked | aProtected);
    sym_Tooltip = create_sys("Tooltip", aProtected | aReadProtected);
    sym_TooltipBox = create_sys("TooltipBox", aProtected | aReadProtected);
    sym_TooltipBoxOptions = create_sys("TooltipBoxOptions", aProtected);
    sym_Top = create_sys("Top", aProtected);
    sym_ToRadicals = create_sys("ToRadicals", aProtected);
    sym_ToRules = create_sys("ToRules", aProtected);
    sym_ToString = create_sys2("ToString", aProtected, BIF_ToString);
    sym_Total = create_sys("Total", aProtected);
    sym_TotalHeight = create_sys("TotalHeight", aProtected);
    sym_TotalWidth = create_sys("TotalWidth", aProtected);
    sym_ToUpperCase = create_sys("ToUpperCase", aListable | aProtected);
    sym_Tr = create_sys("Tr", aProtected);
    sym_Trace = create_sys("Trace", aHoldAll | aProtected);
    sym_TraceAbove = create_sys("TraceAbove", aProtected);
    sym_TraceAction = create_sys("TraceAction", aProtected);
    sym_TraceBackward = create_sys("TraceBackward", aProtected);
    sym_TraceDepth = create_sys("TraceDepth", aProtected);
    sym_TraceDialog = create_sys("TraceDialog", aHoldAll | aProtected);
    sym_TraceForward = create_sys("TraceForward", aProtected);
    sym_TraceInternal = create_sys("TraceInternal", aProtected);
    sym_TraceLevel = create_sys("TraceLevel", aProtected);
    sym_TraceOff = create_sys("TraceOff", aProtected);
    sym_TraceOn = create_sys("TraceOn", aProtected);
    sym_TraceOriginal = create_sys("TraceOriginal", aProtected);
    sym_TracePrint = create_sys("TracePrint", aHoldAll | aProtected);
    sym_TraceScan = create_sys("TraceScan", aHoldAll | aProtected);
    sym_TrackedSymbols = create_sys("TrackedSymbols", aProtected);
    sym_TraditionalForm = create_sys("TraditionalForm", aProtected | aReadProtected);
    sym_TraditionalFunctionNotation = create_sys("TraditionalFunctionNotation", aProtected);
    sym_TraditionalNotation = create_sys("TraditionalNotation", aProtected);
    sym_TraditionalOrder = create_sys("TraditionalOrder", aProtected);
    sym_TransformationFunction = create_sys("TransformationFunction", aProtected | aReadProtected);
    sym_TransformationFunctions = create_sys("TransformationFunctions", aProtected);
    sym_TransformationMatrix = create_sys("TransformationMatrix", aProtected | aReadProtected);
    sym_Translate = create_sys("Translate", aProtected | aReadProtected);
    sym_TranslationTransform = create_sys("TranslationTransform", aProtected | aReadProtected);
    sym_TransparentColor = create_sys("TransparentColor", aProtected);
    sym_Transpose = create_sys("Transpose", aProtected);
    sym_TreeForm = create_sys("TreeForm", aProtected);
    sym_TreePlot = create_sys("TreePlot", aProtected | aReadProtected);
    sym_TriangularDistribution = create_sys("TriangularDistribution", aProtected | aReadProtected);
    sym_Trig = create_sys("Trig", aProtected);
    sym_TrigExpand = create_sys("TrigExpand", aProtected);
    sym_TrigFactor = create_sys("TrigFactor", aListable | aProtected);
    sym_TrigFactorList = create_sys("TrigFactorList", aProtected);
    sym_Trigger = create_sys("Trigger", aProtected | aReadProtected);
    sym_TrigReduce = create_sys("TrigReduce", aProtected);
    sym_TrigToExp = create_sys("TrigToExp", aListable | aProtected);
    sym_TrimmedMean = create_sys("TrimmedMean", aProtected | aReadProtected);
    sym_True = create_sys("True", aLocked | aProtected);
    sym_TrueQ = create_sys("TrueQ", aProtected);
    sym_Tube = create_sys("Tube", aProtected);
    sym_Tuples = create_sys("Tuples", aProtected);
    sym_TuringMachine = create_sys("TuringMachine", aProtected | aReadProtected);
    sym_UnAlias = create_sys("UnAlias", aProtected);
    sym_Uncompress = create_sys("Uncompress", aProtected);
    sym_UnderBar = create_sys("UnderBar", 0);
    sym_Underflow = create_sys("Underflow", aProtected);
    sym_Underlined = create_sys("Underlined", aProtected);
    sym_Underoverscript = create_sys("Underoverscript", aNHoldRest);
    sym_UnderoverscriptBox = create_sys("UnderoverscriptBox", aProtected | aReadProtected);
    sym_UnderoverscriptBoxOptions = create_sys("UnderoverscriptBoxOptions", aProtected);
    sym_Underscript = create_sys("Underscript", aNHoldRest);
    sym_UnderscriptBox = create_sys("UnderscriptBox", aProtected | aReadProtected);
    sym_UnderscriptBoxOptions = create_sys("UnderscriptBoxOptions", aProtected);
    sym_UndocumentedTestFEParserPacket = create_sys("UndocumentedTestFEParserPacket", aProtected);
    sym_UndocumentedTestGetSelectionPacket = create_sys("UndocumentedTestGetSelectionPacket", aProtected);
    sym_Unequal = create_sys2("Unequal", aProtected, BIF_Unequal);
    sym_Unevaluated = create_sys("Unevaluated", aHoldAllComplete | aProtected);
    sym_UniformDistribution = create_sys("UniformDistribution", aProtected | aReadProtected);
    sym_Uninstall = create_sys("Uninstall", aReadProtected);
    sym_Union = create_sys("Union", aFlat | aOneIdentity | aProtected);
    sym_UnionPlus = create_sys("UnionPlus", 0);
    sym_Unique = create_sys("Unique", aProtected);
    sym_Unitize = create_sys("Unitize", aListable | aProtected);
    sym_UnitStep = create_sys("UnitStep", aListable | aNumericFunction | aOrderless | aProtected);
    sym_UnitVector = create_sys("UnitVector", aProtected);
    sym_Unprotect = create_sys2("Unprotect", aHoldAll | aProtected, BIF_Unprotect);
    sym_UnsameQ = create_sys2("UnsameQ", aProtected, BIF_UnsameQ);
    sym_UnsavedVariables = create_sys("UnsavedVariables", aProtected);
    sym_Unset = create_sys2("Unset", aHoldFirst | aProtected | aReadProtected, BIF_Unset);
    sym_UntrackedVariables = create_sys("UntrackedVariables", aProtected);
    sym_Up = create_sys("Up", aProtected);
    sym_UpArrow = create_sys("UpArrow", 0);
    sym_UpArrowBar = create_sys("UpArrowBar", 0);
    sym_UpArrowDownArrow = create_sys("UpArrowDownArrow", 0);
    sym_Update = create_sys("Update", aProtected);
    sym_UpdateDynamicObjects = create_sys("UpdateDynamicObjects", 0);
    sym_UpdateDynamicObjectsSynchronous = create_sys("UpdateDynamicObjectsSynchronous", 0);
    sym_UpdateInterval = create_sys("UpdateInterval", aProtected);
    sym_UpDownArrow = create_sys("UpDownArrow", 0);
    sym_UpEquilibrium = create_sys("UpEquilibrium", 0);
    sym_UpperCaseQ = create_sys("UpperCaseQ", aProtected);
    sym_UpperLeftArrow = create_sys("UpperLeftArrow", 0);
    sym_UpperRightArrow = create_sys("UpperRightArrow", 0);
    sym_UpSet = create_sys("UpSet", aHoldFirst | aProtected | aSequenceHold);
    sym_UpSetDelayed = create_sys("UpSetDelayed", aHoldAll | aProtected | aSequenceHold);
    sym_UpTee = create_sys("UpTee", 0);
    sym_UpTeeArrow = create_sys("UpTeeArrow", 0);
    sym_UpValues = create_sys("UpValues", aHoldAll | aProtected);
    sym_URL = create_sys("URL", aProtected);
    sym_UseGraphicsRange = create_sys("UseGraphicsRange", aProtected);
    sym_Using = create_sys("Using", aProtected);
    sym_V2Get = create_sys("V2Get", aProtected);
    sym_Value = create_sys("Value", aProtected);
    sym_ValueBox = create_sys("ValueBox", aProtected | aReadProtected);
    sym_ValueBoxOptions = create_sys("ValueBoxOptions", aProtected);
    sym_ValueForm = create_sys("ValueForm", aProtected);
    sym_ValueQ = create_sys("ValueQ", aHoldAll | aProtected | aReadProtected);
    sym_ValuesData = create_sys("ValuesData", aProtected | aReadProtected);
    sym_Variables = create_sys("Variables", aProtected);
    sym_Variance = create_sys("Variance", aProtected);
    sym_VectorAngle = create_sys("VectorAngle", aProtected);
    sym_VectorQ = create_sys("VectorQ", aProtected);
    sym_Vee = create_sys("Vee", 0);
    sym_Verbatim = create_sys("Verbatim", aProtected);
    sym_Verbose = create_sys("Verbose", aProtected);
    sym_VerboseConvertToPostScriptPacket = create_sys("VerboseConvertToPostScriptPacket", aProtected);
    sym_VerifyConvergence = create_sys("VerifyConvergence", aProtected);
    sym_VerifySolutions = create_sys("VerifySolutions", aProtected);
    sym_Version = create_sys("Version", aProtected);
    sym_VersionNumber = create_sys("VersionNumber", aProtected);
    sym_VertexColors = create_sys("VertexColors", aProtected);
    sym_VertexCoordinateRules = create_sys("VertexCoordinateRules", aProtected);
    sym_VertexLabeling = create_sys("VertexLabeling", aProtected);
    sym_VertexNormals = create_sys("VertexNormals", aProtected);
    sym_VertexRenderingFunction = create_sys("VertexRenderingFunction", aProtected);
    sym_Vertical = create_sys("Vertical", aProtected);
    sym_VerticalBar = create_sys("VerticalBar", 0);
    sym_VerticalForm = create_sys("VerticalForm", aProtected);
    sym_VerticalSeparator = create_sys("VerticalSeparator", 0);
    sym_VerticalSlider = create_sys("VerticalSlider", aProtected | aReadProtected);
    sym_VerticalTilde = create_sys("VerticalTilde", 0);
    sym_ViewAngle = create_sys("ViewAngle", aProtected);
    sym_ViewCenter = create_sys("ViewCenter", aProtected);
    sym_ViewMatrix = create_sys("ViewMatrix", aProtected);
    sym_ViewPoint = create_sys("ViewPoint", aProtected);
    sym_ViewPointSelectorSettings = create_sys("ViewPointSelectorSettings", aProtected);
    sym_ViewPort = create_sys("ViewPort", aProtected);
    sym_ViewRange = create_sys("ViewRange", aProtected);
    sym_ViewVector = create_sys("ViewVector", aProtected);
    sym_ViewVertical = create_sys("ViewVertical", aProtected);
    sym_Visible = create_sys("Visible", aProtected);
    sym_VisibleCell = create_sys("VisibleCell", aProtected);
    sym_WaitUntil = create_sys("WaitUntil", aHoldFirst | aProtected);
    sym_Wedge = create_sys("Wedge", 0);
    sym_WeibullDistribution = create_sys("WeibullDistribution", aProtected | aReadProtected);
    sym_WeierstrassHalfPeriods = create_sys("WeierstrassHalfPeriods", aProtected | aReadProtected);
    sym_WeierstrassInvariants = create_sys("WeierstrassInvariants", aProtected | aReadProtected);
    sym_WeierstrassP = create_sys("WeierstrassP", aProtected | aReadProtected);
    sym_WeierstrassPPrime = create_sys("WeierstrassPPrime", aProtected | aReadProtected);
    sym_WeierstrassSigma = create_sys("WeierstrassSigma", aProtected | aReadProtected);
    sym_WeierstrassZeta = create_sys("WeierstrassZeta", aProtected | aReadProtected);
    sym_Which = create_sys2("Which", aHoldAll | aProtected, BIF_Which);
    sym_While = create_sys2("While", aHoldAll | aProtected, BIF_While);
    sym_White = create_sys("White", aProtected);
    sym_Whitespace = create_sys("Whitespace", aProtected | aReadProtected);
    sym_WhitespaceCharacter = create_sys("WhitespaceCharacter", aProtected | aReadProtected);
    sym_WhittakerM = create_sys("WhittakerM", aListable | aNumericFunction | aProtected | aReadProtected);
    sym_WhittakerW = create_sys("WhittakerW", aListable | aNumericFunction | aProtected | aReadProtected);
    sym_WindowClickSelect = create_sys("WindowClickSelect", aProtected);
    sym_WindowElements = create_sys("WindowElements", aProtected);
    sym_WindowFloating = create_sys("WindowFloating", aProtected);
    sym_WindowFrame = create_sys("WindowFrame", aProtected);
    sym_WindowFrameElements = create_sys("WindowFrameElements", aProtected);
    sym_WindowMargins = create_sys("WindowMargins", aProtected);
    sym_WindowMovable = create_sys("WindowMovable", aProtected);
    sym_WindowOpacity = create_sys("WindowOpacity", aProtected);
    sym_WindowSelected = create_sys("WindowSelected", aProtected);
    sym_WindowSize = create_sys("WindowSize", aProtected);
    sym_WindowStatusArea = create_sys("WindowStatusArea", aProtected);
    sym_WindowTitle = create_sys("WindowTitle", aProtected);
    sym_WindowToolbars = create_sys("WindowToolbars", aProtected);
    sym_WindowWidth = create_sys("WindowWidth", aProtected);
    sym_With = create_sys("With", aHoldAll | aProtected);
    sym_Word = create_sys("Word", aProtected);
    sym_WordBoundary = create_sys("WordBoundary", aProtected | aReadProtected);
    sym_WordCharacter = create_sys("WordCharacter", aProtected | aReadProtected);
    sym_WordData = create_sys("WordData", aProtected | aReadProtected);
    sym_WordSearch = create_sys("WordSearch", aProtected);
    sym_WordSeparators = create_sys("WordSeparators", aProtected);
    sym_WorkingPrecision = create_sys("WorkingPrecision", aProtected);
    sym_Write = create_sys("Write", aProtected);
    sym_WriteString = create_sys("WriteString", aProtected);
    sym_XMLElement = create_sys("XMLElement", aProtected | aReadProtected);
    sym_XMLObject = create_sys("XMLObject", aProtected | aReadProtected);
    sym_Xor = create_sys2("Xor", aFlat | aOneIdentity | aOrderless | aProtected, BIF_Xor);
    sym_Xnor = create_sys2("Xnor", aFlat | aOneIdentity | aOrderless | aProtected, BIF_Xnor);
    sym_Yellow = create_sys("Yellow", aProtected);
    sym_YuleDissimilarity = create_sys("YuleDissimilarity", aProtected);
    sym_ZernikeR = create_sys("ZernikeR", aProtected | aReadProtected);
    sym_ZeroTest = create_sys("ZeroTest", aProtected);
    sym_ZeroWidthTimes = create_sys("ZeroWidthTimes", aProtected);
    sym_Zeta = create_sys("Zeta", aListable | aNumericFunction | aProtected);
    sym_ZetaZero = create_sys("ZetaZero", aProtected | aReadProtected);
    sym_ZipfDistribution = create_sys("ZipfDistribution", aProtected | aReadProtected);
    sym_ZTransform = create_sys("ZTransform", aProtected | aReadProtected);
    sym_Dollar = create_sys("$", aProtected);
    sym_DollarAborted = create_sys("$Aborted", aLocked | aProtected);
    sym_DollarAddOnsDirectory = create_sys("$AddOnsDirectory", aProtected);
    sym_DollarAssumptions = create_sys("$Assumptions", 0);
    sym_DollarBaseDirectory = create_sys("$BaseDirectory", aProtected);
    sym_DollarBatchInput = create_sys("$BatchInput", 0);
    sym_DollarBatchOutput = create_sys("$BatchOutput", aLocked | aProtected);
    sym_DollarBoxForms = create_sys("$BoxForms", aReadProtected);
    sym_DollarByteOrdering = create_sys("$ByteOrdering", aProtected);
    sym_DollarCanceled = create_sys("$Canceled", aProtected);
    sym_DollarCharacterEncoding = create_sys("$CharacterEncoding", 0);
    sym_DollarCharacterEncodings = create_sys("$CharacterEncodings", aProtected);
    sym_DollarCommandLine = create_sys("$CommandLine", aProtected);
    sym_DollarConditionHold = create_sys("$ConditionHold", aHoldAll);
    sym_DollarContext = create_sys("$Context", 0);
    sym_DollarContextPath = create_sys("$ContextPath", 0);
    sym_DollarControlActiveSetting = create_sys("$ControlActiveSetting", aProtected | aReadProtected);
    sym_DollarCreationDate = create_sys("$CreationDate", aLocked | aProtected);
    sym_DollarCurrentLink = create_sys("$CurrentLink", aReadProtected);
    sym_DollarDateStringFormat = create_sys("$DateStringFormat", 0);
    sym_DollarDefaultFont = create_sys("$DefaultFont", 0);
    sym_DollarDefaultPath = create_sys("$DefaultPath", 0);
    sym_DollarDisplay = create_sys("$Display", 0);
    sym_DollarDisplayFunction = create_sys("$DisplayFunction", 0);
    sym_DollarDumpDates = create_sys("$DumpDates", aLocked | aProtected);
    sym_DollarDumpSupported = create_sys("$DumpSupported", aLocked | aProtected);
    sym_DollarDynamicEvaluation = create_sys("$DynamicEvaluation", aReadProtected);
    sym_DollarEcho = create_sys("$Echo", 0);
    sym_DollarEpilog = create_sys("$Epilog", 0);
    sym_DollarExportFormats = create_sys("$ExportFormats", aProtected | aReadProtected);
    sym_DollarFailed = create_sys("$Failed", aHoldAll | aProtected);
    sym_DollarFinancialDataSource = create_sys("$FinancialDataSource", aProtected | aReadProtected);
    sym_DollarFormatType = create_sys("$FormatType", 0);
    sym_DollarFrontEnd = create_sys("$FrontEnd", aProtected);
    sym_DollarFrontEndSession = create_sys("$FrontEndSession", aProtected | aReadProtected);
    sym_DollarHistoryLength = create_sys("$HistoryLength", 0);
    sym_DollarHomeDirectory = create_sys("$HomeDirectory", aProtected);
    sym_DollarIgnoreEOF = create_sys("$IgnoreEOF", 0);
    sym_DollarImportFormats = create_sys("$ImportFormats", aProtected | aReadProtected);
    sym_DollarInitialDirectory = create_sys("$InitialDirectory", aLocked | aProtected);
    sym_DollarInput = create_sys("$Input", aLocked | aProtected);
    sym_DollarInspector = create_sys("$Inspector", 0);
    sym_DollarInstallationDate = create_sys("$InstallationDate", 0);
    sym_DollarInstallationDirectory = create_sys("$InstallationDirectory", 0);
    sym_DollarInterfaceEnvironment = create_sys("$InterfaceEnvironment", 0);
    sym_DollarIterationLimit = create_sys("$IterationLimit", 0);
    sym_DollarLanguage = create_sys("$Language", 0);
    sym_DollarLaunchDirectory = create_sys("$LaunchDirectory", aProtected);
    sym_DollarLicenseExpirationDate = create_sys("$LicenseExpirationDate", 0);
    sym_DollarLicenseID = create_sys("$LicenseID", 0);
    sym_DollarLicenseProcesses = create_sys("$LicenseProcesses", 0);
    sym_DollarLicenseServer = create_sys("$LicenseServer", 0);
    sym_DollarLicenseType = create_sys("$LicenseType", 0);
    sym_DollarLine = create_sys("$Line", 0);
    sym_DollarLinked = create_sys("$Linked", aProtected | aReadProtected);
    sym_DollarLinkSupported = create_sys("$LinkSupported", aLocked | aProtected);
    sym_DollarLoadedFiles = create_sys("$LoadedFiles", 0);
    sym_DollarMachineAddresses = create_sys("$MachineAddresses", 0);
    sym_DollarMachineDomain = create_sys("$MachineDomain", 0);
    sym_DollarMachineDomains = create_sys("$MachineDomains", 0);
    sym_DollarMachineEpsilon = create_sys("$MachineEpsilon", aProtected);
    sym_DollarMachineID = create_sys("$MachineID", 0);
    sym_DollarMachineName = create_sys("$MachineName", 0);
    sym_DollarMachinePrecision = create_sys("$MachinePrecision", aProtected);
    sym_DollarMachineType = create_sys("$MachineType", aLocked | aProtected);
    sym_DollarMaxExtraPrecision = create_sys("$MaxExtraPrecision", 0);
    sym_DollarMaxLicenseProcesses = create_sys("$MaxLicenseProcesses", 0);
    sym_DollarMaxMachineNumber = create_sys("$MaxMachineNumber", aProtected);
    sym_DollarMaxNumber = create_sys("$MaxNumber", aProtected);
    sym_DollarMaxPiecewiseCases = create_sys("$MaxPiecewiseCases", 0);
    sym_DollarMaxPrecision = create_sys("$MaxPrecision", 0);
    sym_DollarMaxRootDegree = create_sys("$MaxRootDegree", 0);
    sym_DollarMessageList = create_sys("$MessageList", aProtected);
    sym_DollarMessagePrePrint = create_sys("$MessagePrePrint", aReadProtected);
    sym_DollarMessages = create_sys("$Messages", 0);
    sym_DollarMinMachineNumber = create_sys("$MinMachineNumber", aProtected);
    sym_DollarMinNumber = create_sys("$MinNumber", aProtected);
    sym_DollarMinPrecision = create_sys("$MinPrecision", 0);
    sym_DollarModuleNumber = create_sys("$ModuleNumber", 0);
    sym_DollarNetworkLicense = create_sys("$NetworkLicense", 0);
    sym_DollarNewMessage = create_sys("$NewMessage", aProtected | aReadProtected);
    sym_DollarNewSymbol = create_sys("$NewSymbol", 0);
    sym_DollarNotebooks = create_sys("$Notebooks", aProtected);
    sym_DollarNumberMarks = create_sys("$NumberMarks", 0);
    sym_DollarOff = create_sys("$Off", aLocked | aProtected);
    sym_DollarOperatingSystem = create_sys("$OperatingSystem", aLocked | aProtected);
    sym_DollarOutput = create_sys("$Output", 0);
    sym_DollarOutputForms = create_sys("$OutputForms", aProtected);
    sym_DollarOutputSizeLimit = create_sys("$OutputSizeLimit", aReadProtected);
    sym_DollarPackages = create_sys("$Packages", aProtected);
    sym_DollarParentLink = create_sys("$ParentLink", 0);
    sym_DollarParentProcessID = create_sys("$ParentProcessID", 0);
    sym_DollarPasswordFile = create_sys("$PasswordFile", 0);
    sym_DollarPath = create_sys("$Path", 0);
    sym_DollarPathnameSeparator = create_sys("$PathnameSeparator", aProtected);
    sym_DollarPerformanceGoal = create_sys("$PerformanceGoal", aProtected | aReadProtected);
    sym_DollarPipeSupported = create_sys("$PipeSupported", aLocked | aProtected);
    sym_DollarPost = create_sys("$Post", 0);
    sym_DollarPre = create_sys("$Pre", 0);
    sym_DollarPreferencesDirectory = create_sys("$PreferencesDirectory", aProtected);
    sym_DollarPrePrint = create_sys("$PrePrint", 0);
    sym_DollarPreRead = create_sys("$PreRead", 0);
    sym_DollarPrintForms = create_sys("$PrintForms", aLocked | aProtected);
    sym_DollarPrintLiteral = create_sys("$PrintLiteral", aLocked | aProtected);
    sym_DollarProcessID = create_sys("$ProcessID", 0);
    sym_DollarProcessorType = create_sys("$ProcessorType", aLocked | aProtected);
    sym_DollarProductInformation = create_sys("$ProductInformation", aLocked | aProtected);
    sym_DollarProgramName = create_sys("$ProgramName", aProtected);
    sym_DollarRandomState = create_sys("$RandomState", 0);
    sym_DollarRecursionLimit = create_sys("$RecursionLimit", 0);
    sym_DollarReleaseNumber = create_sys("$ReleaseNumber", aLocked | aProtected);
    sym_DollarRootDirectory = create_sys("$RootDirectory", aProtected);
    sym_DollarSessionID = create_sys("$SessionID", aProtected);
    sym_DollarSetParentLink = create_sys("$SetParentLink", 0);
    sym_DollarSoundDisplay = create_sys("$SoundDisplay", 0);
    sym_DollarSoundDisplayFunction = create_sys("$SoundDisplayFunction", 0);
    sym_DollarSuppressInputFormHeads = create_sys("$SuppressInputFormHeads", aProtected);
    sym_DollarSynchronousEvaluation = create_sys("$SynchronousEvaluation", aReadProtected);
    sym_DollarSyntaxHandler = create_sys("$SyntaxHandler", 0);
    sym_DollarSystem = create_sys("$System", aLocked | aProtected);
    sym_DollarSystemCharacterEncoding = create_sys("$SystemCharacterEncoding", 0);
    sym_DollarSystemID = create_sys("$SystemID", aProtected);
    sym_DollarSystemWordLength = create_sys("$SystemWordLength", aLocked | aProtected);
    sym_DollarTemporaryPrefix = create_sys("$TemporaryPrefix", aProtected);
    sym_DollarTextStyle = create_sys("$TextStyle", 0);
    sym_DollarTimeUnit = create_sys("$TimeUnit", aLocked | aProtected);
    sym_DollarTimeZone = create_sys("$TimeZone", aLocked | aProtected);
    sym_DollarTopDirectory = create_sys("$TopDirectory", 0);
    sym_DollarTraceOff = create_sys("$TraceOff", 0);
    sym_DollarTraceOn = create_sys("$TraceOn", 0);
    sym_DollarTracePattern = create_sys("$TracePattern", 0);
    sym_DollarTracePostAction = create_sys("$TracePostAction", 0);
    sym_DollarTracePreAction = create_sys("$TracePreAction", 0);
    sym_DollarUrgent = create_sys("$Urgent", 0);
    sym_DollarUserAddOnsDirectory = create_sys("$UserAddOnsDirectory", aProtected);
    sym_DollarUserBaseDirectory = create_sys("$UserBaseDirectory", aProtected);
    sym_DollarUserDocumentsDirectory = create_sys("$UserDocumentsDirectory", aProtected);
    sym_DollarUserName = create_sys("$UserName", 0);
    sym_DollarVersion = create_sys("$Version", aLocked | aProtected);
    sym_DollarVersionNumber = create_sys("$VersionNumber", aLocked | aProtected);
